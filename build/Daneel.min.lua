-- Generated on Sun May 31 2015 11:22:03 GMT+0200 (Paris, Madrid (heure d’été))
function math.isinteger(a)local b=false;if type(a)=="number"then b=a==math.floor(a)end;return b end;function math.lerp(c,d,e,f)if f=="smooth"then e=e*2;if e<1 then e=0.5*e*e*e else e=e-2;e=0.5*e*e*e+2 end elseif f=="smooth in"then e=e*e*e elseif f=="smooth out"then e=e-1;e=e*e*e+1 end;return c+(d-c)*e end;function math.warpangle(g)if g>180 then g=g-360 elseif g<-180 then g=g+360 end;return g end;function math.round(h,i)if i~=nil then h=math.floor(h*10^i+0.5)/10^i else h=math.floor(h+0.5)end;return h end;function math.truncate(h,i)if i~=nil then h=math.floor(h*10^i)/10^i else h=math.floor(h)end;return h end;function tonumber2(j)local a=tonumber(j)if a==nil then j=tostring(j)local k="(%d+)"if j:find(".",1,true)then k="(%d+%.%d+)"end;a=j:match(j:gsub(k,"(%1)"))a=tonumber(a)end;return a end;function math.clamp(h,l,m)h=math.max(h,l)h=math.min(h,m)return h end;function string.totable(n)local o={}for p=1,#n do table.insert(o,n:sub(p,p))end;return o end;function string.ucfirst(n)local q=n:gsub("^%l",string.upper)return q end;function string.lcfirst(n)local q=n:gsub("^%u",string.lower)return q end;function string.split(n,r,s)local t={}if s==true then local u,v=n:find(r)if u~=nil then local k=r;r=n:sub(u,v)if string.startswith(n,r)then n=n:sub(#r+1,#n)end;if not n:endswith(r)then n=n..r end;for w in n:gmatch("(.-)"..k)do table.insert(t,w)end end else if n:find(r,1,true)~=nil then if string.startswith(n,r)then n=n:sub(#r+1,#n)end;if not n:endswith(r)then n=n..r end;local x=""local y=string.totable(n)local p=1;while p<=#y do local z=y[p]if z==r or n:sub(p,p-1+#r)==r then table.insert(t,x)x=""p=p+#r else x=x..z;p=p+1 end end;if#x>0 then table.insert(t,x)end end end;if#t==0 then t={n}end;return t end;function string.startswith(n,x)local q=n:sub(1,#x)==x;return q end;function string.endswith(n,x)local q=n:sub(#n-#x+1,#n)==x;return q end;function string.trimstart(n)local q=n:gsub("^%s+","")return q end;function string.trimend(n)local q=n:gsub("%s+$","")return q end;function string.trim(n)local q=n:gsub("^%s+",""):gsub("%s+$","")return q end;function string.reverse(n)local A=""for p=#n,1,-1 do A=A..n:sub(p,p)end;return A end;function string.fixcase(n,B)if type(B)=="string"then B={B}end;local C=n:lower()for p=1,#B do local D=B[p]if C==D:lower()then return D end end;return n end;function table.copy(o,E)E=E or false;local F={}if table.isarray(o)then for G,h in ipairs(o)do if type(h)=="table"and E==true then h=table.copy(h,E)end;table.insert(F,h)end else for G,h in pairs(o)do if type(h)=="table"and E==true then h=table.copy(h,E)end;F[G]=h end end;return F end;function table.containsvalue(o,h,H)if h==nil then return false end;if H==true and type(h)=='string'then h=h:lower()end;for G,I in pairs(o)do if H==true and type(I)=="string"then I=I:lower()end;if h==I then return true end end;return false end;function table.getlength(o,J)local K=0;if J~=nil then J=J:lower()end;for G,h in pairs(o)do if J==nil or type(G)==J then K=K+1 end end;return K end;function table.print(o)if o==nil then print("table.print( t ) : Provided table is nil.")return end;print("~~~~~ table.print("..tostring(o)..") ~~~~~ Start ~~~~~")local L=pairs;if table.getlength(o)==0 then print("Table is empty.")elseif table.isarray(o)then L=ipairs end;for G,h in L(o)do if type(G)=="string"then G='"'..G..'"'end;if type(h)=="string"then h='"'..h..'"'end;print(G,h)end;print("~~~~~ table.print("..tostring(o)..") ~~~~~ End ~~~~~")end;local M={}local N=nil;function table.printr(o,O,P,Q)O=math.clamp(O or 10,1,10)if P==nil then P=false end;Q=Q or 1;local R=string.rep("| - - - ",Q-1)if o==nil then print(level.."table.printr( t ) : Provided table is nil.")return end;if Q==1 then for p=1,#o do local h=o[p]if type(h)=="table"and getmetatable(h)==nil then end end;print("~~~~~ table.printr("..tostring(o)..") ~~~~~ Start ~~~~~")if N==nil then N=o end end;local L=pairs;if table.getlength(o)==0 then print(level,"Table is empty.")elseif table.isarray(o)then L=ipairs end;for G,h in L(o)do if type(G)=="string"then G='"'..G..'"'end;if type(h)=="string"then h='"'..h..'"'end;if type(h)=="table"and getmetatable(h)==nil then local S=nil;if P==false then S=M[h]end;if h==N then print(R..tostring(G),"Table currently being printed: "..tostring(h))elseif S~=nil then print(R..tostring(G),"Already printed table with key "..S..": "..tostring(h))elseif Q<=O then if P==false then M[h]=G end;print(R..tostring(G),h,"#"..table.getlength(h))table.printr(h,O,P,Q+1)else print(R..tostring(G),h,"#"..table.getlength(h))end else print(R..tostring(G),h)end end;if Q==1 then print("~~~~~ table.printr("..tostring(o)..") ~~~~~ End ~~~~~")M={}N=nil end end;function table.merge(...)return table.mergein({},...)end;function table.mergein(...)local T={...}local E=false;if#T>0 and type(T[#T])~="table"then E=table.remove(T)end;local U=table.remove(T,1)if U==nil then local V="table.mergein(): No table where passed as argument."if#T>0 then table.print(T)V="table.mergein(): First argument is nil. Other arguments are shown above."end;error(V)end;for p,o in ipairs(T)do local W=type(o)if W=="table"then if table.isarray(o)then for G,h in ipairs(o)do table.insert(U,h)end else for G,h in pairs(o)do if U[G]~=nil and E and type(h)=="table"and getmetatable(h)==nil then h=table.merge(U[G],h,true)end;U[G]=h end end end end;return U end;function table.havesamecontent(X,Y)if table.getlength(X)~=table.getlength(Y)then return false end;for G,h in pairs(X)do if X[G]~=Y[G]then return false end end;return true end;function table.combine(Z,_)if#Z~=#_ then print("table.combine( keys, values ) : WARNING : Arguments 'keys' and 'values' have different length :",#Z,#_)end;local F={}for p,G in pairs(Z)do F[G]=_[p]end;return F end;function table.removevalue(o,h,a0)if h==nil then return 0 end;local a1=0;for G,I in pairs(o)do if I==h then if math.isinteger(G)then table.remove(o,G)else o[G]=nil end;a1=a1+1;if a0~=nil and a1==a0 then break end end end;return a1 end;function table.getkeys(o)local Z={}for G,h in pairs(o)do table.insert(Z,G)end;return Z end;function table.getvalues(o)local _={}for G,h in pairs(o)do table.insert(_,h)end;return _ end;function table.getkey(o,h)local G=nil;for a2,a3 in pairs(o)do if h==a3 then G=a2 end end;return G end;function table.sortby(o,a4,a5)if a5==nil or not(a5=="asc"or a5=="desc")then a5="asc"end;local a6={}local a7={}for p=1,#o do local a8=o[p][a4]if a7[a8]==nil then table.insert(a6,a8)a7[a8]={}end;table.insert(a7[a8],o[p])end;if a5=="desc"then table.sort(a6,function(c,d)return c>d end)else table.sort(a6)end;o={}for p=1,#a6 do for a9,aa in pairs(a7[a6[p]])do table.insert(o,aa)end end;return o end;function table.getvalue(o,Z)Z=string.split(Z,".")local h=o;if h==_G then local ab=false;for G,h in pairs(_G)do if G==Z[1]then ab=true;break end end;if not ab then return nil end end;for p,G in ipairs(Z)do if h[G]==nil then h=nil;break else h=h[G]end end;return h end;function table.setvalue(o,Z,h)if Z:find(".",1,true)==nil then o[Z]=h else Z=string.split(Z,".")for p,G in ipairs(Z)do if p==#Z then o[G]=h else local ac=o[G]if ac==nil then ac={}o[G]=ac end;o=ac end end end end;function table.isarray(o,ad)local ae=0;for a2,a3 in pairs(o)do ae=ae+1;if type(a2)~="number"or not math.isinteger(a2)then return false end end;if ad==nil or ad==true then return ae==#o end;return true end;function table.reverse(o)local F={}for p=1,#o do table.insert(F,1,o[p])end;return F end;function table.shift(o,af)local G=nil;local h=nil;if table.isarray(o)then if#o>0 then G=1;h=table.remove(o,1)end else for a2,a3 in pairs(o)do G=a2;h=a3;break end;if G~=nil then o[G]=nil end end;if af==true then return G,h else return h end end;function table.reindex(o)if not table.isarray(o,false)then print("table.reindex( table ) : Provided table '"..tostring(o).."' is not an array.")end;local ag=1;for p,a3 in pairs(o)do if type(p)=="number"and p>ag then ag=p end end;local F={}for p=1,ag do if o[p]~=nil then table.insert(F,o[p])end end;return F end;function table.insertonce(o,ah,h)if h==nil then h=ah;ah=nil end;for G,I in pairs(o)do if h==I then return false end end;if ah==nil then table.insert(o,h)else table.insert(o,ah,h)end;return true end;Daneel={}Daneel.modules={moduleNames={}}setmetatable(Daneel.modules,{__newindex=function(ai,aj,ak)table.insert(Daneel.modules.moduleNames,aj)rawset(Daneel.modules,aj,ak)end})function string.split(n,r,s)local t={}if s then local u,v=n:find(r)if u~=nil then local k=r;r=n:sub(u,v)if string.startswith(n,r)then n=n:sub(#r+1,#n)end;if not n:endswith(r)then n=n..r end;if CS.IsWebPlayer then for w in n:gmatch("([^"..k.."]+)"..k)do table.insert(t,w)end else for w in n:gmatch("(.-)"..k)do table.insert(t,w)end end end else if n:find(r,1,true)~=nil then if string.startswith(n,r)then n=n:sub(#r+1,#n)end;if not n:endswith(r)then n=n..r end;local x=""local y=string.totable(n)local p=1;while p<=#y do local z=y[p]if z==r or n:sub(p,p-1+#r)==r then table.insert(t,x)x=""p=p+#r else x=x..z;p=p+1 end end;if#x>0 then table.insert(t,x)end end end;if#t==0 then t={n}end;return t end;function table.print(o)if o==nil then print("table.print( t ) : Provided table is nil.")return end;local al=tostring(o)local am=Daneel.Debug.ToRawString(o)if al~=am then al=al.." / "..am end;print("~~~~~ table.print("..al..") ~~~~~ Start ~~~~~")local L=pairs;if table.getlength(o)==0 then print("Table is empty.")elseif table.isarray(o)then L=ipairs end;for G,h in L(o)do print(G,h)end;print("~~~~~ table.print("..al..") ~~~~~ End ~~~~~")end;function table.getlength(o,J)local K=0;if J~=nil then J=J:lower()end;for G,h in pairs(o)do if J==nil or type(G)==J or Daneel.Debug.GetType(G):lower()==J then K=K+1 end end;return K end;Daneel.Utilities={}Daneel.Utilities.CaseProof=string.fixcase;function Daneel.Utilities.ReplaceInString(string,an)for ao,ap in pairs(an)do string=string:gsub(":"..ao,ap)end;return string end;function Daneel.Utilities.AllowDynamicGettersAndSetters(aq,ar)function aq.__index(as,G)local at=G;if type(G)=="string"then at=string.ucfirst(G)end;if G==at then if aq[G]~=nil then return aq[G]end;if ar~=nil then for p,au in ipairs(ar)do if au[G]~=nil then return au[G]end end end else local av="Get"..at;if aq[av]~=nil then return aq[av](as)elseif aq[G]~=nil then return aq[G]end;if ar~=nil then for p,au in ipairs(ar)do if au[av]~=nil then return au[av](as)elseif au[G]~=nil then return au[G]end end end end;return nil end;function aq.__newindex(as,G,h)local at=G;if type(G)=="string"then at=string.ucfirst(G)end;if G~=at then local av="Set"..at;if aq[av]~=nil then return aq[av](as,h)end end;return rawset(as,G,h)end end;Daneel.Utilities.ToNumber=tonumber2;local aw={}function Daneel.Utilities.ButtonExists(ax)if aw[ax]==nil then aw[ax]=Daneel.Debug.Try(function()CS.Input.WasButtonJustPressed(ax)end)end;return aw[ax]end;Daneel.Utilities.id=0;function Daneel.Utilities.GetId(ay)if ay~=nil and type(ay)=="table"then local az=rawget(ay,"id")if az~=nil then return az end;az=Daneel.Utilities.GetId()if ay.inner~=nil and not CS.IsWebPlayer then az=tonumber(tostring(ay.inner):match("%d+"))end;if az==nil then az="[no id]"end;rawset(ay,"id",az)return az else Daneel.Utilities.id=Daneel.Utilities.id+1;return Daneel.Utilities.id end end;Daneel.Cache={GetId=Daneel.Utilities.GetId}Daneel.Debug={}local n="string"local d="boolean"local aA="number"local o="table"local aB="function"local aC="userdata"local aD="Vector3"local aE={"s",n}local aF={"t",o}Daneel.Debug.functionArgumentsInfo={["math.isinteger"]={{"number"}},["math.lerp"]={{"a",aA},{"b",aA},{"factor",aA},{"easing",n,isOptional=true}},["math.warpangle"]={{"angle",aA}},["math.round"]={{"value",aA},{"decimal",aA,isOptional=true}},["math.truncate"]={{"value",aA},{"decimal",aA,isOptional=true}},["tonumber2"]={{"data"}},["math.clamp"]={{"value",aA},{"min",aA},{"max",aA}},["string.totable"]={aE},["string.ucfirst"]={aE},["string.lcfirst"]={aE},["string.trimstart"]={aE},["string.trimend"]={aE},["string.trim"]={aE},["string.endswith"]={aE,{"chunk",n}},["string.startswith"]={aE,{"chunk",n}},["string.split"]={aE,{"delimiter",n},{"delimiterIsPattern",d,isOptional=true}},["string.reverse"]={aE},["string.fixcase"]={aE,{"set",{n,o}}},["table.print"]={},["table.merge"]={},["table.mergein"]={},["table.getkeys"]={aF},["table.getvalues"]={aF},["table.reverse"]={aF},["table.reindex"]={aF},["table.getvalue"]={aF,{"keys",n}},["table.setvalue"]={aF,{"keys",n}},["table.getkey"]={aF,{"value"}},["table.copy"]={aF,{"recursive",d,isOptional=true}},["table.containsvalue"]={aF,{"value"},{"ignoreCase",d,isOptional=true}},["table.isarray"]={aF,{"strict",d,isOptional=true}},["table.shift"]={aF,{"returnKey",d,isOptional=true}},["table.getlength"]={aF,{"keyType",n,isOptional=true}},["table.havesamecontent"]={{"table1",o},{"table2",o}},["table.combine"]={aF,{"values","table"},{"returnFalseIfNotSameLength",d,isOptional=true}},["table.removevalue"]={aF,{"value"},{"maxRemoveCount",aA,isOptional=true}},["table.sortby"]={aF,{"property",n},{"orderBy",n,isOptional=true}}}local aG={"transform","Transform"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["Daneel.Utilities.ReplaceInString"]={{"string",n},{"replacements",o}},["Daneel.Utilities.ButtonExists"]={{"buttonName",n}},["Transform.SetPosition"]={aG,{"position",aD}},["Transform.SetLocalPosition"]={aG,{"position",aD}},["Transform.SetEulerAngles"]={aG,{"angles",aD}},["Transform.SetLocalEulerAngles"]={aG,{"angles",aD}},["Transform.RotateEulerAngles"]={aG,{"angles",aD}},["Transform.RotateLocalEulerAngles"]={aG,{"angles",aD}},["Transform.Move"]={aG,{"offset",aD}},["Transform.MoveLocal"]={aG,{"offset",aD}},["Transform.MoveOriented"]={aG,{"offset",aD}},["Transform.LookAt"]={aG,{"target",aD}},["Transform.SetOrientation"]={aG,{"orientation","Quaternion"}},["Transform.SetLocalOrientation"]={aG,{"orientation","Quaternion"}},["Transform.Rotate"]={aG,{"orientation","Quaternion"}},["Transform.RotateLocal"]={aG,{"orientation","Quaternion"}}})function Daneel.Debug.CheckArgType(aH,aI,aJ,aK)if type(aH)=="table"and getmetatable(aH)==GameObject and aH.inner==nil then error(aK.."Provided argument '"..aI.."' is a destroyed game object '"..tostring(aH))end;if not Daneel.Config.debug.enableDebug then return Daneel.Debug.GetType(aH)end;local aL="Daneel.Debug.CheckArgType(argument, argumentName, expectedArgumentTypes[, p_errorHead]) : "local W=type(aI)if W~="string"then error(aL.."Argument 'argumentName' is of type '"..W.."' with value '"..tostring(aI).."' instead of 'string'.")end;W=type(aJ)if W~="string"and W~="table"then error(aL.."Argument 'expectedArgumentTypes' is of type '"..W.."' with value '"..tostring(aJ).."' instead of 'string' or 'table'.")end;if W=="string"then aJ={aJ}elseif#aJ<=0 then error(aL.."Argument 'expectedArgumentTypes' is an empty table.")end;W=type(aK)if W~="nil"and W~="string"then error(aL.."Argument 'p_errorHead' is of type '"..W.."' with value '"..tostring(aK).."' instead of 'string'.")end;if aK==nil then aK=""end;W=Daneel.Debug.GetType(aH)local aM=type(aH)for p,aN in ipairs(aJ)do if W==aN or aM==aN then return aN end end;error(aK.."Argument '"..aI.."' is of type '"..W.."' with value '"..tostring(aH).."' instead of '"..table.concat(aJ,"', '").."'.")end;function Daneel.Debug.CheckOptionalArgType(aH,aI,aJ,aK,aO)if aH==nil then return aO end;if not Daneel.Config.debug.enableDebug then return aH end;local aL="Daneel.Debug.CheckOptionalArgType(argument, argumentName, expectedArgumentTypes[, p_errorHead, defaultValue]) : "local W=type(aI)if W~="string"then error(aL.."Argument 'argumentName' is of type '"..W.."' with value '"..tostring(aI).."' instead of 'string'.")end;W=type(aJ)if W~="string"and W~="table"then error(aL.."Argument 'expectedArgumentTypes' is of type '"..W.."' with value '"..tostring(aJ).."' instead of 'string' or 'table'.")end;if W=="string"then aJ={aJ}elseif#aJ<=0 then error(aL.."Argument 'expectedArgumentTypes' is an empty table.")end;W=type(aK)if W~="nil"and W~="string"then error(aL.."Argument 'p_errorHead' is of type '"..W.."' with value '"..tostring(aK).."' instead of 'string'.")end;if aK==nil then aL=""end;W=Daneel.Debug.GetType(aH)local aM=type(aH)for p,aN in ipairs(aJ)do if W==aN or aM==aN then return aH end end;error(aK.."Optional argument '"..aI.."' is of type '"..W.."' with value '"..tostring(aH).."' instead of '"..table.concat(aJ,"', '").."'.")end;function Daneel.Debug.GetType(ay,aP)local aL="Daneel.Debug.GetType( object[, luaTypeOnly] ) : "local W=type(aP)if W~="nil"and W~="boolean"then error(aL.."Argument 'luaTypeOnly' is of type '"..W.."' with value '"..tostring(aP).."' instead of 'boolean'.")end;if aP==nil then aP=false end;W=type(ay)if not aP and W=="table"then local aQ=getmetatable(ay)if aQ~=nil then if getmetatable(aQ)==Script then return"ScriptedBehavior"end;if Daneel.Config.objectsByType~=nil then for type,ay in pairs(Daneel.Config.objectsByType)do if aQ==ay then return type end end end;for type,ay in pairs(_G)do if aQ==ay then return type end end end end;return W end;oerror=error;function Daneel.Debug.SetNewError()function error(aR,aS)if Daneel.Config.debug.enableDebug and aS~=true then Daneel.Debug.StackTrace.Print()end;oerror(aR)end end;function Daneel.Debug.Disable(aT)if aT~=nil then aT=" : "..tostring(aT)end;print("Daneel.Debug.Disable()"..aT)error=oerror;Daneel.Config.debug.enableDebug=false end;function Daneel.Debug.ToRawString(j)if j==nil and Daneel.Config.debug.enableDebug then print("WARNING : Daneel.Debug.ToRawString( data ) : Argument 'data' is nil.")return nil end;local aU=nil;local aQ=getmetatable(j)if aQ~=nil then if aQ.__tostring~=nil then local aV=aQ.__tostring;aQ.__tostring=nil;aU=tostring(j)aQ.__tostring=aV end end;if aU==nil then aU=tostring(j)end;return aU end;function Daneel.Debug.GetNameFromValue(h)Daneel.Debug.StackTrace.BeginFunction("Daneel.Debug.GetNameFromValue",h)local aL="Daneel.Debug.GetNameFromValue(value) : "if h==nil then error(aL.." Argument 'value' is nil.")end;local aW=table.getkey(Daneel.Config.objectsByType,h)if aW==nil then aW=table.getkey(_G,h)end;Daneel.Debug.StackTrace.EndFunction()return aW end;function Daneel.Debug.CheckArgValue(aH,aI,aX,aK,aO)Daneel.Debug.StackTrace.BeginFunction("Daneel.Debug.CheckArgValue",aH,aI,aX,aK)local aL="Daneel.Debug.CheckArgValue(argument, argumentName, expectedArgumentValues[, p_errorHead, defaultValue]) : "Daneel.Debug.CheckArgType(aI,"argumentName","string",aL)if aX==nil then error(aL.."Argument 'expectedArgumentValues' is nil.")end;Daneel.Debug.CheckOptionalArgType(aK,"p_errorHead","string",aL)if type(aX)~="table"then aX={aX}elseif#aX==0 then error(aL.."Argument 'expectedArgumentValues' is an empty table.")end;local aY=false;if type(aH)=="string"then for p,aZ in ipairs(aX)do if aH:lower()==aZ:lower()then aH=aZ;aY=true;break end end else for p,aZ in ipairs(aX)do if aH==aZ then aY=true;break end end end;if not aY then if aO~=nil then aH=aO else for p,h in ipairs(aX)do aX[p]=tostring(h)end;error(aK.."The value '"..tostring(aH).."' of argument '"..aI.."' is not one of '"..table.concat(aX,"', '").."'.")end end;Daneel.Debug.StackTrace.EndFunction()return aH end;local a_=Behavior;Daneel.Debug.tryGameObject=nil;function Daneel.Debug.Try(b0)Daneel.Debug.StackTrace.BeginFunction("Daneel.Debug.Try",b0)local aL="Daneel.Debug.Try( _function ) : "Daneel.Debug.CheckArgType(b0,"_function",{"function","userdata"},aL)local b1=Daneel.Debug.tryGameObject;if b1==nil or b1.inner==nil then b1=CraftStudio.CreateGameObject("Daneel_Debug_Try")Daneel.Debug.tryGameObject=b1 end;local b2=false;b1:CreateScriptedBehavior(a_,{debugTry=true,testFunction=b0,successCallback=function()b2=true end})Daneel.Debug.StackTrace.EndFunction()return b2 end;function Daneel.Debug.RegisterFunction(b3,b4)if not Daneel.Config.debug.enableDebug then return end;local b5=table.getvalue(_G,b3)local b6=b3;local b7=b4.script;if b7~=nil then local b8=string.split(b3,".")local b9=b8[1]local av=b8[2]b6=av;b5=b7[av]if not b7.toStringIsSet then b7.__tostring=function(ba)local az=Daneel.Utilities.GetId(ba)or"[no id]"return"ScriptedBehavior: "..az..": '"..b9 .."'"end;b7.toStringIsSet=true end;local bb=b4[1]if bb==nil or bb[2]~="ScriptedBehavior"then table.insert(b4,1,{name="self",type="ScriptedBehavior"})end end;if b5~=nil then local bc=b4.includeInStackTrace or Daneel.Config.debug.enableStackTrace;local aL=b3 .."( "for p,T in ipairs(b4)do if T.name==nil then T.name=T[1]end;aL=aL..T.name..", "end;aL=aL:sub(1,#aL-2)aL=aL.." ) : "local bd=function(...)local be={...}if bc then Daneel.Debug.StackTrace.BeginFunction(b3,...)end;for p,T in ipairs(b4)do T.type=T.type or T[2]if T.type~=nil then if T.isOptional==true then Daneel.Debug.CheckOptionalArgType(be[p],T.name,T.type,aL)else Daneel.Debug.CheckArgType(be[p],T.name,T.type,aL)end elseif be[p]==nil and not T.isOptional then error(aL.."Argument '"..T.name.."' is nil.")end end;local bf={b5(...)}if bc then Daneel.Debug.StackTrace.EndFunction()end;return unpack(bf)end;if b7~=nil then b7[b6]=bd else table.setvalue(_G,b3,bd)end else print("Daneel.Debug.RegisterFunction(): Function with name '"..b3 .."' was not found.")end end;function Daneel.Debug.RegisterScript(b7)if type(b7)~="table"or getmetatable(b7)~=Script then error("Daneel.Debug.SetupScript(script): Provided argument is not a script asset. Within a script, the 'Behavior' variable is the script asset.")end;local bg=Daneel.Debug.functionArgumentsInfo;local bh={"Update","inner"}local b9=Map.GetPathInPackage(b7)for b3,L in pairs(b7)do local bi=b9 .."."..b3;if not b3:startswith("__")and not table.containsvalue(bh,b3)and bg[bi]==nil then bg[bi]={script=b7}end end end;function Daneel.Debug.RegisterObject(ay)local bj=ay;local bk=nil;if type(ay)=="string"then bk=ay;ay=table.getvalue(Daneel.Config.objectsByType,bk)if ay==nil then ay=table.getvalue(_G,bk)end else bk=Daneel.Debug.GetNameFromValue(ay)end;if ay==nil or bk==nil then print("Daneel.Debug.RegisterObject(): object or name not found",bj,ay,bk)return end;local bg=Daneel.Debug.functionArgumentsInfo;local bh={"Load","DefaultConfig","UserConfig","Awake","Start","Update","New","inner","GetId","GetName"}for b3,L in pairs(ay)do if type(L)=="function"or type(L)=="userdata"then local bi=bk.."."..b3;if not b3:startswith("__")and not b3:startswith("o")and not table.containsvalue(bh,b3)and bg[bi]==nil then bg[bi]={}end end end end;Daneel.Debug.StackTrace={messages={}}function Daneel.Debug.StackTrace.BeginFunction(bl,...)if not Daneel.Config.debug.enableDebug or not Daneel.Config.debug.enableStackTrace then return end;if#Daneel.Debug.StackTrace.messages>200 then print("WARNING : your StackTrace is more than 200 items long ! Emptying the StackTrace now. Did you forget to write a 'EndFunction()' somewhere ?")Daneel.Debug.StackTrace.messages={}end;local aL="Daneel.Debug.StackTrace.BeginFunction( functionName[, ...] ) : "Daneel.Debug.CheckArgType(bl,"functionName","string",aL)local V=bl.."( "local T={...}if#T>0 then for p,aH in ipairs(T)do if type(aH)=="string"then V=V..'"'..tostring(aH)..'", 'else V=V..tostring(aH)..", "end end;V=V:sub(1,#V-2)end;V=V.." )"table.insert(Daneel.Debug.StackTrace.messages,V)end;function Daneel.Debug.StackTrace.EndFunction()if not Daneel.Config.debug.enableDebug or not Daneel.Config.debug.enableStackTrace then return end;table.remove(Daneel.Debug.StackTrace.messages)end;function Daneel.Debug.StackTrace.Print()if not Daneel.Config.debug.enableDebug or not Daneel.Config.debug.enableStackTrace then return end;local bm=Daneel.Debug.StackTrace.messages;Daneel.Debug.StackTrace.messages={}print("~~~~~ Daneel.Debug.StackTrace ~~~~~")if#bm<=0 then print("No message in the StackTrace.")else for p,V in ipairs(bm)do if p<10 then p="0"..p end;print("#"..p.." "..V)end end end;Daneel.Event={events={},persistentEvents={}}function Daneel.Event.Listen(bn,bo,bp)local aL="Daneel.Event.Listen( eventName, functionOrObject[, isPersistent] ) : "local bq=type(bo)local br=bn;if type(bn)=="string"then br={bn}end;for p,bn in pairs(br)do if Daneel.Event.events[bn]==nil then Daneel.Event.events[bn]={}end;if Daneel.Event.persistentEvents[bn]==nil then Daneel.Event.persistentEvents[bn]={}end;if not table.containsvalue(Daneel.Event.events[bn],bo)and not table.containsvalue(Daneel.Event.persistentEvents[bn],bo)then if bp==true and bq=="table"then local aQ=getmetatable(bo)if aQ~=nil and aQ==GameObject or table.containsvalue(Daneel.Config.componentObjectsByType,aQ)then if Daneel.Config.debug.enableDebug then print(aL.."Game objects and components can't be persistent listeners",bo)end;bp=false end end;local bs=Daneel.Event.events;if bp==true then bs=Daneel.Event.persistentEvents end;table.insert(bs[bn],bo)end end end;function Daneel.Event.StopListen(bn,bo)if type(bn)~="string"then bo=bn;bn=nil end;Daneel.Debug.StackTrace.BeginFunction("Daneel.Event.StopListen",bn,bo)local aL="Daneel.Event.StopListen( eventName, functionOrObject ) : "Daneel.Debug.CheckOptionalArgType(bn,"eventName","string",aL)Daneel.Debug.CheckArgType(bo,"functionOrObject",{"table","function"},aL)local br=bn;if type(bn)=="string"then br={bn}end;if br==nil then br=table.merge(table.getkeys(Daneel.Event.events),table.getkeys(Daneel.Event.persistentEvents))end;for p,bn in pairs(br)do local bt=Daneel.Event.events[bn]if bt~=nil then table.removevalue(bt,bo)end;bt=Daneel.Event.persistentEvents[bn]if bt~=nil then table.removevalue(bt,bo)end end;Daneel.Debug.StackTrace.EndFunction()end;function Daneel.Event.Fire(ay,bn,...)local T={...}Daneel.Debug.StackTrace.BeginFunction("Daneel.Event.Fire",ay,bn,...)local aL="Daneel.Event.Fire( [object, ]eventName[, ...] ) : "local W=type(ay)if W=="string"then if bn~=nil then table.insert(T,1,bn)end;bn=ay;ay=nil elseif W~="nil"then Daneel.Debug.CheckArgType(ay,"object","table",aL)Daneel.Debug.CheckArgType(bn,"eventName","string",aL)end;local bt={ay}if ay==nil then if Daneel.Event.events[bn]~=nil then bt=Daneel.Event.events[bn]end;if Daneel.Event.persistentEvents[bn]~=nil then bt=table.merge(bt,Daneel.Event.persistentEvents[bn])end end;local bu={}for p=1,#bt do local bv=bt[p]local bq=type(bv)if bq=="function"or bq=="userdata"then if bv(unpack(T))==false then table.insert(bu,bv)end else local aQ=getmetatable(bv)local bw=not bv.isDestroyed;if aQ==GameObject and bv.inner==nil then bw=false end;if bw then local bx={}if bv.listenersByEvent~=nil and bv.listenersByEvent[bn]~=nil then bx=bv.listenersByEvent[bn]end;local L=rawget(bv,bn)if L~=nil then table.insert(bx,L)end;for a9=1,#bx do bx[a9](...)end;if aQ==GameObject then local by=T[1]if by==bv then table.remove(T,1)end;if#T==1 and type(T[1])=="table"then T=T[1]end;bv:SendMessage(bn,T)end end end end;for p=1,#bu do Daneel.Event.StopListen(bn,bu[p])end;Daneel.Debug.StackTrace.EndFunction()end;function GameObject.FireEvent(b1,bn,...)Daneel.Event.Fire(b1,bn,...)end;function Daneel.Event.AddEventListener(ay,bn,bv)if ay.listenersByEvent==nil then ay.listenersByEvent={}end;if ay.listenersByEvent[bn]==nil then ay.listenersByEvent[bn]={}end;if not table.containsvalue(ay.listenersByEvent[bn],bv)then table.insert(ay.listenersByEvent[bn],bv)elseif Daneel.Debug.enableDebug==true then print("Daneel.Event.AddEventListener(): "..tostring(bv).." already listen for event '"..bn.."' on object: ",ay)end end;function GameObject.AddEventListener(b1,bn,bv)Daneel.Event.AddEventListener(b1,bn,bv)end;function Daneel.Event.RemoveEventListener(ay,bn,bv)if ay.listenersByEvent~=nil and ay.listenersByEvent[bn]~=nil then if bv~=nil then table.removevalue(ay.listenersByEvent[bn],bv)else ay.listenersByEvent[bn]=nil end end end;function GameObject.RemoveEventListener(b1,bn,bv)Daneel.Event.RemoveEventListener(b1,bn,bv)end;local bz={"gameObject","GameObject"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["Daneel.Event.Listen"]={{"eventName",{n,o}},{"functionOrObject",{o,aB,aC}},{"isPersistent",d,isOptional=true}},["GameObject.FireEvent"]={bz,{"eventName",n}},["Daneel.Event.AddEventListener"]={{"object","table"},{"eventName",n},{"listener",{aB,aC}}},["GameObject.AddEventListener"]={bz,{"eventName",n},{"listener",{aB,aC}}},["Daneel.Event.RemoveEventListener"]={{"object","table"},{"eventName",n},{"listener",{aB,aC},isOptional=true}},["GameObject.RemoveEventListener"]={bz,{"eventName",n},{"listener",{aB,aC},isOptional=true}}})Daneel.Time={realTime=0.0,realDeltaTime=0.0,time=0.0,deltaTime=0.0,timeScale=1.0,frameCount=0}function Daneel.DefaultConfig()local bA={debug={enableDebug=false,enableStackTrace=false},objectsByType={GameObject=GameObject,Vector3=Vector3,Quaternion=Quaternion,Plane=Plane,Ray=Ray},componentObjectsByType={ScriptedBehavior=ScriptedBehavior,ModelRenderer=ModelRenderer,MapRenderer=MapRenderer,Camera=Camera,Transform=Transform,Physics=Physics,TextRenderer=TextRenderer,NetworkSync=NetworkSync},componentTypes={},assetObjectsByType={Script=Script,Model=Model,ModelAnimation=ModelAnimation,Map=Map,TileSet=TileSet,Sound=Sound,Scene=Scene,Font=Font},assetTypes={}}return bA end;Daneel.Config=Daneel.DefaultConfig()Daneel.Config.assetTypes=table.getkeys(Daneel.Config.assetObjectsByType)function Daneel.Load()if Daneel.isLoaded then return end;Daneel.isLoading=true;local bB=nil;if Daneel.UserConfig~=nil then table.mergein(Daneel.Config,Daneel.UserConfig(),true)end;for p,b3 in ipairs(Daneel.modules.moduleNames)do local bC=Daneel.modules[b3]if bC.isConfigLoaded~=true then bC.isConfigLoaded=true;if bC.Config==nil then if bC.DefaultConfig~=nil then bC.Config=bC.DefaultConfig()else bC.Config={}end end;if bC.UserConfig~=nil then table.mergein(bC.Config,bC.UserConfig(),true)end;if bC.Config.objectsByType~=nil then table.mergein(Daneel.Config.objectsByType,bC.Config.objectsByType)end;if bC.Config.componentObjectsByType~=nil then table.mergein(Daneel.Config.componentObjectsByType,bC.Config.componentObjectsByType)table.mergein(Daneel.Config.objectsByType,bC.Config.componentObjectsByType)end end end;table.mergein(Daneel.Config.objectsByType,Daneel.Config.componentObjectsByType,Daneel.Config.assetObjectsByType)for bD,bE in pairs(Daneel.Config.componentObjectsByType)do Daneel.Utilities.AllowDynamicGettersAndSetters(bE,{Component})if bD~="ScriptedBehavior"then bE["__tostring"]=function(bF)return bD..": "..bF:GetId()end end end;table.mergein(Daneel.Config.componentTypes,table.getkeys(Daneel.Config.componentObjectsByType))for bG,bH in pairs(Daneel.Config.assetObjectsByType)do Daneel.Utilities.AllowDynamicGettersAndSetters(bH,{Asset})bH["__tostring"]=function(bI)return bG..": "..Daneel.Utilities.GetId(bI)..": '"..Map.GetPathInPackage(bI).."'"end end;if Daneel.Config.debug.enableDebug then if Daneel.Config.debug.enableStackTrace then Daneel.Debug.SetNewError()end;for av,j in pairs(Daneel.Debug.functionArgumentsInfo)do Daneel.Debug.RegisterFunction(av,j)end end;CS.IsWebPlayer=type(Camera.ProjectionMode.Orthographic)=="number"Daneel.Debug.StackTrace.BeginFunction("Daneel.Load")for p,b3 in ipairs(Daneel.modules.moduleNames)do local bC=Daneel.modules[b3]if bC.isLoaded~=true then bC.isLoaded=true;if type(bC.Load)=="function"then bC.Load()end end end;Daneel.isLoaded=true;Daneel.isLoading=false;if Daneel.Config.debug.enableDebug then print("~~~~~ Daneel loaded ~~~~~")end;Daneel.moduleUpdateFunctions={}for p,b3 in ipairs(Daneel.modules.moduleNames)do local bC=Daneel.modules[b3]if bC.doNotCallUpdate~=true then if type(bC.Update)=="function"and not table.containsvalue(Daneel.moduleUpdateFunctions,bC.Update)then table.insert(Daneel.moduleUpdateFunctions,bC.Update)end end end;Daneel.Debug.StackTrace.EndFunction()end;function Behavior.Awake(bJ)if bJ.debugTry==true then CraftStudio.Destroy(bJ)bJ.testFunction()bJ.successCallback()return end;if table.getvalue(_G,"LOAD_DANEEL")~=nil and LOAD_DANEEL==false then return end;if Daneel.isAwake then if Daneel.Config.debug.enableDebug then print("Daneel:Awake() : You tried to load Daneel twice ! The 'Daneel' scripted behavior is on two game objects inside the same scene. This time, it was on "..tostring(bJ.gameObject))end;CS.Destroy(bJ)return end;Daneel.isAwake=true;Daneel.Event.Listen("OnNewSceneWillLoad",function()Daneel.isAwake=false end)Daneel.Load()Daneel.Debug.StackTrace.messages={}Daneel.Debug.StackTrace.BeginFunction("Daneel.Awake")for p,b3 in ipairs(Daneel.modules.moduleNames)do local bC=Daneel.modules[b3]if type(bC.Awake)=="function"then bC.Awake()end end;if Daneel.Config.debug.enableDebug then print("~~~~~ Daneel awake ~~~~~")end;Daneel.Event.Fire("OnAwake")Daneel.Debug.StackTrace.EndFunction()end;function Behavior.Start(bJ)if bJ.debugTry then return end;Daneel.Debug.StackTrace.BeginFunction("Daneel.Start")for p,b3 in ipairs(Daneel.modules.moduleNames)do local bC=Daneel.modules[b3]if type(bC.Start)=="function"then bC.Start()end end;if Daneel.Config.debug.enableDebug then print("~~~~~ Daneel started ~~~~~")end;Daneel.Event.Fire("OnStart")Daneel.Debug.StackTrace.EndFunction()end;function Behavior.Update(bJ)if bJ.debugTry then return end;local bK=os.clock()Daneel.Time.realDeltaTime=bK-Daneel.Time.realTime;Daneel.Time.realTime=bK;Daneel.Time.deltaTime=Daneel.Time.realDeltaTime*Daneel.Time.timeScale;Daneel.Time.time=Daneel.Time.time+Daneel.Time.deltaTime;Daneel.Time.frameCount=Daneel.Time.frameCount+1;for p=1,#Daneel.moduleUpdateFunctions do Daneel.moduleUpdateFunctions[p]()end end;MouseInput={buttonExists={LeftMouse=false,RightMouse=false,WheelUp=false,WheelDown=false},lastLeftClickFrame=0,components={}}Daneel.modules.MouseInput=MouseInput;function MouseInput.DefaultConfig()return{doubleClickDelay=20,componentObjectsByType={MouseInput=MouseInput}}end;MouseInput.Config=MouseInput.DefaultConfig()function MouseInput.Load()for ax,ai in pairs(MouseInput.buttonExists)do MouseInput.buttonExists[ax]=Daneel.Utilities.ButtonExists(ax)end end;function MouseInput.Awake()MouseInput.components={}end;function MouseInput.Update(bL)local bM=false;local bN=MouseInput.components;if bL~=nil then bM=true;bN={bL}end;if#bN==0 then return end;local bO=CS.Input.GetMouseDelta()local bP=false;if bO.x~=0 or bO.y~=0 then bP=true end;local bQ=false;local bR=false;local bS=false;if MouseInput.buttonExists.LeftMouse then bQ=CS.Input.WasButtonJustPressed("LeftMouse")bR=CS.Input.IsButtonDown("LeftMouse")bS=CS.Input.WasButtonJustReleased("LeftMouse")end;local bT=false;if MouseInput.buttonExists.RightMouse then bT=CS.Input.WasButtonJustPressed("RightMouse")end;local bU=false;if MouseInput.buttonExists.WheelUp then bU=CS.Input.WasButtonJustPressed("WheelUp")end;local bV=false;if MouseInput.buttonExists.WheelDown then bV=CS.Input.WasButtonJustPressed("WheelDown")end;if bM==true or bP==true or bQ==true or bR==true or bS==true or bT==true or bU==true or bV==true then local bW=false;if bQ then bW=Daneel.Time.frameCount<=MouseInput.lastLeftClickFrame+MouseInput.Config.doubleClickDelay;MouseInput.lastLeftClickFrame=Daneel.Time.frameCount end;local bX=false;for p=1,#bN do local bF=bN[p]local bY=bF.gameObject;if bY.inner~=nil and not bY.isDestroyed and bY.camera~=nil then local bZ=bY.camera:CreateRay(CS.Input.GetMousePosition())for a9=1,#bF._tags do local b_=bF._tags[a9]local c0=GameObject.GetWithTag(b_)for a2=1,#c0 do local b1=c0[a2]local c1=bZ:IntersectsGameObject(b1)if c1~=nil then if not b1.isMouseOver then b1.isMouseOver=true;Daneel.Event.Fire(b1,"OnMouseEnter",b1)end elseif b1.isMouseOver==true then b1.isMouseOver=false;Daneel.Event.Fire(b1,"OnMouseExit",b1)end;if b1.isMouseOver==true then Daneel.Event.Fire(b1,"OnMouseOver",b1,c1)if bQ==true then Daneel.Event.Fire(b1,"OnClick",b1)if bW==true then Daneel.Event.Fire(b1,"OnDoubleClick",b1)end end;if bR==true and bP==true then Daneel.Event.Fire(b1,"OnDrag",b1)end;if bS==true then Daneel.Event.Fire(b1,"OnLeftClickReleased",b1)end;if bT==true then Daneel.Event.Fire(b1,"OnRightClick",b1)end;if bU==true then Daneel.Event.Fire(b1,"OnWheelUp",b1)end;if bV==true then Daneel.Event.Fire(b1,"OnWheelDown",b1)end end end end else bN[p]=nil;bX=true end end;if bX==true and bL==nil then MouseInput.components=table.reindex(bN)end end end;function MouseInput.New(b1,c2)if b1.camera==nil then error("MouseInput.New(gameObject, params) : "..tostring(b1).." has no Camera component.")return end;local bF={_tags={}}bF.gameObject=b1;b1.mouseInput=bF;setmetatable(bF,MouseInput)if c2~=nil then bF:Set(c2)end;table.insert(MouseInput.components,bF)return bF end;function MouseInput.SetTags(bL,c3)if type(c3)=="string"then c3={c3}end;bL._tags=c3 end;function MouseInput.GetTags(bL)return bL._tags end;local c4={"mouseInput","MouseInput"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["MouseInput.New"]={bz,{"params","table",isOptional=true}},["MouseInput.SetTags"]={c4,{"tags",{n,o}}},["MouseInput.GetTags"]={c4}})Trigger={components={}}Daneel.modules.Trigger=Trigger;function Trigger.DefaultConfig()return{componentObjectsByType={Trigger=Trigger}}end;Trigger.Config=Trigger.DefaultConfig()function Trigger.Awake()Trigger.components={}end;function Trigger.Update()local bX=false;for p=1,#Trigger.components do local c5=Trigger.components[p]local c6=c5.gameObject;if c6.inner~=nil and not c6.isDestroyed then if c5._updateInterval>1 and Daneel.Time.frameCount%c5._updateInterval==0 then local c7=c6.transform:GetPosition()for a9=1,#c5._tags do local b_=c5._tags[a9]local c0=GameObject.GetWithTag(b_)for a2=1,#c0 do local b1=c0[a2]if b1~=c6 then local c8=c5:IsGameObjectInRange(b1,c7)local c9=table.containsvalue(c5.gameObjectsInRangeLastUpdate,b1)if c8 then if c9 then Daneel.Event.Fire(b1,"OnTriggerStay",b1,c6)Daneel.Event.Fire(c6,"OnTriggerStay",c6,b1)else table.insert(c5.gameObjectsInRangeLastUpdate,b1)Daneel.Event.Fire(b1,"OnTriggerEnter",b1,c6)Daneel.Event.Fire(c6,"OnTriggerEnter",c6,b1)end elseif c9 then table.removevalue(c5.gameObjectsInRangeLastUpdate,b1)Daneel.Event.Fire(b1,"OnTriggerExit",b1,c6)Daneel.Event.Fire(c6,"OnTriggerExit",c6,b1)end end end end end else Trigger.components[p]=nil;bX=true end end;if bX==true then Trigger.components=table.reindex(Trigger.components)end end;function Trigger.New(b1,c2)local c5={_range=1,_updateInterval=5,_tags={},gameObjectsInRangeLastUpdate={}}c5.gameObject=b1;b1.trigger=c5;setmetatable(c5,Trigger)if c2~=nil then c5:Set(c2)end;table.insert(Trigger.components,c5)return c5 end;function Trigger.SetTags(c5,c3)if type(c3)=="string"then c3={c3}end;c5._tags=c3 end;function Trigger.GetTags(c5)return c5._tags end;function Trigger.SetRange(c5,ca)c5._range=math.clamp(ca,0,9999)end;function Trigger.GetRange(c5)return c5._range end;function Trigger.SetUpdateInterval(c5,cb)c5._updateInterval=math.clamp(cb,0,9999)end;function Trigger.GetUpdateInterval(c5)return c5._updateInterval end;function Trigger.GetGameObjectsInRange(c5)local c7=c5.gameObject.transform:GetPosition()local cc={}for p=1,#c5._tags do local c0=GameObject.GetWithTag(c5._tags[p])for a9=1,#c0 do local b1=c0[a9]if b1~=c5.gameObject and c5:IsGameObjectInRange(b1,c7)then table.insertonce(cc,b1)end end end;return cc end;function Trigger.IsGameObjectInRange(c5,b1,c7)local aL="Behavior:IsGameObjectInRange( gameObject[, triggerPosition] )"local c6=c5.gameObject;if c7==nil then c7=c6.transform:GetPosition()end;local cd=false;local ce=b1.transform:GetPosition()-c7;local cf=ce:SqrLength()if c5._range>0 and cf<=c5._range^2 then cd=true elseif c5._range<=0 then if c5.ray==nil then c5.ray=Ray.New(Vector3.New(0),Vector3.New(0))end;local bZ=c5.ray;bZ.position=c7;bZ.direction=ce;local cg=nil;if c6.modelRenderer~=nil then cg=bZ:IntersectsModelRenderer(c6.modelRenderer)elseif c6.mapRenderer~=nil then cg=bZ:IntersectsMapRenderer(c6.mapRenderer)end;if b1.modelRenderer~=nil then cf=bZ:IntersectsModelRenderer(b1.modelRenderer)^2 elseif b1.mapRenderer~=nil then cf=bZ:IntersectsMapRenderer(b1.mapRenderer)^2 end;if cg~=nil and cf<=cg^2 then cd=true end end;return cd end;local ch={"trigger","Trigger"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["Trigger.New"]={bz,{"params","table",isOptional=true}},["Trigger.SetTags"]={ch,{"tags",{n,o}}},["Trigger.GetTags"]={ch},["Trigger.SetRange"]={ch,{"range",aA}},["Trigger.GetRange"]={ch},["Trigger.SetUpdateInterval"]={ch,{"updateInterval",aA}},["Trigger.GetUpdateInterval"]={ch},["Trigger.GetGameObjectsInRange"]={ch},["Trigger.IsGameObjectInRange"]={ch,bz,{"triggerPosition","Vector3",isOptional=true}}})Lang={dictionariesByLanguage={english={}},cache={},gameObjectsToUpdate={},doNotCallUpdate=true}Daneel.modules.Lang=Lang;function Lang.DefaultConfig()return{default=nil,current=nil,searchInDefault=true,keyNotFound="langkeynotfound"}end;Lang.Config=Lang.DefaultConfig()function Lang.Load()local ci=nil;for cj,ck in pairs(Lang.dictionariesByLanguage)do local cl=cj:lower()if cl~=cj then Lang.dictionariesByLanguage[cl]=ck;Lang.dictionariesByLanguage[cj]=nil end;if ci==nil then ci=cl end end;if ci==nil then if Daneel.Config.debug.enableDebug==true then error("Lang.Load(): No dictionary found in Lang.dictionariesByLanguage !")end;return end;if Lang.Config.default==nil then Lang.Config.default=ci end;Lang.Config.default=Lang.Config.default:lower()if Lang.Config.current==nil then Lang.Config.current=Lang.Config.default end;Lang.Config.current=Lang.Config.current:lower()end;function Lang.Start()if Lang.Config.current~=nil then Lang.Update(Lang.Config.current)end end;function Lang.Get(G,an)if an==nil and Lang.cache[G]~=nil then return Lang.cache[G]end;local cm=Lang.Config.current;local ci=Lang.Config.default;local cn=Lang.Config.searchInDefault;local co=true;local Z=string.split(G,".")local cp=cm;if Lang.dictionariesByLanguage[Z[1]]~=nil then cp=table.remove(Z,1)end;local cq=table.concat(Z,".")local cr=cp.."."..cq;if an==nil and Lang.cache[cr]~=nil then return Lang.cache[cr]end;local ck=Lang.dictionariesByLanguage[cp]local aL="Lang.Get(key[, replacements]): "if ck==nil then error(aL.."Language '"..cp.."' does not exists",G,cr)end;for p=1,#Z do local cs=Z[p]if ck[cs]==nil then if cn==true and cp~=ci then co=false;ck=Lang.Get(ci.."."..cq,an)else ck=Lang.Config.keyNotFound or"keynotfound"end;break end;ck=ck[cs]end;local ct=ck;if type(ct)~="string"then error(aL.."Localization key '"..G.."' does not lead to a string but to : '"..tostring(ct).."'.",G,cr)end;if an~=nil then ct=Daneel.Utilities.ReplaceInString(ct,an)elseif co==true and ct~=Lang.Config.keyNotFound then Lang.cache[G]=ct;Lang.cache[cr]=ct end;return ct end;function Lang.RegisterForUpdate(b1,G,an)Lang.gameObjectsToUpdate[b1]={key=G,replacements=an}end;function Lang.Update(cp)cp=Daneel.Debug.CheckArgValue(cp,"language",table.getkeys(Lang.dictionariesByLanguage),"Lang.Update(language): ")Lang.cache={}Lang.Config.current=cp;for b1,j in pairs(Lang.gameObjectsToUpdate)do if b1.inner==nil or b1.isDestroyed==true then Lang.gameObjectsToUpdate[b1]=nil else local aU=Lang.Get(j.key,j.replacements)if b1.textArea~=nil then b1.textArea:SetText(aU)elseif b1.textRenderer~=nil then b1.textRenderer:SetText(aU)elseif Daneel.Config.debug.enableDebug then print("Lang.Update(language): WARNING : "..tostring(b1).." has no TextRenderer or GUI.TextArea component.")end end end;Daneel.Event.Fire("OnLangUpdate")end;table.mergein(Daneel.Debug.functionArgumentsInfo,{["Lang.Get"]={{"key","string"},{"replacements","table",isOptional=true}},["Lang.RegisterForUpdate"]={bz,{"key","string"},{"replacements","table",isOptional=true}},["Lang.Update"]={{"language","string"}}})local n="string"local d="boolean"local aA="number"local o="table"local by="GameObject"local cu="Vector2"local aD="Vector3"local cv={"params",o}setmetatable(Vector3,{__call=function(aq,...)return aq:New(...)end})setmetatable(Quaternion,{__call=function(aq,...)return aq:New(...)end})setmetatable(Plane,{__call=function(aq,...)return aq:New(...)end})Plane.__tostring=function(cw)return"Plane: { normal="..tostring(cw.normal)..", distance="..tostring(cw.distance).." }"end;Asset={}Asset.__index=Asset;setmetatable(Asset,{__call=function(aq,...)return aq.Get(...)end})local cx=table.merge({"string"},Daneel.Config.assetTypes)function Asset.Get(cy,bG,cz)local aL="Asset.Get( assetPath[, assetType, errorIfAssetNotFound] ) : "if cy==nil then if Daneel.Config.debug.enableDebug then error(aL.."Argument 'assetPath' is nil.")end;return nil end;local W=Daneel.Debug.CheckArgType(cy,"assetPath",cx,aL)if bG~=nil then Daneel.Debug.CheckArgType(bG,"assetType","string",aL)bG=Daneel.Debug.CheckArgValue(bG,"assetType",Daneel.Config.assetTypes,aL)end;if W~="string"then if bG~=nil and W~=bG then error(aL.."Provided asset '"..cy.."' has a different type '"..W.."' than the provided 'assetType' argument '"..bG.."'.")end;return cy end;local bI=nil;if bG==nil then bI=CraftStudio.FindAsset(cy)else bI=CraftStudio.FindAsset(cy,bG)end;if bI==nil and cz==true then if bG==nil then bG="asset"end;error(aL.."Argument 'assetPath' : "..bG.." with name '"..cy.."' was not found.")end;return bI end;function Asset.GetPath(bI)return Map.GetPathInPackage(bI)end;function Asset.GetName(bI)local b3=rawget(bI,"name")if b3==nil then b3=Asset.GetPath(bI):gsub("^(.*/)","")rawset(bI,"name",b3)end;return b3 end;function Asset.GetId(bI)return Daneel.Utilities.GetId(bI)end;Component={}Component.__index=Component;function Component.Set(bF,c2)for G,h in pairs(c2)do bF[G]=h end end;function Component.Destroy(bF)table.removevalue(bF.gameObject,bF)CraftStudio.Destroy(bF)end;function Component.GetId(bF)return Daneel.Utilities.GetId(bF)end;table.mergein(Daneel.Debug.functionArgumentsInfo,{["Asset.Get"]={{"assetPath"},{"assetType",isOptional=true},{"errorIfAssetNotFound","boolean",isOptional=true}},["Asset.GetPath"]={{"asset",Daneel.Config.assetTypes}},["Asset.GetName"]={{"asset",Daneel.Config.assetTypes}},["Component.Set"]={{"component",Daneel.Config.componentTypes},{"params","table"}},["Component.Destroy"]={{"component",Daneel.Config.componentTypes}}})Map.oGetPathInPackage=Map.GetPathInPackage;function Map.GetPathInPackage(bI)local cA=rawget(bI,"path")if cA==nil then cA=Map.oGetPathInPackage(bI)end;return cA end;Map.oLoadFromPackage=Map.LoadFromPackage;function Map.LoadFromPackage(cA,cB)Map.oLoadFromPackage(cA,function(cC)if cC~=nil then rawset(cC,"path",cA)end;cB(cC)end)end;Map.oGetBlockIDAt=Map.GetBlockIDAt;function Map.GetBlockIDAt(cC,cD,cE,cF)if type(cD)=="table"then cF=cD.z;cE=cD.y;cD=cD.x end;return Map.oGetBlockIDAt(cC,cD,cE,cF)end;Map.oGetBlockOrientationAt=Map.GetBlockOrientationAt;function Map.GetBlockOrientationAt(cC,cD,cE,cF)if type(cD)=="table"then cF=cD.z;cE=cD.y;cD=cD.x end;return Map.GetBlockOrientationAt(cC,cD,cE,cF)end;Map.oSetBlockAt=Map.SetBlockAt;function Map.SetBlockAt(cC,cD,cE,cF,az,cG)if type(cD)=="table"then az=cE;cG=cF;cF=cD.z;cE=cD.y;cD=cD.x end;if cG==nil then Map.oSetBlockAt(cC,cD,cE,cF,az)else Map.oSetBlockAt(cC,cD,cE,cF,az,cG)end end;Transform.oSetLocalScale=Transform.SetLocalScale;function Transform.SetLocalScale(cH,cI)if type(cI)=="number"then cI=Vector3:New(cI)end;Transform.oSetLocalScale(cH,cI)end;function Transform.SetScale(cH,cI)if type(cI)=="number"then cI=Vector3:New(cI)end;local cJ=cH.gameObject:GetParent()if cJ~=nil then cI=cI/cJ.transform:GetScale()end;cH:SetLocalScale(cI)end;function Transform.GetScale(cH)local cI=cH:GetLocalScale()local cJ=cH.gameObject:GetParent()if cJ~=nil then cI=cI*cJ.transform:GetScale()end;return cI end;local cK=nil;function Transform.WorldToLocal(cH,cL)if cK==nil or cK.inner==nil then cK=CS.CreateGameObject("WorldToLocal")end;cK:SetParent(cH.gameObject)cK.transform:SetPosition(cL)cL=cK.transform:GetLocalPosition()cK:SetParent(nil)return cL end;function Transform.LocalToWorld(cH,cL)if cK==nil or cK.inner==nil then cK=CS.CreateGameObject("WorldToLocal")end;cK:SetParent(cH.gameObject)cK.transform:SetLocalPosition(cL)cL=cK.transform:GetPosition()cK:SetParent(nil)return cL end;ModelRenderer.oSetModel=ModelRenderer.SetModel;function ModelRenderer.SetModel(cM,cN)local cO=nil;if cN~=nil then cO=Asset.Get(cN,"Model",true)end;ModelRenderer.oSetModel(cM,cO)end;ModelRenderer.oSetAnimation=ModelRenderer.SetAnimation;function ModelRenderer.SetAnimation(cM,cP)local cQ=nil;if cP~=nil then cQ=Asset.Get(cP,"ModelAnimation",true)end;ModelRenderer.oSetAnimation(cM,cQ)end;function ModelRenderer.Set(cM,c2)if c2.model~=nil then cM:SetModel(c2.model)c2.model=nil end;if c2.animationTime~=nil and c2.animation~=nil then cM:SetAnimation(c2.animation)c2.animation=nil end;Component.Set(cM,c2)end;MapRenderer.oSetMap=MapRenderer.SetMap;function MapRenderer.SetMap(cR,cS,cT)local cC=nil;if cS~=nil then cC=Asset.Get(cS,"Map",true)end;if cT~=nil then MapRenderer.oSetMap(cR,cC,cT)else MapRenderer.oSetMap(cR,cC)end end;MapRenderer.oSetTileSet=MapRenderer.SetTileSet;function MapRenderer.SetTileSet(cR,cU)local cV=nil;if cU~=nil then cV=Asset.Get(cU,"TileSet",true)end;MapRenderer.oSetTileSet(cR,cV)end;function MapRenderer.Set(cR,c2)if c2.map~=nil then cR:SetMap(c2.map)c2.map=nil end;Component.Set(cR,c2)end;function MapRenderer.LoadNewMap(cR,cB)local cC=cR:GetMap()if cC~=nil then Map.LoadFromPackage(Map.GetPathInPackage(cC),function(cC)cR:SetMap(cC)if cB~=nil then cB(cC)end end)elseif Daneel.Config.debug.enableDebug==true then error("MapRenderer.LoadNewMap(): No map is set on the provided map renderer. Can't load new map.")end end;TextRenderer.oSetFont=TextRenderer.SetFont;function TextRenderer.SetFont(cW,cX)local cY=nil;if cX~=nil then cY=Asset.Get(cX,"Font",true)end;TextRenderer.oSetFont(cW,cY)end;TextRenderer.oSetAlignment=TextRenderer.SetAlignment;function TextRenderer.SetAlignment(cW,cZ)if type(cZ)=="string"then local c_="Center"if Daneel.Config.textRenderer~=nil and Daneel.Config.textRenderer.alignment~=nil then c_=Daneel.Config.textRenderer.alignment end;local aL="TextRenderer.SetAlignment( textRenderer, alignment ) : "cZ=Daneel.Debug.CheckArgValue(cZ,"alignment",{"Left","Center","Right"},aL,c_)cZ=TextRenderer.Alignment[cZ]end;TextRenderer.oSetAlignment(cW,cZ)end;function TextRenderer.SetTextWidth(cW,d0)local d1=cW:GetTextWidth()/cW.gameObject.transform:GetScale()cW.gameObject.transform:SetScale(d0/d1)end;Camera.oSetProjectionMode=Camera.SetProjectionMode;function Camera.SetProjectionMode(d2,d3)if type(d3)=="string"then local c_="Perspective"if Daneel.Config.camera~=nil and Daneel.Config.camera.projectionMode~=nil then c_=Daneel.Config.camera.projectionMode end;d3=Daneel.Debug.CheckArgValue(d3,"projectionMode",{"Perspective","Orthographic"},"Camera.SetProjectionMode( camera[, projectionMode] ) : ",c_)d3=Camera.ProjectionMode[d3]end;Camera.oSetProjectionMode(d2,d3)end;function Camera.Set(d2,c2)if c2.projectionMode~=nil then d2:SetProjectionMode(c2.projectionMode)c2.projectionMode=nil end;Component.Set(d2,c2)end;function Camera.GetPixelsToUnits(d2)local d4=CS.Screen.GetSize()local d5=d4.y;if d4.x<d4.y then d5=d4.x end;if d2:GetProjectionMode()==Camera.ProjectionMode.Orthographic then return d2:GetOrthographicScale()/d5 else return math.tan(math.rad(d2:GetFOV()/2))/d5*2 end end;function Camera.GetUnitsToPixels(d2)local d6=d2:GetPixelsToUnits()if d6~=nil and d6~=0 then return 1/d6 end end;function Camera.GetBaseDistance(d2)if d2:GetProjectionMode()==Camera.ProjectionMode.Perspective then return 0.5/math.tan(math.rad(d2:GetFOV()/2))end end;function Camera.IsPositionInFrustum(d2,cL)local d7=d2.gameObject.transform:WorldToLocal(cL)if d7.z<0 then local d4=CS.Screen.GetSize()local ca=Vector2.New(0)if d2:GetProjectionMode()==Camera.ProjectionMode.Orthographic then ca=d4*d2:GetPixelsToUnits()/2 else local d5=d4.y;if d4.x<d4.y then d5=d4.x end;ca=-d7.z/d2:GetBaseDistance()*d4/d5;ca=ca/2 end;if d7.x>=-ca.x and d7.x<=ca.x and d7.y>=-ca.y and d7.y<=ca.y then return true end end;return false end;function Camera.WorldToScreenPoint(d2,cL)local d7=d2.gameObject.transform:WorldToLocal(cL)local d8=d2:GetUnitsToPixels()local d4=CS.Screen.GetSize()if d2:GetProjectionMode()==Camera.ProjectionMode.Orthographic then d7.x=d7.x*d8+d4.x/2;d7.y=-d7.y*d8+d4.y/2 else local d9=math.abs(d7.z)d7.x=d7.x/d9*d8+d4.x/2;d7.y=-d7.y/d9*d8+d4.y/2 end;return d7 end;Camera.oGetFOV=Camera.GetFOV;function Camera.GetFOV(d2)return math.round(Camera.oGetFOV(d2),2)end;Camera.GetFov=Camera.GetFOV;Camera.SetFov=Camera.SetFOV;Camera.oProject=Camera.Project;function Camera.Project(d2,cL)return setmetatable(Camera.oProject(d2,cL),Vector2)end;Sound.oPlay=Sound.Play;function Sound.Play(da,db,dc,dd)local de=Asset.Get(da,"Sound",true)de:oPlay(db or 1,dc or 0,dd or 0)end;table.mergein(Daneel.Debug.functionArgumentsInfo,{["Transform.SetLocalScale"]={{"transform","Transform"},{"number",{aA,aD}}},["Transform.SetScale"]={{"transform","Transform"},{"number",{aA,aD}}},["Transform.GetScale"]={{"transform","Transform"}},["Transform.WorldToLocal"]={{"transform","Transform"},{"position",aD}},["Transform.LocalToWorld"]={{"transform","Transform"},{"position",aD}},["ModelRenderer.SetModel"]={{"modelRenderer","ModelRenderer"},{"modelNameOrAsset",{n,"Model"},isOptional=true}},["ModelRenderer.SetAnimation"]={{"modelRenderer","ModelRenderer"},{"animationNameOrAsset",{n,"ModelAnimation"},isOptional=true}},["ModelRenderer.Set"]={{"modelRenderer","ModelRenderer"},cv},["MapRenderer.SetMap"]={{"mapRenderer","MapRenderer"},{"mapNameOrAsset",{n,"Map"},isOptional=true},{"replaceTileSet","boolean",isOptional=true}},["MapRenderer.SetTileSet"]={{"mapRenderer","MapRenderer"},{"tileSetNameOrAsset",{n,"TileSet"},isOptional=true}},["MapRenderer.Set"]={{"mapRenderer","MapRenderer"},cv},["MapRenderer.LoadNewMap"]={{"mapRenderer","MapRenderer"},{"callback","function",isOptional=true}},["TextRenderer.SetFont"]={{"textRenderer","TextRenderer"},{"fontNameOrAsset",{n,"Font"},isOptional=true}},["TextRenderer.SetAlignment"]={{"textRenderer","TextRenderer"},{"alignment",{n,"userdata",aA}}},["TextRenderer.SetTextWidth"]={{"textRenderer","TextRenderer"},{"width",aA}},["Camera.SetProjectionMode"]={{"camera","Camera"},{"projectionMode",{n,"userdata",aA}}},["Camera.Set"]={{"camera","Camera"},cv},["Camera.GetPixelsToUnits"]={{"camera","Camera"}},["Camera.GetUnitsToPixels"]={{"camera","Camera"}},["Camera.GetBaseDistance"]={{"camera","Camera"}},["Camera.IsPositionInFrustum"]={{"camera","Camera"},{"position",aD}},["Camera.WorldToScreenPoint"]={{"camera","Camera"},{"position",aD}},["Camera.GetFOV"]={{"camera","Camera"}},["Camera.Project"]={{"camera","Camera"},{"position",aD}},["Sound.Play"]={{"soundAssetOrPath",{"Sound",n}},{"volume",aA,isOptional=true},{"pitch",aA,isOptional=true},{"pan",aA,isOptional=true}}})Vector2={}Vector2.__index=Vector2;setmetatable(Vector2,{__call=function(aq,...)return aq.New(...)end})Daneel.Config.objectsByType.Vector2=Vector2;function Vector2.__tostring(df)return"Vector2: { x="..df.x..", y="..df.y.." }"end;function Vector2.New(cD,cE)local dg=setmetatable({x=cD,y=cE},Vector2)if type(cD)=="table"then dg.x=cD.x;dg.y=cD.y elseif cE==nil then dg.y=cD end;return dg end;function Vector2.GetLength(dg)return math.sqrt(dg.x^2+dg.y^2)end;function Vector2.GetSqrLength(dg)return dg.x^2+dg.y^2 end;function Vector2.Normalized(dg)return Vector2.New(dg.x,dg.y):Normalize()end;function Vector2.Normalize(dg)local K=dg:GetLength()if K~=0 then dg=dg/K end end;function Vector2.__add(c,d)return Vector2.New(c.x+d.x,c.y+d.y)end;function Vector2.__sub(c,d)return Vector2.New(c.x-d.x,c.y-d.y)end;function Vector2.__mul(c,d)local dh=nil;if type(c)=="number"then dh=Vector2.New(c*d.x,c*d.y)elseif type(d)=="number"then dh=Vector2.New(c.x*d,c.y*d)else dh=Vector2.New(c.x*d.x,c.y*d.y)end;return dh end;function Vector2.__div(c,d)local aL="Vector2.__div(a, b) : "local dh=nil;if type(c)=="number"then if d.x==0 or d.y==0 then error(aL.."One of the components of the denominator is equal to 0. Can't divide by 0 !",c,d)end;dh=Vector2.New(c/d.x,c/d.y)elseif type(d)=="number"then if d==0 then error(aL.."The denominator is equal to 0 ! Can't divide by 0 !",c,d)end;dh=Vector2.New(c.x/d,c.y/d)else if d.x==0 or d.y==0 then error(aL.."One of the components of the denominator is equal to 0. Can't divide by 0 !",c,d)end;dh=Vector2.New(c.x/d.x,c.y/d.y)end;return dh end;function Vector2.__unm(dg)return Vector2.New(-dg.x,-dg.y)end;function Vector2.__pow(dg,di)return Vector2.New(dg.x^di,dg.y^di)end;function Vector2.__eq(c,d)return c.x==d.x and c.y==d.y end;function Vector2.ToString(dg)for p,dj in pairs({"x","y"})do if tostring(dg[dj])=="-0"then dg[dj]=0 end end;return dg.x.." "..dg.y end;Vector3.tostringRoundValue=3;Vector3.__tostring=function(dg)local dk=Vector3.tostringRoundValue;if dk~=nil and dk>=0 then return"Vector3: { x="..math.round(dg.x,dk)..", y="..math.round(dg.y,dk)..", z="..math.round(dg.z,dk).." }"else return"Vector3: { x="..dg.x..", y="..dg.y..", z="..dg.z.." }"end end;function Vector3.New(cD,cE,cF,dl)if cD==Vector3 then cD=cE;cE=cF;cF=dl end;if type(cD)=="table"then if cD.z==nil then cE=cD.y;cD=cD.x else cE=cD.y;cF=cD.z;cD=cD.x end elseif type(cE)=="table"then cF=cE.y;cE=cE.x end;cD=cD or 0;cE=cE or cD;cF=cF or cE;return setmetatable({x=cD,y=cE,z=cF},Vector3)end;function Vector3.GetLength(dg)return math.sqrt(dg.x^2+dg.y^2+dg.z^2)end;function Vector3.GetSqrLength(dg)return dg.x^2+dg.y^2+dg.z^2 end;function Vector3.ToString(dg)for p,dj in pairs({"x","y","z"})do if tostring(dg[dj])=="-0"then dg[dj]=0 end end;return dg.x.." "..dg.y.." "..dg.z end;function string.tovector(dm)local dg=Vector3:New(0)local Z={"z","y","x"}for w in string.gmatch(dm,"[0-9.-]+")do local dj=table.remove(Z)if dj~=nil then dg[dj]=tonumber(w)else break end end;if table.remove(Z)=="z"then setmetatable(dg,Vector2)dg.z=nil end;return dg end;table.mergein(Daneel.Debug.functionArgumentsInfo,{["Vector2.New"]={{"x",{n,aA,o,cu,aD}},{"y",{n,aA},isOptional=true}},["Vector2.GetLength"]={{"vector",cu}},["Vector2.GetSqrLength"]={{"vector",cu}},["Vector2.Normalized"]={{"vector",cu}},["Vector2.Normalize"]={{"vector",cu}},["Vector2.__add"]={{"a",cu},{"b",cu}},["Vector2.__sub"]={{"a",cu},{"b",cu}},["Vector2.__mul"]={{"a",{aA,cu}},{"b",{aA,cu}}},["Vector2.__div"]={{"a",{aA,cu}},{"b",{aA,cu}}},["Vector2.__unm"]={{"vector",cu}},["Vector2.__pow"]={{"vector",cu},{"exp","number"}},["Vector2.__add"]={{"a",cu},{"b",cu}},["Vector3.GetLength"]={{"vector",aD}},["Vector3.GetSqrLength"]={{"vector",aD}},["Vector3.ToString"]={{"vector",aD}},["string.tovector"]={{"sVector",n}}})CraftStudio.Input.oGetMousePosition=CraftStudio.Input.GetMousePosition;function CraftStudio.Input.GetMousePosition()return setmetatable(CraftStudio.Input.oGetMousePosition(),Vector2)end;CraftStudio.Input.oGetMouseDelta=CraftStudio.Input.GetMouseDelta;function CraftStudio.Input.GetMouseDelta()return setmetatable(CraftStudio.Input.oGetMouseDelta(),Vector2)end;CraftStudio.Input.isMouseLocked=false;CraftStudio.Input.oLockMouse=CraftStudio.Input.LockMouse;function CraftStudio.Input.LockMouse()CraftStudio.Input.isMouseLocked=true;CraftStudio.Input.oLockMouse()end;CraftStudio.Input.oUnlockMouse=CraftStudio.Input.UnlockMouse;function CraftStudio.Input.UnlockMouse()CraftStudio.Input.isMouseLocked=false;CraftStudio.Input.oUnlockMouse()end;function CraftStudio.Input.ToggleMouseLock()if CraftStudio.Input.isMouseLocked==true then CraftStudio.Input.UnlockMouse()else CraftStudio.Input.LockMouse()end end;CraftStudio.Screen.oSetSize=CraftStudio.Screen.SetSize;function CraftStudio.Screen.SetSize(cD,cE)if type(cD)=="table"then cE=cD.y;cD=cD.x end;CraftStudio.Screen.oSetSize(cD,cE)CraftStudio.Screen.GetSize()end;CraftStudio.Screen.oGetSize=CraftStudio.Screen.GetSize;function CraftStudio.Screen.GetSize()local d4=CraftStudio.Screen.oGetSize()CraftStudio.Screen.aspectRatio=d4.x/d4.y;return setmetatable(d4,Vector2)end;CraftStudio.Screen.GetSize()RaycastHit={}RaycastHit.__index=RaycastHit;setmetatable(RaycastHit,{__call=function(aq,...)return aq.New(...)end})Daneel.Config.objectsByType.RaycastHit=RaycastHit;RaycastHit.__index=function(c1,G)if G=="hitLocation"then return c1.hitPosition end end;function RaycastHit.__tostring(as)local V="RaycastHit: { "local dn=true;for G,h in pairs(as)do if dn then V=V..G.."="..tostring(h)dn=false else V=V..", "..G.."="..tostring(h)end end;return V.." }"end;Daneel.Debug.functionArgumentsInfo["RaycastHit.New"]={{"params","table",isOptional=true}}function RaycastHit.New(c2)return setmetatable(c2 or{},RaycastHit)end;setmetatable(Ray,{__call=function(aq,...)return aq:New(...)end})function Ray.Cast(bZ,c0,dp)local dq={}for p,b1 in pairs(c0)do if b1.inner~=nil then local c1=bZ:IntersectsGameObject(b1)if c1~=nil then table.insert(dq,c1)end end end;if dp==true then dq=table.sortby(dq,"distance")end;return dq end;function Ray.IntersectsGameObject(bZ,dr)local b1=GameObject.Get(dr,true)local c1=nil;if b1.inner==nil then return nil end;local bF=b1.modelRenderer;if bF~=nil then c1=bZ:IntersectsModelRenderer(bF,true)end;if c1==nil then bF=b1.mapRenderer;if bF~=nil then c1=bZ:IntersectsMapRenderer(bF,true)end end;if c1==nil then bF=b1.textRenderer;if bF~=nil then c1=bZ:IntersectsTextRenderer(bF,true)end end;if c1~=nil then c1.gameObject=b1 end;return c1 end;Ray.oIntersectsPlane=Ray.IntersectsPlane;function Ray.IntersectsPlane(bZ,ds,dt)local d9=Ray.oIntersectsPlane(bZ,ds)if dt==true and d9~=nil then return RaycastHit.New({distance=d9,hitPosition=bZ.position+bZ.direction*d9,hitObject=ds})end;return d9 end;Ray.oIntersectsModelRenderer=Ray.IntersectsModelRenderer;function Ray.IntersectsModelRenderer(bZ,cM,dt)local d9,du=Ray.oIntersectsModelRenderer(bZ,cM)if dt==true and d9~=nil then return RaycastHit.New({distance=d9,normal=du,hitPosition=bZ.position+bZ.direction*d9,hitObject=cM,gameObject=cM.gameObject})end;return d9,du end;Ray.oIntersectsMapRenderer=Ray.IntersectsMapRenderer;function Ray.IntersectsMapRenderer(bZ,cR,dt)local d9,du,dv,dw=Ray.oIntersectsMapRenderer(bZ,cR)if dv~=nil then setmetatable(dv,Vector3)end;if dw~=nil then setmetatable(dw,Vector3)end;if dt==true and d9~=nil then return RaycastHit.New({distance=d9,normal=du,hitBlockLocation=dv,adjacentBlockLocation=dw,hitPosition=bZ.position+bZ.direction*d9,hitObject=cR,gameObject=cR.gameObject})end;return d9,du,dv,dw end;Ray.oIntersectsTextRenderer=Ray.IntersectsTextRenderer;function Ray.IntersectsTextRenderer(bZ,cW,dt)local d9,du=Ray.oIntersectsTextRenderer(bZ,cW)if dt==true and d9~=nil then return RaycastHit.New({distance=d9,normal=du,hitPosition=bZ.position+bZ.direction*d9,hitObject=cW,gameObject=cW.gameObject})end;return d9,du end;function Scene.Load(dx)CraftStudio.LoadScene(dx)end;CraftStudio.oLoadScene=CraftStudio.LoadScene;function CraftStudio.LoadScene(dx)local dy=Asset.Get(dx,"Scene",true)Daneel.Event.Fire("OnNewSceneWillLoad",dy)Daneel.Event.events={}Scene.current=dy;CraftStudio.oLoadScene(dy)end;function Scene.Append(dx,dz)local dy=Asset.Get(dx,"Scene",true)local cJ=nil;if dz~=nil then cJ=GameObject.Get(dz,true)end;return CraftStudio.AppendScene(dy,cJ)end;CraftStudio.oDestroy=CraftStudio.Destroy;function CraftStudio.Destroy(ay)if type(ay)=="table"then Daneel.Event.Fire(ay,"OnDestroy",ay)Daneel.Event.StopListen(ay)ay.isDestroyed=true end;CraftStudio.oDestroy(ay)end;local dA={"ray","Ray"}local dB={"returnRaycastHit","boolean",isOptional=true}table.mergein(Daneel.Debug.functionArgumentsInfo,{["Ray.Cast"]={dA,{"gameObjects",o},{"sortByDistance","boolean",isOptional=true}},["Ray.IntersectsGameObject"]={dA,{"gameObjectNameOrInstance",{n,by}},dB},["Ray.IntersectsPlane"]={dA,{"plane","Plane"},dB},["Ray.IntersectsModelRenderer"]={dA,{"modelRenderer","ModelRenderer"},dB},["Ray.IntersectsMapRenderer"]={dA,{"mapRenderer","MapRenderer"},dB},["Ray.IntersectsTextRenderer"]={dA,{"textRenderer","TextRenderer"},dB},["Scene.Load"]={{"sceneNameOrAsset",{n,"Scene"}}},["CraftStudio.LoadScene"]={{"sceneNameOrAsset",{n,"Scene"}}},["Scene.Append"]={{"sceneNameOrAsset",{n,"Scene"}},{"parentNameOrInstance",{n,by},isOptional=true}},["CraftStudio.Destroy"]={{"object"}}})CraftStudio.Storage.oSave=CraftStudio.Storage.Save;function CraftStudio.Storage.Save(dC,j,cB)if j~=nil and type(j)~="table"then j={value=j,isSavedByDaneel=true}end;CraftStudio.Storage.oSave(dC,j,function(dD)if dD~=nil and Daneel.Config.debug.enableDebug==true then table.print(j)print("CS.Storage.Save( identifier, data[, callback] ) : Error saving with identifier, data (printed above) and error : ",dC,dD.message)end;if cB~=nil then cB(dD)end end)end;CraftStudio.Storage.oLoad=CraftStudio.Storage.Load;function CraftStudio.Storage.Load(dC,aO,cB)if cB==nil and type(aO)=="function"then cB=aO;aO=nil end;CraftStudio.Storage.oLoad(dC,function(dD,j)if dD~=nil and Daneel.Config.debug.enableDebug==true then print("CS.Storage.Load( identifier[, defaultValue], callback ) : Error loading with identifier, default value and error",dC,aO,dD.message)end;if j~=nil and j.value~=nil and j.isSavedByDaneel==true then j=j.value end;if dD==nil and j==nil then j=aO end;cB(dD,j)end)end;table.mergein(Daneel.Debug.functionArgumentsInfo,{["CraftStudio.Storage.Save"]={{"identifier",n},{"data",isOptional=true},{"callback","function",isOptional=true}},["CraftStudio.Storage.Load"]={{"identifier",n},{"defaultValue",isOptional=true},{"callback","function",isOptional=true}}})setmetatable(GameObject,{__call=function(aq,...)return aq.New(...)end})function GameObject.__tostring(b1)if rawget(b1,"inner")==nil then return"Destroyed GameObject: "..tostring(b1:GetId())..": '"..tostring(b1._name).."': "..Daneel.Debug.ToRawString(b1)end;return"GameObject: "..b1:GetId()..": '"..b1:GetName().."'"end;function GameObject.__index(b1,G)if GameObject[G]~=nil then return GameObject[G]end;if type(G)=="string"then local at=string.ucfirst(G)if G~=at then local av="Get"..at;if GameObject[av]~=nil then return GameObject[av](b1)end end end;return nil end;function GameObject.__newindex(b1,G,h)local at=G;if type(G)=="string"then at=string.ucfirst(G)end;if G~=at and G~="transform"then local av="Set"..at;if GameObject[av]~=nil then return GameObject[av](b1,h)end end;rawset(b1,G,h)end;function GameObject.New(b3,c2)local b1=nil;if c2~=nil and getmetatable(c2)==GameObject then b1=CraftStudio.CreateGameObject(b3,c2)else b1=CraftStudio.CreateGameObject(b3)end;if c2~=nil then b1:Set(c2)end;return b1 end;function GameObject.Instantiate(b3,dx,c2)local dy=Asset.Get(dx,"Scene",true)local b1=nil;if c2~=nil and getmetatable(c2)==GameObject then b1=CraftStudio.Instantiate(b3,dy,c2)else b1=CraftStudio.Instantiate(b3,dy)end;if c2~=nil then b1:Set(c2)end;return b1 end;function GameObject.Set(b1,c2)local aL="GameObject.Set( gameObject[, params] ) :"if c2.parent~=nil then b1:SetParent(c2.parent)c2.parent=nil end;if c2.transform~=nil then b1.transform:Set(c2.transform)c2.transform=nil end;for p,bD in pairs(Daneel.Config.componentTypes)do if bD~="ScriptedBehavior"and bD~="Transform"then local dE=string.lcfirst(bD)local dF=c2[dE]if dF~=nil then c2[dE]=nil;Daneel.Debug.CheckArgType(dF,"params."..dE,"table",aL)local bF=b1[dE]if bF==nil then bF=b1:GetComponent(bD)end;if bF==nil then bF=b1:AddComponent(bD,dF)else bF:Set(dF)end end end end;for G,h in pairs(c2)do if G=="tags"then b1:RemoveTag()b1:AddTag(h)else b1[G]=h end end end;function GameObject.Get(b3,dG)if getmetatable(b3)==GameObject then return b3 end;local aL="GameObject.Get( name[, errorIfGameObjectNotFound] ) : "local dH=string.split(b3,".")local b1=CraftStudio.FindGameObject(dH[1])if b1==nil and dG==true then error(aL.."GameObject with name '"..dH[1].."' (from '"..b3 .."') was not found.")end;if b1~=nil then local dI=b3;local bi=table.remove(dH,1)for p,b3 in ipairs(dH)do b1=b1:GetChild(b3)bi=bi.."."..b3;if b1==nil then if dG==true then error(aL.."GameObject with name '"..bi.."' (from '"..dI.."') was not found.")end;break end end end;return b1 end;function GameObject.GetId(b1)return Daneel.Utilities.GetId(b1)end;GameObject.oSetParent=GameObject.SetParent;function GameObject.SetParent(b1,dz,dJ)local cJ=nil;if dz~=nil then cJ=GameObject.Get(dz,true)end;if dJ==nil then dJ=false end;GameObject.oSetParent(b1,cJ,dJ)end;function GameObject.GetChild(b1,b3,E)if E==nil then E=false end;local dK=nil;if b3==nil then local dL=b1:GetChildren()dK=dL[1]else local dH=string.split(b3,".")for p,b3 in ipairs(dH)do b1=b1:FindChild(b3,E)if b1==nil then break end end;dK=b1 end;return dK end;GameObject.oGetChildren=GameObject.GetChildren;function GameObject.GetChildren(b1,E,dM)local dN=GameObject.oGetChildren(b1)if E==true then for p,dK in ipairs(table.copy(dN))do dN=table.merge(dN,dK:GetChildren(true))end end;if dM==true then table.insert(dN,1,b1)end;return dN end;function GameObject.GetInAncestors(b1,dO)local cJ=b1:GetParent()if cJ==nil then return end;if dO(cJ)==true then return cJ end;return cJ:GetInAncestors(dO)end;GameObject.oSendMessage=GameObject.SendMessage;function GameObject.SendMessage(b1,bl,j)if Daneel.Config.debug.enableDebug then local b2=Daneel.Debug.Try(function()GameObject.oSendMessage(b1,bl,j)end)if not b2 then local dP="No data"local K=0;if j~=nil then K=table.getlength(j)dP="Data with "..K.." entries"end;print("GameObject.SendMessage( gameObject, functionName[, data] ) : Error sending message with parameters : ",b1,bl,dP)if K>0 then table.print(j)end end else GameObject.oSendMessage(b1,bl,j)end end;function GameObject.Display(b1,h,dQ)local dR=false;if h~=false and h~=0 then dR=true end;local dS=type(h)if dS=="boolean"then h=nil elseif dS=="number"and dQ==true then h=Vector3:New(h)dS="table"end;local dT=b1.textRenderer or b1.modelRenderer or b1.mapRenderer;if dT~=nil and dQ~=true and dS=="number"then if not dR and b1.displayOpacity==nil then b1.displayOpacity=dT:GetOpacity()end;if dR then h=h or b1.displayOpacity or 1 else h=h or 0 end;dT:SetOpacity(h)else if not dR and b1.displayLocalPosition==nil then b1.displayLocalPosition=b1.transform:GetLocalPosition()end;if dR then h=h or b1.displayLocalPosition or Vector3:New(1)else h=h or Vector3:New(0,0,999)end;b1.transform:SetLocalPosition(h)end;b1.isDisplayed=dR;Daneel.Event.Fire(b1,"OnDisplay",b1)end;function GameObject.Destroy(b1)for p,by in pairs(b1:GetChildren(true,true))do by:RemoveTag()end;for G,h in pairs(b1)do if G~="inner"and type(h)=="table"then Daneel.Event.Fire(h,"OnDestroy",h)end end;b1._name=b1:GetName()CraftStudio.Destroy(b1)end;function GameObject.AddComponent(b1,bD,c2)local aL="GameObject.AddComponent( gameObject, componentType[, params] ) : "bD=Daneel.Debug.CheckArgValue(bD,"componentType",Daneel.Config.componentTypes,aL,bD)local bF=nil;if Daneel.Config.componentObjectsByType[bD]==nil then local b7=Asset.Get(bD,"Script")if b7==nil then error(aL.."Provided component type '"..tostring(bD).."' is not one of the component types, nor a script asset or path.")end;bF=b1:CreateScriptedBehavior(b7,c2 or{})elseif Daneel.DefaultConfig().componentObjectsByType[bD]~=nil then if bD=="Transform"then error(aL.."Can't add a transform component because game objects may only have one transform.")elseif bD=="ScriptedBehavior"then error(aL.."To add a scripted behavior, pass the script asset or path instead of 'ScriptedBehavior' as the 'componentType' argument.")end;bF=b1:CreateComponent(bD)if c2~=nil then bF:Set(c2)end else local bE=Daneel.Config.componentObjectsByType[bD]if type(bE.New)=="function"then bF=bE.New(b1,c2)else error(aL.."Can't create custom component of type '"..bD.."' because the component object does not provide a New() function.")end end;Daneel.Event.Fire(b1,"OnNewComponent",bF)return bF end;GameObject.oGetComponent=GameObject.GetComponent;function GameObject.GetComponent(b1,bD)local aL="GameObject.GetComponent( gameObject, componentType ) : "bD=Daneel.Debug.CheckArgValue(bD,"componentType",Daneel.Config.componentTypes,aL,bD)local dE=bD;if type(bD)=="string"then dE=string.lcfirst(bD)end;local bF=nil;if dE~="scriptedBehavior"then bF=b1[dE]end;if bF==nil then if Daneel.DefaultConfig().componentObjectsByType[bD]~=nil then bF=GameObject.oGetComponent(b1,bD)elseif Daneel.Config.componentObjectsByType[bD]==nil then local b7=Asset.Get(bD,"Script",true)bF=GameObject.oGetScriptedBehavior(b1,b7)end end;return bF end;GameObject.oGetScriptedBehavior=GameObject.GetScriptedBehavior;function GameObject.GetScriptedBehavior(b1,dU)local b7=Asset.Get(dU,"Script",true)return GameObject.oGetScriptedBehavior(b1,b7)end;GameObject.Tags={}Daneel.modules.Tags={Awake=function()GameObject.Tags={}end}function GameObject.GetWithTag(b_)local c3=b_;if type(c3)=="string"then c3={c3}end;local dV={}local dW=false;for p,b_ in pairs(c3)do local c0=GameObject.Tags[b_]if c0~=nil then for a9,b1 in pairs(c0)do if b1.inner~=nil then if b1:HasTag(c3)and not table.containsvalue(dV,b1)then table.insert(dV,b1)end else c0[a9]=nil;dW=true end end;if dW then GameObject.Tags[b_]=table.reindex(c0)dW=false end end end;return dV end;function GameObject.GetTags(b1)local c3={}for b_,c0 in pairs(GameObject.Tags)do if table.containsvalue(c0,b1)then table.insert(c3,b_)end end;return c3 end;function GameObject.AddTag(b1,b_)local c3=b_;if type(c3)=="string"then c3={c3}end;for p,b_ in pairs(c3)do if GameObject.Tags[b_]==nil then GameObject.Tags[b_]={b1}elseif not table.containsvalue(GameObject.Tags[b_],b1)then table.insert(GameObject.Tags[b_],b1)end end end;function GameObject.RemoveTag(b1,b_)local c3=b_;if type(c3)=="string"then c3={c3}end;for b_,c0 in pairs(GameObject.Tags)do if c3==nil or table.containsvalue(c3,b_)then table.removevalue(GameObject.Tags[b_],b1)end end end;function GameObject.HasTag(b1,b_,dX)local c3=b_;if type(c3)=="string"then c3={c3}end;local dY=false;if dX==true then for p,b_ in pairs(c3)do if GameObject.Tags[b_]~=nil and table.containsvalue(GameObject.Tags[b_],b1)then dY=true;break end end else dY=true;for p,b_ in pairs(c3)do if GameObject.Tags[b_]==nil or not table.containsvalue(GameObject.Tags[b_],b1)then dY=false;break end end end;return dY end;local aF={"tag",{"string","table"}}local bz={"gameObject","GameObject"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["GameObject.New"]={{"name",n},{"params",{o,"GameObject"},isOptional=true}},["GameObject.Instantiate"]={{"name",n},{"sceneNameOrAsset",{n,"Scene"}},{"params",{o,"GameObject"},isOptional=true}},["GameObject.Set"]={bz,cv},["GameObject.Get"]={{"name",{n,"GameObject"}},{"errorIfGameObjectNotFound","boolean",isOptional=true}},["GameObject.Destroy"]={bz},["GameObject.SetParent"]={bz,{"parentNameOrInstance",{n,"GameObject"},isOptional=true},{"keepLocalTransform","boolean",isOptional=true}},["GameObject.GetChild"]={bz,{"name",n,isOptional=true},{"recursive","boolean",isOptional=true}},["GameObject.GetChildren"]={bz,{"recursive","boolean",isOptional=true},{"includeSelf","boolean",isOptional=true}},["GameObject.GetInAncestors"]={bz,{"searchFunction","function"}},["GameObject.SendMessage"]={bz,{"functionName",n},{"data",o,isOptional=true}},["GameObject.AddComponent"]={bz,{"componentType",{n,"Script"}},{"params",o,isOptional=true}},["GameObject.GetComponent"]={bz,{"componentType",{n,"Script"}}},["GameObject.GetScriptedBehavior"]={bz,{"scriptNameOrAsset",{n,"Script"}}},["GameObject.GetWithTag"]={aF},["GameObject.GetTags"]={bz},["GameObject.AddTag"]={bz,aF},["GameObject.RemoveTag"]={bz,{"tag",{"string","table"},isOptional=true}},["GameObject.HasTag"]={bz,aF,{"atLeastOneTag","boolean",isOptional=true}}})GUI={}local n="string"local d="boolean"local aA="number"local o="table"local by="GameObject"local cu="Vector2"local aD="Vector3"local bz={"gameObject",by}local dZ={"params",o,isOptional=true}local cv={"params",o}function GUI.ToSceneUnit(h,d2)if type(h)=="string"then h=h:trim()if h:find("px")then if d2~=nil and getmetatable(d2)==GameObject then d2=d2.camera end;if d2==nil then error("GUI.ToSceneUnit(value, camera) : Can't convert the value '"..h.."' from pixels to scene units because no camera component has been passed as argument.")end;h=tonumber(h:sub(0,#h-2))*d2:GetPixelsToUnits()elseif h:find("u")then h=tonumber(h:sub(0,#h-1))else h=tonumber(h)end end;return h end;function GUI.ToPixel(h,d_,d2)if type(h)=="string"then if type(d_)=="table"then d2=d_;d_=nil end;h=h:trim()local d4=CS.Screen.GetSize()if h:find("s")and d_~=nil then h=h:sub(2)if h==""then h=0 else h=GUI.ToPixel(h,d_,d2)end;h=d4[d_]+tonumber(h)elseif h:find("px")then h=tonumber(h:sub(0,#h-2))elseif h:find("%",1,true)and d_~=nil then h=d4[d_]*tonumber(h:sub(0,#h-1))/100 elseif h:find("u")then if d2==nil then error("GUI.ToPixel(value, camera) : Can't convert the value '"..h.."' from pixels to scene units because no camera component has been passed as argument.")end;h=tonumber(h:sub(0,#h-1))/d2:GetPixelsToUnits()else h=tonumber(h)end end;return h end;local function e0(b1,aL)local e1=b1:GetInAncestors(function(by)if by.camera~=nil then return true end end)if e1==nil and aL~=nil then error(aL..": The "..tostring(b1).." isn't a child of a game object with a camera component and no camera game object is passed via the 'params' argument.")end;return e1 end;GUI.Hud={}GUI.Hud.__index=GUI.Hud;function GUI.Hud.CreateOriginGO(b1)if b1.camera==nil then error("GUI.Hud.CreateOriginGO(): Provided game object "..tostring(b1).." has no camera component.")end;local d6=b1.camera:GetPixelsToUnits()local d4=CS.Screen.GetSize()local e2=CS.CreateGameObject("Hud Origin for camera "..b1:GetName(),b1)e2.transform:SetLocalPosition(Vector3:New(-d4.x*d6/2,d4.y*d6/2,0))b1.hudOriginGO=e2 end;function GUI.Hud.ToHudPosition()error("GUI.Hud.ToHudPosition() is deprecated since v1.5.0. Use Camera.WorldToScreenPoint() or Camera.Project() instead.")end;function Vector2.ToPixel(dg,d2)return Vector2.New(GUI.ToPixel(dg.x,"x",d2),GUI.ToPixel(dg.y,"y",d2))end;function GUI.Hud.New(b1,c2)local e3=setmetatable({},GUI.Hud)e3.gameObject=b1;b1.hud=e3;e3.id=Daneel.Utilities.GetId()c2=c2 or{}e3.cameraGO=c2.cameraGO or e0(b1,"GUI.Hud.New()")if e3.cameraGO.hudOriginGO==nil then GUI.Hud.CreateOriginGO(e3.cameraGO)end;e3:Set(table.merge(GUI.Config.hud,c2))return e3 end;function GUI.Hud.SetPosition(e3,cL)cL=cL:ToPixel(e3.cameraGO.camera)local e4=e3.cameraGO.hudOriginGO.transform:GetPosition()+Vector3:New(cL.x*e3.cameraGO.camera:GetPixelsToUnits(),-cL.y*e3.cameraGO.camera:GetPixelsToUnits(),0)e4.z=e3.gameObject.transform:GetPosition().z;e3.gameObject.transform:SetPosition(e4)end;function GUI.Hud.GetPosition(e3)local cL=e3.gameObject.transform:GetPosition()-e3.cameraGO.hudOriginGO.transform:GetPosition()cL=cL/e3.cameraGO.camera:GetPixelsToUnits()return Vector2.New(math.round(cL.x),math.round(-cL.y))end;function GUI.Hud.SetLocalPosition(e3,cL)cL=cL:ToPixel(e3.cameraGO.camera)local cJ=e3.gameObject.parent or e3.cameraGO.hudOriginGO;local e4=cJ.transform:GetPosition()+Vector3:New(cL.x*e3.cameraGO.camera:GetPixelsToUnits(),-cL.y*e3.cameraGO.camera:GetPixelsToUnits(),0)e4.z=e3.gameObject.transform:GetPosition().z;e3.gameObject.transform:SetPosition(e4)end;function GUI.Hud.GetLocalPosition(e3)local cJ=e3.gameObject.parent or e3.cameraGO.hudOriginGO;local cL=e3.gameObject.transform:GetPosition()-cJ.transform:GetPosition()cL=cL/e3.cameraGO.camera:GetPixelsToUnits()return Vector2.New(math.round(cL.x),math.round(-cL.y))end;function GUI.Hud.SetLayer(e3,e5)local e6=e3.cameraGO.hudOriginGO.transform:GetPosition().z;local e7=e3.gameObject.transform:GetPosition()e3.gameObject.transform:SetPosition(Vector3:New(e7.x,e7.y,e6-e5))end;function GUI.Hud.GetLayer(e3)local e6=e3.cameraGO.hudOriginGO.transform:GetPosition().z;return math.round(e6-e3.gameObject.transform:GetPosition().z,1)end;function GUI.Hud.SetLocalLayer(e3,e5)local cJ=e3.gameObject.parent or e3.cameraGO.hudOriginGO;local e6=cJ.transform:GetPosition().z;local e7=e3.gameObject.transform:GetPosition()e3.gameObject.transform:SetPosition(Vector3:New(e7.x,e7.y,e6-e5))end;function GUI.Hud.GetLocalLayer(e3)local cJ=e3.gameObject.parent or e3.cameraGO.hudOriginGO;local e6=cJ.transform:GetPosition().z;return math.round(e6-e3.gameObject.transform:GetPosition().z,1)end;local e8={"hud","Hud"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["GUI.Hud.CreateOriginGO"]={bz},["GUI.Hud.New"]={bz,dZ},["GUI.Hud.SetPosition"]={e8,{"position",cu}},["GUI.Hud.GetPosition"]={e8},["GUI.Hud.SetLocalPosition"]={e8,{"position",cu}},["GUI.Hud.GetLocalPosition"]={e8},["GUI.Hud.SetLayer"]={e8,{"layer",aA}},["GUI.Hud.GetLayer"]={e8},["GUI.Hud.SetLocalLayer"]={e8,{"layer",aA}},["GUI.Hud.GetLocalLayer"]={e8}})GUI.Toggle={}GUI.Toggle.__index=GUI.Toggle;function GUI.Toggle.New(b1,c2)if Daneel.modules.MouseInput==nil then error("GUI.Toggle.New(): The 'Mouse Input' module is missing from your project. It is required for the player to interact with the GUI.Toggle, GUI.Input and GUI.Slider components.")end;local e9=table.copy(GUI.Config.toggle)e9.defaultText=e9.text;e9.text=nil;e9.gameObject=b1;e9.id=Daneel.Utilities.GetId()setmetatable(e9,GUI.Toggle)if c2~=nil then e9:Set(c2)end;b1.toggle=e9;b1:AddTag("guiComponent")b1.OnNewComponent=function(bF)if bF==nil then return end;local aQ=getmetatable(bF)if aQ==TextRenderer then local aU=bF:GetText()if aU==nil then aU=e9.defaultText end;e9:SetText(aU)elseif aQ==ModelRenderer and e9.checkedModel~=nil then if e9.isChecked and e9.checkedModel~=nil then bF:SetModel(e9.checkedModel)elseif not e9.isChecked and e9.uncheckedModel~=nil then bF:SetModel(e9.uncheckedModel)end end end;b1.OnClick=function()if not(e9.group~=nil and e9.isChecked)then e9:Check(not e9.isChecked)end end;if b1.textRenderer~=nil and b1.textRenderer:GetText()~=nil then e9:SetText(b1.textRenderer:GetText())end;if b1.modelRenderer~=nil then if e9.isChecked and e9.checkedModel~=nil then e9.gameObject.modelRenderer:SetModel(e9.checkedModel)elseif not e9.isChecked and e9.uncheckedModel~=nil then e9.gameObject.modelRenderer:SetModel(e9.uncheckedModel)end end;e9:Check(e9.isChecked,true)return e9 end;function GUI.Toggle.SetText(e9,aU)if e9.gameObject.textRenderer~=nil then if e9.isChecked==true then aU=Daneel.Utilities.ReplaceInString(e9.checkedMark,{text=aU})else aU=Daneel.Utilities.ReplaceInString(e9.uncheckedMark,{text=aU})end;e9.gameObject.textRenderer:SetText(aU)else if Daneel.Config.debug.enableDebug then print("WARNING: GUI.Toggle.SetText(toggle, text): Can't set the toggle's text because no TextRenderer component has been found on the gameObject '"..tostring(e9.gameObject).."'. Waiting for a TextRenderer to be added.")end;e9.defaultText=aU end end;function GUI.Toggle.GetText(e9)local aU=nil;if e9.gameObject.textRenderer~=nil then aU=e9.gameObject.textRenderer:GetText()if aU==nil then aU=e9.defaultText end;local ea=e9.checkedMark;if not e9.isChecked then ea=e9.uncheckedMark end;local eb,ec=ea:find(":text")if eb~=nil and ec~=nil then local ed=ea:sub(1,eb-1)local ee=ea:sub(ec+1)aU=aU:gsub(ed,""):gsub(ee,"")end elseif Daneel.Config.debug.enableDebug then print("WARNING: GUI.Toggle.GetText(toggle): Can't get the toggle's text because no TextRenderer component has been found on the gameObject '"..tostring(e9.gameObject).."'. Returning nil.")end;return aU end;function GUI.Toggle.Check(e9,ef,bM)if ef==nil then ef=true end;if bM==true or e9.isChecked~=ef then local aU=nil;if e9.gameObject.textRenderer~=nil then aU=e9:GetText()end;e9.isChecked=ef;if e9.gameObject.textRenderer~=nil then e9:SetText(aU)end;if e9.gameObject.modelRenderer~=nil then if ef==true and e9.checkedModel~=nil then e9.gameObject.modelRenderer:SetModel(e9.checkedModel)elseif ef==false and e9.uncheckedModel~=nil then e9.gameObject.modelRenderer:SetModel(e9.uncheckedModel)end end;Daneel.Event.Fire(e9,"OnUpdate",e9)if e9.Group~=nil and ef==true then local c0=GameObject.GetWithTag(e9.Group)for p,b1 in ipairs(c0)do if b1~=e9.gameObject then b1.toggle:Check(false,true)end end end end end;function GUI.Toggle.SetGroup(e9,eg)if eg==nil and e9.Group~=nil then e9.gameObject:RemoveTag(e9.Group)else if e9.Group~=nil then e9.gameObject:RemoveTag(e9.Group)end;e9:Check(false)e9.Group=eg;e9.gameObject:AddTag(e9.Group)end end;function GUI.Toggle.GetGroup(e9)return e9.Group end;function GUI.Toggle.Set(e9,c2)local eg=c2.group;c2.group=nil;local eh=c2.isChecked;c2.isChecked=nil;for G,h in pairs(c2)do e9[G]=h end;if eg~=nil then e9:SetGroup(eg)end;if eh~=nil then e9:Check(eh)end end;local ei={"toggle","Toggle"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["GUI.Toggle.New"]={bz,dZ},["GUI.Toggle.Set"]={ei,cv},["GUI.Toggle.SetText"]={ei,{"text",n}},["GUI.Toggle.GetText"]={ei},["GUI.Toggle.Check"]={ei,{"state",d,isOptional=true},{"forceUpdate",d,isOptional=true}},["GUI.Toggle.SetGroup"]={ei,{"group",n,isOptional=true}},["GUI.Toggle.GetGroup"]={ei}})GUI.ProgressBar={}GUI.ProgressBar.__index=GUI.ProgressBar;function GUI.ProgressBar.New(b1,c2)local ej=table.copy(GUI.Config.progressBar)ej.gameObject=b1;ej.id=Daneel.Utilities.GetId()ej.value=nil;setmetatable(ej,GUI.ProgressBar)c2=c2 or{}if c2.value==nil then c2.value=GUI.Config.progressBar.value end;ej.cameraGO=c2.cameraGO or e0(b1)ej:Set(c2)b1.progressBar=ej;return ej end;function GUI.ProgressBar.SetValue(ej,h)local aL="GUI.ProgressBar.SetValue(progressBar, value) : "local ek=ej.minValue;local el=ej.maxValue;local em=nil;if type(h)=="string"then if h:endswith("%")then em=tonumber(h:sub(1,#h-1))/100;local en=em;em=math.clamp(em,0.0,1.0)if em~=en and Daneel.Config.debug.enableDebug then print(aL.."WARNING : value in percentage with value '"..h.."' is below 0% or above 100%.")end;h=(el-ek)*em+ek else h=tonumber(h)end end;local eo=h;h=math.clamp(h,ek,el)ej.minLength=GUI.ToSceneUnit(ej.minLength,ej.cameraGO)ej.maxLength=GUI.ToSceneUnit(ej.maxLength,ej.cameraGO)local ep=ej:GetValue()if h~=ep then if h~=eo and Daneel.Config.debug.enableDebug then print(aL.." WARNING : value with value '"..eo.."' is out of its boundaries : min='"..ek.."', max='"..el.."'")end;local eq=el-ek;em=(h-ek)/eq;ej.height=GUI.ToSceneUnit(ej.height,ej.cameraGO)local er=(ej.maxLength-ej.minLength)*em+ej.minLength;local es=ej.gameObject.transform:GetLocalScale()ej.gameObject.transform:SetLocalScale(Vector3:New(er,ej.height,es.z))Daneel.Event.Fire(ej,"OnUpdate",ej)end end;GUI.ProgressBar.SetProgress=GUI.ProgressBar.SetValue;function GUI.ProgressBar.UpdateValue(ej,h,et)if h==ej._value then return end;ej._value=h;local ek=ej.minValue;local el=ej.maxValue;local eu=ej.minLength;local em=nil;if type(h)=="string"then local I=h;h=tonumber(h)if h==nil then em=tonumber(I:sub(1,#I-1))/100 end end;if em==nil then local eq=el-ek;em=(h-ek)/eq end;em=math.clamp(em,0.0,1.0)local er=(ej.maxLength-eu)*em+eu;local es=ej.gameObject.transform:GetLocalScale()ej.gameObject.transform:SetLocalScale(Vector3:New(er,ej.height,es.z))if et==true then Daneel.Event.Fire(ej,"OnUpdate",ej)end end;GUI.ProgressBar.UpdateProgress=GUI.ProgressBar.UpdateValue;function GUI.ProgressBar.GetValue(ej,ev)local cI=math.round(ej.gameObject.transform:GetLocalScale().x,2)local eq=ej.maxLength-ej.minLength;local h=(cI-ej.minLength)/eq;if ev==true then h=h*100 else h=(ej.maxValue-ej.minValue)*h+ej.minValue end;return h end;GUI.ProgressBar.GetProgress=GUI.ProgressBar.GetValue;function GUI.ProgressBar.SetHeight(ej,ew)local es=ej.gameObject.transform:GetLocalScale()local ew=GUI.ToSceneUnit(ew,ej.cameraGO)ej.gameObject.transform:SetLocalScale(Vector3:New(es.x,ew,es.z))end;function GUI.ProgressBar.GetHeight(ej)return ej.gameObject.transform:GetLocalScale().y end;function GUI.ProgressBar.Set(ej,c2)local h=c2.value;c2.value=nil;if h==nil then h=ej:GetValue()end;for G,h in pairs(c2)do ej[G]=h end;ej:SetValue(h)end;local ex={"progressBar","ProgressBar"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["GUI.ProgressBar.New"]={bz,dZ},["GUI.ProgressBar.Set"]={ex,cv},["GUI.ProgressBar.SetValue"]={ex,{"value",{n,aA}}},["GUI.ProgressBar.GetValue"]={ex,{"getAsPercentage",d,isOptional=true}},["GUI.ProgressBar.SetHeight"]={ex,{"height",{n,aA}}},["GUI.ProgressBar.GetHeight"]={ex}})GUI.Slider={}GUI.Slider.__index=GUI.Slider;function GUI.Slider.New(b1,c2)if Daneel.modules.MouseInput==nil then error("GUI.Slider.New(): The 'Mouse Input' module is missing from your project. It is required for the player to interact with the GUI.Toggle, GUI.Input and GUI.Slider components.")end;local ey=table.copy(GUI.Config.slider)ey.gameObject=b1;ey.id=Daneel.Utilities.GetId()ey.value=nil;ey.parent=ey.gameObject:GetParent()if ey.parent==nil then local by=CS.CreateGameObject("SliderParent")by.transform:SetPosition(ey.gameObject.transform:GetPosition())ey.gameObject:SetParent(by)end;setmetatable(ey,GUI.Slider)b1.slider=ey;b1:AddTag("guiComponent")b1.OnDrag=function()local bO=CraftStudio.Input.GetMouseDelta()local ez=Vector3:New(bO.x,0,0)if ey.axis=="y"then ez=Vector3:New(0,-bO.y,0,0)end;b1.transform:Move(ez*ey.cameraGO.camera:GetPixelsToUnits())local eA=b1.transform:GetPosition()local eB=ey.parent.transform:GetPosition()if ey.axis=="x"and eA.x<eB.x then ey:SetValue(ey.minValue)elseif ey.axis=="y"and eA.y<eB.y then ey:SetValue(ey.minValue)elseif ey:GetValue()>ey.maxValue then ey:SetValue(ey.maxValue)else Daneel.Event.Fire(ey,"OnUpdate",ey)end end;c2=c2 or{}ey.cameraGO=c2.cameraGO or e0(b1,"GUI.Slider.New()")if c2.value==nil then c2.value=GUI.Config.slider.value end;ey:Set(c2)return ey end;function GUI.Slider.SetValue(ey,h)local aL="GUI.Slider.SetValue( slider, value ) : "local el=ey.maxValue;local ek=ey.minValue;local eC=nil;if type(h)=="string"then if h:endswith("%")then eC=tonumber(h:sub(1,#h-1))/100;h=(el-ek)*eC+ek else h=tonumber(h)end end;local eo=h;h=math.clamp(h,ek,el)if h~=eo and Daneel.Config.debug.enableDebug then print(aL.."WARNING : Argument 'value' with value '"..eo.."' is out of its boundaries : min='"..ek.."', max='"..el.."'")end;local eq=el-ek;eC=(h-ek)/eq;ey.length=GUI.ToSceneUnit(ey.length,ey.cameraGO)local eD=-Vector3:Left()if ey.axis=="y"then eD=Vector3:Up()end;local cG=Vector3.Rotate(eD,ey.gameObject.transform:GetOrientation())local e4=ey.parent.transform:GetPosition()+cG*ey.length*eC;ey.gameObject.transform:SetPosition(e4)Daneel.Event.Fire(ey,"OnUpdate",ey)end;function GUI.Slider.GetValue(ey,ev)local eC=Vector3.Distance(ey.parent.transform:GetPosition(),ey.gameObject.transform:GetPosition())/ey.length;local h=eC*100;if ev~=true then h=(ey.maxValue-ey.minValue)*eC+ey.minValue end;return h end;function GUI.Slider.Set(ey,c2)local h=c2.value;c2.value=nil;if h==nil then h=ey:GetValue()end;for G,h in pairs(c2)do ey[G]=h end;ey:SetValue(h)end;GUI.Input={}GUI.Input.__index=GUI.Input;function GUI.Input.New(b1,c2)if Daneel.modules.MouseInput==nil then error("GUI.Input.New(): The 'Mouse Input' module is missing from your project. It is required for the player to interact with the GUI.Toggle, GUI.Input and GUI.Slider components.")end;c2=c2 or{}local eE=table.merge(GUI.Config.input,c2)eE.gameObject=b1;eE.id=Daneel.Utilities.GetId()setmetatable(eE,GUI.Input)if eE.OnTextEntered==nil then eE.OnTextEntered=function(z)if eE.isFocused then local eF=string.byte(z)if eF==8 then local aU=b1.textRenderer:GetText()eE:Update(aU:sub(1,#aU-1),true)elseif eF>=32 and eF<=127 then if eE.characterRange~=nil and eE.characterRange:find(z,1,true)==nil then return end;eE:Update(z)end end end end;local eG=b1:GetChild("Cursor")if eG~=nil then eE.cursorGO=eG;eG.tweener=Tween.Timer(eE.cursorBlinkInterval,function(eH)if eH.gameObject==nil or eH.gameObject.inner==nil then eH:Destroy()return end;local eI=1;if eH.gameObject.modelRenderer:GetOpacity()==1 then eI=0 end;eH.gameObject.modelRenderer:SetOpacity(eI)end,true)eG.tweener.isPaused=true;eG.tweener.gameObject=eG end;local eJ=eE.isFocused;eE.isFocused=nil;eE:Focus(eJ)b1.input=eE;b1:AddTag("guiComponent")b1:AddTag("gui_input")local eK=b1:GetChild("Background")if eK~=nil then eE.backgroundGO=eK;if eE.focusOnBackgroundClick then eK:AddTag("guiComponent")end end;return eE end;GUI.Input.Module={}Daneel.modules.GUIInput=GUI.Input.Module;function GUI.Input.Module.Update()if CS.Input.WasButtonJustReleased("LeftMouse")then local eL=GameObject.GetWithTag("gui_input")local eM=nil;for p,eN in pairs(eL)do local eE=eN.input;local eO=eN.isMouseOver;if eO~=true and eE.focusOnBackgroundClick and eE.backgroundGO~=nil then eO=eE.backgroundGO.isMouseOver end;if eO==true then eM=eE else eE:Focus(false)end end;if eM~=nil then eM:Focus(true)end end;if CS.Input.WasButtonJustReleased("ValidateInput")then local eL=GameObject.GetWithTag("gui_input")for p,eN in pairs(eL)do local eE=eN.input;if eE.isFocused then Daneel.Event.Fire(eE,"OnValidate",eE)break end end end end;function GUI.Input.Focus(eE,eP)if eP==nil then eP=true end;if eE.isFocused~=eP then eE.isFocused=eP;local aU=string.trim(eE.gameObject.textRenderer:GetText())if eP==true then CS.Input.OnTextEntered(eE.OnTextEntered)if aU==eE.defaultValue then eE.gameObject.textRenderer:SetText("")end else CS.Input.OnTextEntered(nil)if eE.defaultValue~=nil and eE.defaultValue~=""and aU==""then eE.gameObject.textRenderer:SetText(eE.defaultValue)end end;Daneel.Event.Fire(eE,"OnFocus",eE)eE:UpdateCursor()end end;function GUI.Input.UpdateCursor(eE)if eE.cursorGO~=nil then local cZ=eE.gameObject.textRenderer:GetAlignment()if cZ~=TextRenderer.Alignment.Right then local K=eE.gameObject.textRenderer:GetTextWidth()if cZ==TextRenderer.Alignment.Center then K=K/2 end;eE.cursorGO.transform:SetLocalPosition(Vector3:New(K,0,0))end;local eI=0;if eE.isFocused then eI=1 end;eE.cursorGO.modelRenderer:SetOpacity(eI)eE.cursorGO.tweener.isPaused=not eE.isFocused;Daneel.Event.Fire(eE.cursorGO,"OnUpdate",eE)end end;function GUI.Input.Update(eE,aU,eQ)local eR=eE.gameObject.textRenderer:GetText()if not eQ then aU=eR..aU end;if#aU>eE.maxLength then aU=aU:sub(1,eE.maxLength)end;if eR~=aU then eE.gameObject.textRenderer:SetText(aU)Daneel.Event.Fire(eE,"OnUpdate",eE)eE:UpdateCursor()end end;local eS={"slider","Slider"}local eT={"input","Input"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["GUI.Slider.New"]={bz,dZ},["GUI.Slider.Set"]={eS,cv},["GUI.Slider.SetValue"]={eS,{"value",{n,aA}}},["GUI.Slider.GetValue"]={eS,{"getAsPercentage",d,isOptional=true}},["GUI.Input.New"]={bz,dZ},["GUI.Input.Focus"]={eT,{"focus",d,isOptional=true}},["GUI.Input.UpdateCursor"]={eT},["GUI.Input.Update"]={eT,{"text",n},{"replaceText",d,isOptional=true}}})GUI.TextArea={}GUI.TextArea.__index=GUI.TextArea;function GUI.TextArea.New(b1,c2)local eU={}eU.gameObject=b1;b1.textArea=eU;eU.id=Daneel.Utilities.GetId()eU.lineGOs={}setmetatable(eU,GUI.TextArea)eU.textRuler=b1.textRenderer;if eU.textRuler==nil then eU.textRuler=b1:CreateComponent("TextRenderer")end;eU.textRuler:SetText("")c2=c2 or{}eU.cameraGO=c2.cameraGO or e0(b1)eU:Set(table.merge(GUI.Config.textArea,c2))return eU end;function GUI.TextArea.Set(eU,c2)local eV=eU.lineGOs;eU.lineGOs={}local aU=c2.text;c2.text=nil;for G,h in pairs(c2)do eU[G]=h end;eU.lineGOs=eV;if aU==nil then aU=eU.Text end;eU:SetText(aU)end;function GUI.TextArea.SetText(eU,aU)eU.Text=aU;local eW={aU}if eU.newLine~=""then eW=string.split(aU,eU.NewLine)end;local eX=eU.gameObject.transform:GetLocalScale()local eY=eU.AreaWidth;if eY~=nil and eY>0 then local eZ=table.copy(eW)eW={}for p=1,#eZ do local ct=eZ[p]if eU.textRuler:GetTextWidth(ct)*eX.x>eY then local e_=""for a9=1,#ct do local z=ct:sub(a9,a9)e_=e_..z;if eU.textRuler:GetTextWidth(e_)*eX.x>eY then if z==" "then table.insert(eW,e_:sub(1,#e_-1))e_=""else local f0=""for a2=#e_,1,-1 do local f1=e_:sub(a2,a2)if f1==" "then break else f0=f1 ..f0 end end;table.insert(eW,e_:sub(1,#e_-#f0))e_=f0 end;if not eU.WordWrap then e_=nil;break end end end;if e_~=nil then table.insert(eW,e_)end else table.insert(eW,ct)end end end;if type(eU.linesFilter)=="function"then eW=eU.linesFilter(eU,eW)or eW end;local f2=#eW;local eV=eU.lineGOs;local f3=#eV;local f4=eU.LineHeight/eX.y;local b1=eU.gameObject;local f5={font=eU.Font,alignment=eU.Alignment,opacity=eU.Opacity}local f6=-f4/2;if eU.VerticalAlignment=="middle"then f6=f4*f2/2-f4/2 elseif eU.VerticalAlignment=="bottom"then f6=f4*f2-f4/2 end;for p=1,f2 do local ct=eW[p]f5.text=ct;if eV[p]~=nil then eV[p].transform:SetLocalPosition(Vector3:New(0,f6,0))eV[p].textRenderer:Set(f5)else local f7=CS.CreateGameObject("TextArea"..eU.id.."-Line"..p,b1)f7.transform:SetLocalPosition(Vector3:New(0,f6,0))f7.transform:SetLocalScale(Vector3:New(1))f7:CreateComponent("TextRenderer")f7.textRenderer:Set(f5)table.insert(eV,f7)end;f6=f6-f4 end;if f2<f3 then for p=f2+1,f3 do eV[p].textRenderer:SetText("")end end;Daneel.Event.Fire(eU,"OnUpdate",eU)end;function GUI.TextArea.GetText(eU)return eU.Text end;function GUI.TextArea.AddLine(eU,ct,f8)local aU=eU.Text;if f8==true then aU=ct..eU.NewLine..aU else if aU~=""and not string.endswith(aU,eU.NewLine)then ct=eU.NewLine..ct end;aU=aU..ct end;eU:SetText(aU)end;function GUI.TextArea.SetAreaWidth(eU,eY)eY=eY or 0;eY=math.clamp(GUI.ToSceneUnit(eY,eU.cameraGO),0,999)if eU.AreaWidth~=eY then eU.AreaWidth=eY;if#eU.lineGOs>0 then eU:SetText(eU.Text)end end end;function GUI.TextArea.GetAreaWidth(eU)return eU.AreaWidth end;function GUI.TextArea.SetWordWrap(eU,f9)f9=f9 or false;if eU.WordWrap~=f9 then eU.WordWrap=f9;if#eU.lineGOs>0 then eU:SetText(eU.Text)end end end;function GUI.TextArea.GetWordWrap(eU)return eU.WordWrap end;function GUI.TextArea.SetNewLine(eU,e_)if eU.NewLine~=e_ then eU.NewLine=e_;if#eU.lineGOs>0 then eU:SetText(eU.Text)end end end;function GUI.TextArea.GetNewLine(eU)return eU.NewLine end;function GUI.TextArea.SetLineHeight(eU,f4)local f4=GUI.ToSceneUnit(f4,eU.cameraGO)if eU.LineHeight~=f4 then eU.LineHeight=f4;if#eU.lineGOs>0 then eU:SetText(eU.Text)end end end;function GUI.TextArea.GetLineHeight(eU)return eU.LineHeight end;function GUI.TextArea.SetVerticalAlignment(eU,fa)local aL="GUI.TextArea.SetVerticalAlignment( textArea, verticalAlignment ) : "fa=Daneel.Debug.CheckArgValue(fa,"verticalAlignment",{"top","middle","bottom"},aL,GUI.Config.textArea.verticalAlignment)fa=string.trim(fa:lower())if eU.VerticalAlignment~=fa then eU.VerticalAlignment=fa;if#eU.lineGOs>0 then eU:SetText(eU.Text)end end end;function GUI.TextArea.GetVerticalAlignment(eU)return eU.VerticalAlignment end;function GUI.TextArea.SetFont(eU,cY)eU.textRuler:SetFont(cY)cY=eU.textRuler:GetFont()if eU.Font~=cY then eU.Font=cY;if#eU.lineGOs>0 then for p=1,#eU.lineGOs do eU.lineGOs[p].textRenderer:SetFont(eU.Font)end;eU:SetText(eU.Text)end end end;function GUI.TextArea.GetFont(eU)return eU.Font end;function GUI.TextArea.SetAlignment(eU,cZ)eU.textRuler:SetAlignment(cZ)cZ=eU.textRuler:GetAlignment()if eU.Alignment~=cZ then eU.Alignment=cZ;for p=1,#eU.lineGOs do eU.lineGOs[p].textRenderer:SetAlignment(eU.Alignment)end end end;function GUI.TextArea.GetAlignment(eU)return eU.Alignment end;function GUI.TextArea.SetOpacity(eU,eI)if eU.Opacity~=eI then eU.Opacity=eI;for p=1,#eU.lineGOs do eU.lineGOs[p].textRenderer:SetOpacity(eI)end end end;function GUI.TextArea.GetOpacity(eU)return eU.Opacity end;local fb={"textArea","TextArea"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["GUI.TextArea.New"]={{"gameObject",by},dZ},["GUI.TextArea.Set"]={fb,cv},["GUI.TextArea.SetText"]={fb,{"text",n}},["GUI.TextArea.GetText"]={fb},["GUI.TextArea.AddLine"]={fb,{"line",n},{"prepend",d,isOptional=true}},["GUI.TextArea.SetAreaWidth"]={fb,{"areaWidth",{n,aA},isOptional=true}},["GUI.TextArea.GetAreaWidth"]={fb},["GUI.TextArea.SetWordWrap"]={fb,{"wordWrap",d,isOptional=true}},["GUI.TextArea.GetWordWrap"]={fb},["GUI.TextArea.SetNewLine"]={fb,{"newLine",n}},["GUI.TextArea.GetNewLine"]={fb},["GUI.TextArea.SetLineHeight"]={fb,{"lineHeight",{n,aA}}},["GUI.TextArea.GetLineHeight"]={fb},["GUI.TextArea.SetVerticalAlignment"]={fb,{"verticalAlignment",n}},["GUI.TextArea.GetVerticalAlignment"]={fb},["GUI.TextArea.SetFont"]={fb,{"font",{n,"Font"}}},["GUI.TextArea.GetFont"]={fb},["GUI.TextArea.SetAlignment"]={fb,{"alignment",{n,"userdata",aA}}},["GUI.TextArea.GetAlignment"]={fb},["GUI.TextArea.SetOpacity"]={fb,{"opacity",aA}},["GUI.TextArea.GetOpacity"]={fb}})Daneel.modules.GUI=GUI;function GUI.DefaultConfig()local bA={cameraGO=nil,originGO=nil,hud={},toggle={isChecked=false,text="Toggle",checkedMark=":text",uncheckedMark=":text",checkedModel=nil,uncheckedModel=nil},progressBar={height=1,minValue=0,maxValue=100,minLength=0,maxLength=5,value="100%"},slider={minValue=0,maxValue=100,length=5,axis="x",value="0%",OnTextEntered=nil},input={isFocused=false,maxLength=9999,defaultValue=nil,characterRange=nil,focusOnBackgroundClick=true,cursorBlinkInterval=0.5},textArea={areaWidth=0,wordWrap=false,newLine="<br>",lineHeight=1,verticalAlignment="top",font=nil,text="",alignment=nil,opacity=nil},componentObjectsByType={Hud=GUI.Hud,Toggle=GUI.Toggle,ProgressBar=GUI.ProgressBar,Slider=GUI.Slider,Input=GUI.Input,TextArea=GUI.TextArea},componentTypes={},propertiesByComponentName={hud={"position","localPosition","layer","localLayer"},progressBar={"value","height"},slider={"value"},textArea={"text","areaWidth","lineHeight","opacity"}}}return bA end;GUI.Config=GUI.DefaultConfig()function GUI.Load()if Daneel.modules.Tween then table.mergein(Tween.Config.propertiesByComponentName,GUI.Config.propertiesByComponentName)end end;Draw={}Daneel.modules.Draw=Draw;local fc={}local n="string"local d="boolean"local aA="number"local o="table"local a3="Vector3"local bz={"gameObject","GameObject"}local dZ={"params",o,isOptional=true}local cv={"params",o}local fd={"line","LineRenderer"}local fe={"circle","CircleRenderer"}local ff={"draw",d,isOptional=true}Draw.LineRenderer={}fc["Draw.LineRenderer.New"]={bz,dZ}function Draw.LineRenderer.New(b1,c2)local ct={origin=b1.transform:GetPosition(),_direction=Vector3:Left(),_length=1,_width=1,gameObject=b1}ct._endPosition=ct.origin;b1.lineRenderer=ct;setmetatable(ct,Draw.LineRenderer)c2=table.merge(Draw.Config.lineRenderer,c2)if c2.endPosition~=nil then c2.length=nil;c2.direction=nil end;ct:Set(c2)return ct end;fc["Draw.LineRenderer.Set"]={fd,cv}function Draw.LineRenderer.Set(ct,c2)if c2.endPosition then if c2.length or c2.direction then if Daneel.Config.debug.enableDebug then local aU="Draw.LineRenderer.Set( line, params ) : The 'endPosition' property is set with value "..tostring(c2.endPosition)if c2.length then aU=aU.." The 'length' property with value '"..tostring(c2.length).."' has been ignored."end;if c2.direction then aU=aU.." The 'direction' property with value '"..tostring(c2.direction).."' has been ignored."end;print(aU)end;c2.length=nil;c2.direction=nil end end;local draw=false;for G,h in pairs(c2)do local av="Set"..string.ucfirst(G)if Draw.LineRenderer[av]~=nil then draw=true;if av=="SetDirection"then Draw.LineRenderer[av](ct,h,nil,false)else Draw.LineRenderer[av](ct,h,false)end else ct[G]=h end end;if draw then ct:Draw()end end;fc["Draw.LineRenderer.Draw"]={fd}function Draw.LineRenderer.Draw(ct)ct.gameObject.transform:LookAt(ct._endPosition)ct.gameObject.transform:SetLocalScale(Vector3:New(ct._width,ct._width,ct._length))Daneel.Event.Fire(ct,"OnDraw",ct)end;fc["Draw.LineRenderer.SetEndPosition"]={fd,{"endPosition",a3},ff}function Draw.LineRenderer.SetEndPosition(ct,fg,draw)ct._endPosition=fg;ct._direction=ct._endPosition-ct.origin;ct._length=ct._direction:Length()if draw==nil or draw==true then ct:Draw()end end;fc["Draw.LineRenderer.GetEndPosition"]={fd}function Draw.LineRenderer.GetEndPosition(ct)return ct._endPosition end;fc["Draw.LineRenderer.SetLength"]={fd,{"length",aA},ff}function Draw.LineRenderer.SetLength(ct,K,draw)ct._length=K;ct._endPosition=ct.origin+ct._direction*K;if draw==nil or draw==true then ct:Draw()end end;fc["Draw.LineRenderer.GetLength"]={fd}function Draw.LineRenderer.GetLength(ct)return ct._length end;fc["Draw.LineRenderer.SetDirection"]={fd,{"direction",a3},{"useDirectionAsLength",d,isOptional=true},ff}function Draw.LineRenderer.SetDirection(ct,eD,fh,draw)ct._direction=eD:Normalized()if fh==true then ct._length=eD:Length()end;ct._endPosition=ct.origin+ct._direction*ct._length;if draw==nil or draw==true then ct:Draw()end end;fc["Draw.LineRenderer.GetDirection"]={fd}function Draw.LineRenderer.GetDirection(ct)return ct._direction end;fc["Draw.LineRenderer.SetWidth"]={fd,{"width",aA},ff}function Draw.LineRenderer.SetWidth(ct,d0,draw)ct._width=d0;if draw==nil or draw==true then ct:Draw()end end;fc["Draw.LineRenderer.GetWidth"]={fd}function Draw.LineRenderer.GetWidth(ct)return ct._width end;Draw.CircleRenderer={}fc["Draw.CircleRenderer.New"]={bz,dZ}function Draw.CircleRenderer.New(b1,c2)local fi={gameObject=b1,origin=b1.transform:GetPosition(),segments={},_segmentCount=6,_radius=1,_width=1,_model=nil}fi._endPosition=fi.origin;b1.circleRenderer=fi;c2=c2 or{}if c2.model==nil and b1.modelRenderer~=nil then c2.model=b1.modelRenderer:GetModel()b1.modelRenderer:SetModel(nil)end;setmetatable(fi,Draw.CircleRenderer)fi:Set(table.merge(Draw.Config.circleRenderer,c2))return fi end;fc["Draw.CircleRenderer.Set"]={fe,cv}function Draw.CircleRenderer.Set(fi,c2)local draw=false;for G,h in pairs(c2)do local av="Set"..string.ucfirst(G)if Draw.CircleRenderer[av]~=nil then draw=true;Draw.CircleRenderer[av](fi,h,false)else fi[G]=h end end;if draw then fi:Draw()end end;fc["Draw.CircleRenderer.Draw"]={fe}function Draw.CircleRenderer.Draw(fi)local f6=2*math.pi/fi._segmentCount;local g=-f6;local fj=fi:GetId()for p=1,fi._segmentCount do g=g+f6;local fk=Vector3:New(fi._radius*math.cos(g),fi._radius*math.sin(g),0)if fi.segments[p]==nil then local fl=CS.CreateGameObject("Circle "..fj.." Segment "..p,fi.gameObject)fl:CreateComponent("ModelRenderer")if fi._model~=nil then fl.modelRenderer:SetModel(fi._model)end;table.insert(fi.segments,p,fl)end;fi.segments[p].transform:SetLocalPosition(fk)end;while#fi.segments>fi._segmentCount do table.remove(fi.segments):Destroy()end;local fm=fi.segments[1].transform:GetPosition()local fn=Vector3.Distance(fm,fi.segments[2].transform:GetPosition())for p,fo in ipairs(fi.segments)do if fi.segments[p+1]~=nil then fo.transform:LookAt(fi.segments[p+1].transform:GetPosition())else fo.transform:LookAt(fm)end;fo.transform:SetLocalScale(Vector3:New(fi._width,fi._width,fn))end;Daneel.Event.Fire(fi,"OnDraw",fi)end;fc["Draw.CircleRenderer.SetRadius"]={fe,{"radius",aA},ff}function Draw.CircleRenderer.SetRadius(fi,fp,draw)fi._radius=fp;if draw==nil or draw==true then fi:Draw()end end;fc["Draw.CircleRenderer.GetRadius"]={fe}function Draw.CircleRenderer.GetRadius(fi)return fi._radius end;fc["Draw.CircleRenderer.SetSegmentCount"]={fe,{"count",aA},ff}function Draw.CircleRenderer.SetSegmentCount(fi,fq,draw)if fq<3 then fq=3 end;if fi._segmentCount~=fq then fi._segmentCount=fq;if draw==nil or draw==true then fi:Draw()end end end;fc["Draw.CircleRenderer.GetSegmentCount"]={fe}function Draw.CircleRenderer.GetSegmentCount(fi)return fi._segmentCount end;fc["Draw.CircleRenderer.SetWidth"]={fe,{"width",aA}}function Draw.CircleRenderer.SetWidth(fi,d0)if fi._width~=d0 then fi._width=d0;if#fi.segments>0 and draw then local fr=Vector3:New(fi._width,fi._width,fi.segments[1].transform:GetLocalScale().z)for p,ct in pairs(fi.segments)do ct.transform:SetLocalScale(fr)end end end end;fc["Draw.CircleRenderer.GetWidth"]={fe}function Draw.CircleRenderer.GetWidth(fi)return fi._width end;fc["Draw.CircleRenderer.SetModel"]={fe,{"model",{"string","Model"},isOptional=true}}function Draw.CircleRenderer.SetModel(fi,cO)if fi._model~=cO then if type(cO)=="sting"and fi._model~=nil and fi._model:GetPath()==cO then return end;if cO~=nil then fi._model=Asset.Get(cO,"Model",true)else fi._model=nil end;for p,ct in pairs(fi.segments)do ct.modelRenderer:SetModel(fi._model)end end end;fc["Draw.CircleRenderer.GetModel"]={fe}function Draw.CircleRenderer.GetModel(fi)return fi._model end;fc["Draw.CircleRenderer.SetOpacity"]={fe,{"opacity","number"}}function Draw.CircleRenderer.SetOpacity(fi,eI)for p=1,#cicle.segments do fi.segments[p].modelRenderer:SetOpacity(eI)end end;fc["Draw.CircleRenderer.GetOpacity"]={fe}function Draw.CircleRenderer.GetOpacity(fi)if fi.segments[1]~=nil then return fi.segments[1].modelRenderer:GetOpacity()end;return nil end;table.mergein(Daneel.Debug.functionArgumentsInfo,fc)function Draw.DefaultConfig()local bA={lineRenderer={direction=Vector3:Left(),length=2,width=0.1},circleRenderer={segmentCount=6,radius=1,width=1,model=nil},componentObjectsByType={LineRenderer=Draw.LineRenderer,CircleRenderer=Draw.CircleRenderer},propertiesByComponentName={lineRenderer={"length","endPosition","direction","width"},circleRenderer={"radius","segmentCount","direction","width","opacity"}}}return bA end;Draw.Config=Draw.DefaultConfig()function Draw.Load()if Daneel.modules.Tween then table.mergein(Tween.Config.propertiesByComponentName,Draw.Config.propertiesByComponentName)end end;Color={}ColorMT={__call=function(aq,...)return aq.New(...)end,__index=function(ay,G)local fs=Color.colorsByName[G:lower()]if fs~=nil then return Color.New(fs)end end}setmetatable(Color,ColorMT)function Color.__index(ft,G)local fu={"r","g","b"}G=fu[G]or G;return Color[G]or ft["_"..G]or rawget(ft,G)end;function Color.__newindex(ft,G,h)local fu={"r","g","b"}G=fu[G]or G;if G=="r"or G=="g"or G=="b"then ft["_"..G]=math.round(math.clamp(tonumber(h),0,255),0)else rawset(ft,G,h)end end;function Color.__tostring(ft)local n="Color: { r="..ft._r..", g="..ft._g..", b="..ft._b..", hex=\""..ft:GetHex().."\""local b3=ft:GetName()if b3~=nil then n=n..", name=\""..b3 .."\""end;return n.." }"end;function Color.New(q,fv,d)local ft=setmetatable({},Color)if type(q)=="string"and fv==nil then local fw=Color[q]if fw~=nil then return fw else ft:SetHex(q)end else if type(q)=="table"then if q.r~=nil then fv=q.g;d=q.b;q=q.r elseif q.x~=nil then fv=q.y;d=q.z;q=q.x elseif#q==3 then fv=q[2]d=q[3]q=q[1]end end;ft.r=q or 0;ft.g=fv or ft._r;ft.b=d or ft._g end;return ft end;Color.colorsByName={red={255,0,0},green={0,255,0},blue={0,0,255},yellow={255,255,0},cyan={0,255,255},magenta={255,0,255},white={255,255,255},black={0,0,0}}for b3,fs in pairs(Color.colorsByName)do Color.colorsByName[b3]=Color.New(fs)end;function Color.GetName(ft)for b3,fs in pairs(Color.colorsByName)do if type(fs)=="string"then fs={Color.HexToRGB(fs)}end;if ft._r==fs[1]and ft._g==fs[2]and ft._b==fs[3]then return b3 end end end;function Color.ToArray(ft)return{ft._r,ft._g,ft._b}end;function Color.ToRGB(ft)return{r=ft._r,g=ft._g,b=ft._b}end;function Color.ToVector3(ft)return Vector3:New(ft._r,ft._g,ft._b)end;function Color.ToString(ft)return ft._r.." "..ft._g.." "..ft._b end;function string.tocolor(fx)local ft=Color.New(0)local fu={"b","g","r"}for w in string.gmatch(fx,"[0-9]+")do ft[table.remove(fu)]=tonumber(w)end;return ft end;function Color.RGBToHex(q,fv,d)local fs=Color.New(q,fv,d):ToArray()local fy=""for G=1,3 do local h=fs[G]local fz=''while h>0 do local ah=math.fmod(h,16)+1;h=math.floor(h/16)fz=string.sub('0123456789ABCDEF',ah,ah)..fz end;if string.len(fz)==0 then fz='00'elseif string.len(fz)==1 then fz='0'..fz end;fy=fy..fz end;return fy end;function Color.GetHex(ft)return Color.RGBToHex(ft)end;function Color.HexToRGB(fz)fz=fz:gsub("#",""):gsub("0x",""):gsub("0X","")return tonumber("0x"..fz:sub(1,2)),tonumber("0x"..fz:sub(3,4)),tonumber("0x"..fz:sub(5,6))end;function Color.SetHex(ft,fz)local fA={Color.HexToRGB(fz)}for p=1,3 do ft[p]=fA[p]end end;function Color.GetHSV(ft)local q,fv,d=ft._r/255,ft._g/255,ft._b/255;local m,l=math.max(q,fv,d),math.min(q,fv,d)local fB,n,a3;a3=m;local fC=m-l;if m==0 then n=0 else n=fC/m end;if m==l then fB=0 else if m==q then fB=(fv-d)/fC;if fv<d then fB=fB+6 end elseif m==fv then fB=(d-q)/fC+2 elseif m==d then fB=(q-fv)/fC+4 end;fB=fB/6 end;return fB,n,a3 end;function Color.__eq(c,d)return c._r==d._r and c._g==d._g and c._b==d._b end;function Color.__add(c,d)return Color.New(c._r+d._r,c._g+d._g,c._b+d._b)end;function Color.__sub(c,d)return Color.New(c._r-d._r,c._g-d._g,c._b-d._b)end;function Color.__mul(c,d)local ft=Color.New(0)if type(c)=="table"and type(d)=="number"then ft.r=c._r*d;ft.g=c._g*d;ft.b=c._b*d elseif type(c)=="number"and type(d)=="table"then ft.r=c*d._r;ft.g=c*d._g;ft.b=c*d._b elseif type(c)=="table"and type(d)=="table"then ft.r=c._r*d._r;ft.g=c._g*d._g;ft.b=c._b*d._b end;return ft end;function Color.__div(c,d)local ft=Color.New(0)if type(c)=="table"and type(d)=="number"then ft.r=c._r/d;ft.g=c._g/d;ft.b=c._b/d elseif type(c)=="number"and type(d)=="table"then ft.r=c/d._r;ft.g=c/d._g;ft.b=c/d._b elseif type(c)=="table"and type(d)=="table"then ft.r=c._r/d._r;ft.g=c._g/d._g;ft.b=c._b/d._b end;return ft end;function Color._resolve(fD)local fE=Color.New(0)local fF=Color.New(0)for dj,h in pairs(fD:ToRGB())do if h~=255 and h>=127.5 then fE[dj]=255;fF[dj]=0 elseif h~=0 and h<127.5 then fE[dj]=0;fF[dj]=255 else fE[dj]=h;fF[dj]=h end end;if fF==fE then fF=nil end;local fG=fE;local fH=0;if fF~=nil then fH=Color._getFrontOpacity(fE,fF,fD)fG=Color.New((fF:ToVector3()-fE:ToVector3())*fH+fE:ToVector3())if fG~=fD then print("Color._resolve(): Sorry, can't resolve target color [1], getting [2] instead",fD,fG)end end;return fE,fF,fH,fG end;function Color._getFrontOpacity(fE,fF,fD)local dj=nil;local fu={"r","g","b"}for p=1,3 do local fI=fu[p]if fF[fI]~=fE[fI]then dj=fI;break end end;if dj~=nil then return math.round((fD[dj]-fE[dj])/fF[dj]-fE[dj],3)else print("Color._getFrontOpacity(): can't calculate opacity because no suitable component was found",fE,fF,fD)return 1 end end;Color.colorAssetsFolder="Colors/"function Color._getAsset(ft,bG,fJ)if not string.endswith(Color.colorAssetsFolder,"/")then Color.colorAssetsFolder=Color.colorAssetsFolder.."/"end;fJ=fJ or Color.colorAssetsFolder;local b3=ft:GetName()if b3==nil and Daneel.Config.debug.enableDebug==true then error("Color._getAsset(): Can't find the name of the provided color",ft,"The color must be set in the Color.colorsByName table.")end;local cA=fJ..b3;local bI=CS.FindAsset(cA,bG)if bI==nil then cA=fJ..string.ucfirst(b3)bI=CS.FindAsset(cA,bG)end;if bI==nil and Daneel.Config.debug.enableDebug==true then error("Color._getAsset(): Could not find asset of type '"..bG.."' at path '"..cA.."' for ",ft)end;return bI end;function Color._setColor(dT,ft)local fK,bG,fL,fM;local aQ=getmetatable(dT)if aQ==ModelRenderer then fK="ModelRenderer"bG="Model"fL=ModelRenderer.SetModel;fM=ModelRenderer.GetModel elseif aQ==TextRenderer then fK="TextRenderer"bG="Font"fL=TextRenderer.SetFont;fM=TextRenderer.GetFont end;local fE,fF,fH=ft:_resolve()local b1=dT.gameObject;local fN=b1.frontColorRenderer;local fJ=nil;local fO=fM(dT)if fO~=nil then fJ=fO:GetPath():gsub(fO.name,"")end;local fP=fE:_getAsset(bG,fJ)if fO~=fP then fL(dT,fP)end;if fN==nil and fF~=nil then fN=b1:CreateComponent(fK)b1[string.lcfirst(fK)]=dT;b1.frontColorRenderer=fN;if fK=="TextRenderer"then fN:SetAlignment(dT:GetAlignment())end end;if fN~=nil then if fF~=nil then local fP=fF:_getAsset(bG,fJ)local fO=fM(fN)if fO~=fP then fL(fN,fP)end end;fN.Fo=fH;fN:SetOpacity(fH*dT:GetOpacity())end end;function ModelRenderer.SetColor(cM,ft)Color._setColor(cM,ft)end;function TextRenderer.SetColor(cW,ft)Color._setColor(cW,ft)end;local fQ=TextRenderer.SetText;function TextRenderer.SetText(cW,aU)fQ(cW,aU)local fN=cW.gameObject.frontColorRenderer;if fN~=nil then fQ(fN,aU)end end;local fR=TextRenderer.SetAlignment;function TextRenderer.SetAlignment(cW,cZ)fR(cW,cZ)local fN=cW.gameObject.frontColorRenderer;if fN~=nil then fR(fN,cZ)end end;function Color._setOpacity(dT,eI)dT:oSetOpacity(eI)local fN=dT.gameObject.frontColorRenderer;if fN~=nil and dT~=fN then local fH=fN.Fo or 1;fN:oSetOpacity(fH*eI)end end;ModelRenderer.oSetOpacity=ModelRenderer.SetOpacity;ModelRenderer.SetOpacity=Color._setOpacity;TextRenderer.oSetOpacity=TextRenderer.SetOpacity;TextRenderer.SetOpacity=Color._setOpacity;function Color._getColor(dT)local fK,fM;local aQ=getmetatable(dT)if aQ==ModelRenderer then fK="ModelRenderer"fM=ModelRenderer.GetModel elseif aQ==TextRenderer then fK="TextRenderer"fM=TextRenderer.GetFont end;local fE,fF,fG;local bI=fM(dT)if bI~=nil then fE=Color[bI:GetName()]end;local fN=dT.gameObject.frontColorRenderer;local fH=1;if fN~=nil and fE~=nil then fH=fN.Fo or 1;local bI=fM(fN)if bI~=nil then fF=Color[bI:GetName()]end end;if fE~=nil then if fF~=nil then fG=Color.New((fF:ToVector3()-fE:ToVector3())*fH+fE:ToVector3())else fG=fE end end;return fG end;function ModelRenderer.GetColor(cM)return Color._getColor(cM)end;function TextRenderer.GetColor(cW)return Color._getColor(cW)end;Color.Pattern={DesaturedPlainColor=1,DeValuedPlainColor=2,Any0255=3,["21128"]=4,["0128"]=5}Color.PatternsById={}for b3,az in pairs(Color.Pattern)do Color.PatternsById[az]=b3 end;function Color.GetRandom(k)k=k or math.random(#Color.PatternsById)local fS=table.copy(Color.colorsByName)fS.black=nil;fS=table.getvalues(fS)local ft=Color.New(0)if k==1 then local fT=Color.New(fS[math.random(#fS)])ft=fT+Color.New(math.random(0,255))elseif k==2 then local fT=Color.New(fS[math.random(#fS)])ft=fT-Color.New(math.random(0,255))elseif k==3 then local _={0,255,math.random(0,255)}for p=1,3 do ft[p]=table.remove(_,math.random(#_))end elseif k==4 then local l=math.random(0,128)local m=255-l;local fU=l;if math.random(2)==1 then fU=m end;local _={l,m,fU}for p=1,3 do ft[p]=table.remove(_,math.random(#_))end elseif k==5 then local l=math.random(0,128)local m=255-l;local fU=0;if math.random(2)==1 then fU=255 end;local _={l,m,fU}for p=1,3 do ft[p]=table.remove(_,math.random(#_))end end;return ft end;Tween={}local function fV(eH)if eH.target~=nil then Daneel.Debug.StackTrace.BeginFunction("GetTweenerProperty",eH)local h=nil;h=eH.target[eH.property]if h==nil then local bl="Get"..string.ucfirst(eH.property)if eH.target[bl]~=nil then h=eH.target[bl](eH.target)end end;Daneel.Debug.StackTrace.EndFunction()return h end end;local function fW(eH,h)if eH.target~=nil then Daneel.Debug.StackTrace.BeginFunction("SetTweenerProperty",eH,h)if eH.valueType=="string"then if type(h)=="number"and h>=#eH.stringValue+1 then local fX=eH.startStringValue..eH.endStringValue:sub(1,h)if fX~=eH.stringValue then eH.stringValue=fX;h=fX else return end else return end end;if eH.target[eH.property]==nil then local bl="Set"..string.ucfirst(eH.property)if eH.target[bl]~=nil then eH.target[bl](eH.target,eH.property)end else eH.target[eH.property]=h end;Daneel.Debug.StackTrace.EndFunction()end end;Tween.Tweener={newTweeners={},tweeners={}}Tween.Tweener.__index=Tween.Tweener;setmetatable(Tween.Tweener,{__call=function(aq,...)return aq.New(...)end})function Tween.Tweener.__tostring(eH)return"Tweener: "..eH.id end;function Tween.Tweener.New(fY,a4,fZ,f_,g0,c2)Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.New",fY,a4,fZ,f_,c2)local aL="Tween.Tweener.New(target, property, endValue, duration[, params]) : "local eH=table.copy(Tween.Config.tweener)setmetatable(eH,Tween.Tweener)eH.id=Daneel.Utilities.GetId()local g1=type(fY)local aQ=nil;if g1=="table"then aQ=getmetatable(fY)end;if g1=="number"or g1=="string"or aQ==Vector2 or aQ==Vector3 then c2=g0;g0=f_;f_=fZ;fZ=a4;local g2=fY;aL="Tween.Tweener.New(startValue, endValue, duration[, onCompleteCallback, params]) : "Daneel.Debug.CheckArgType(f_,"duration","number",aL)if type(g0)=="table"then c2=g0;g0=nil end;Daneel.Debug.CheckOptionalArgType(g0,"onCompleteCallback","function",aL)Daneel.Debug.CheckOptionalArgType(c2,"params","table",aL)eH.startValue=g2;eH.endValue=fZ;eH.duration=f_;if g0~=nil then eH.OnComplete=g0 end;if c2~=nil then eH:Set(c2)end elseif a4==nil then Daneel.Debug.CheckArgType(fY,"params","table",aL)aL="Tween.Tweener.New(params) : "eH:Set(fY)else Daneel.Debug.CheckArgType(fY,"target","table",aL)Daneel.Debug.CheckArgType(a4,"property","string",aL)Daneel.Debug.CheckArgType(f_,"duration","number",aL)if type(g0)=="table"then c2=g0;g0=nil end;Daneel.Debug.CheckOptionalArgType(g0,"onCompleteCallback","function",aL)Daneel.Debug.CheckOptionalArgType(c2,"params","table",aL)eH.target=fY;eH.property=a4;eH.endValue=fZ;eH.duration=f_;if g0~=nil then eH.OnComplete=g0 end;if c2~=nil then eH:Set(c2)end end;if eH.endValue==nil then error("Tween.Tweener.New(): 'endValue' property is nil for tweener: "..tostring(eH))end;if eH.startValue==nil then eH.startValue=fV(eH)end;if eH.target~=nil then eH.gameObject=eH.target.gameObject end;eH.valueType=Daneel.Debug.GetType(eH.startValue)if eH.valueType=="string"then eH.startStringValue=eH.startValue;eH.stringValue=eH.startStringValue;eH.endStringValue=eH.endValue;eH.startValue=1;eH.endValue=#eH.endStringValue end;Tween.Tweener.newTweeners[eH.id]=eH;Daneel.Debug.StackTrace.EndFunction()return eH end;function Tween.Tweener.Set(eH,c2)for G,h in pairs(c2)do eH[G]=h end end;function Tween.Tweener.Play(eH)if eH.isEnabled==false then return end;eH.isPaused=false;Daneel.Event.Fire(eH,"OnPlay",eH)end;function Tween.Tweener.Pause(eH)if eH.isEnabled==false then return end;eH.isPaused=true;Daneel.Event.Fire(eH,"OnPause",eH)end;function Tween.Tweener.Restart(eH)if eH.isEnabled==false then return end;eH.elapsed=0;eH.fullElapsed=0;eH.elapsedDelay=0;eH.completedLoops=0;eH.isCompleted=false;eH.hasStarted=false;local g2=eH.startValue;if eH.loopType=="yoyo"and eH.completedLoops%2~=0 then g2=eH.endValue end;if eH.target~=nil then fW(eH,g2)end;eH.value=g2 end;function Tween.Tweener.Complete(eH)if eH.isEnabled==false or eH.loops==-1 then return end;eH.isCompleted=true;local fZ=eH.endValue;if eH.loopType=="yoyo"then if eH.loops%2==0 and eH.completedLoops%2==0 then fZ=eH.startValue elseif eH.loops%2~=0 and eH.completedLoops%2~=0 then fZ=eH.startValue end end;if eH.target~=nil then fW(eH,fZ)end;eH.value=fZ;Daneel.Event.Fire(eH,"OnComplete",eH)if eH.destroyOnComplete then eH:Destroy()end end;local function g3(b1)return b1.isDestroyed==true or b1.inner==nil end;function Tween.Tweener.IsTargetDestroyed(eH)if eH.target~=nil then if eH.target.isDestroyed then return true end;if eH.target.gameObject~=nil and g3(eH.target.gameObject)then return true end end;if eH.gameObject~=nil and g3(eH.gameObject)then return true end;return false end;function Tween.Tweener.Destroy(eH)eH.isEnabled=false;eH.isPaused=true;eH.target=nil;eH.duration=0;Tween.Tweener.tweeners[eH.id]=nil;CraftStudio.Destroy(eH)end;function Tween.Tweener.Update(eH,g4)if eH.isEnabled==false then return end;if Tween.Ease[eH.easeType]==nil then if Daneel.Config.debug.enableDebug then print("Tween.Tweener.Update() : Easing '"..tostring(eH.easeType).."' for tweener ID '"..tween.id.."' does not exists. Setting it back for the default easing '"..Tween.Config.tweener.easeType.."'.")end;eH.easeType=Tween.Config.tweener.easeType end;if g4~=nil then eH.elapsed=eH.elapsed+g4;eH.fullElapsed=eH.fullElapsed+g4 end;local h=nil;if eH.elapsed>eH.duration then eH.isCompleted=true;eH.elapsed=eH.duration;if eH.isRelative==true then h=eH.startValue+eH.endValue else h=eH.endValue end else if eH.valueType=="Vector3"then h=Vector3:New(Tween.Ease[eH.easeType](eH.elapsed,eH.startValue.x,eH.diffValue.x,eH.duration),Tween.Ease[eH.easeType](eH.elapsed,eH.startValue.y,eH.diffValue.y,eH.duration),Tween.Ease[eH.easeType](eH.elapsed,eH.startValue.z,eH.diffValue.z,eH.duration))elseif eH.valueType=="Vector2"then h=Vector2.New(Tween.Ease[eH.easeType](eH.elapsed,eH.startValue.x,eH.diffValue.x,eH.duration),Tween.Ease[eH.easeType](eH.elapsed,eH.startValue.y,eH.diffValue.y,eH.duration))else h=Tween.Ease[eH.easeType](eH.elapsed,eH.startValue,eH.diffValue,eH.duration)end end;if eH.target~=nil then fW(eH,h)end;eH.value=h;Daneel.Event.Fire(eH,"OnUpdate",eH)end;local aF={"tweener","Tween.Tweener"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["Tween.Tweener.Set"]={aF,{"params","table"}},["Tween.Tweener.Play"]={aF},["Tween.Tweener.Pause"]={aF},["Tween.Tweener.Restart"]={aF},["Tween.Tweener.Complete"]={aF},["Tween.Tweener.IsTargetDestroyed"]={aF},["Tween.Tweener.Destroy"]={aF},["Tween.Tweener.Update"]={aF,{"deltaDuration","number"}}})Tween.Timer={}Tween.Timer.__index=Tween.Tweener;setmetatable(Tween.Timer,{__call=function(aq,...)return aq.New(...)end})function Tween.Timer.New(f_,cB,g5,c2)Daneel.Debug.StackTrace.BeginFunction("Tween.Timer.New",f_,cB,g5,c2)local aL="Tween.Timer.New( duration, callback[, isInfiniteLoop, params] ) : "if type(g5)=="table"then c2=g5;aL="Tween.Timer.New( duration, callback[, params] ) : "end;Daneel.Debug.CheckArgType(f_,"duration","number",aL)Daneel.Debug.CheckArgType(cB,"callback",{"function","userdata"},aL)Daneel.Debug.CheckOptionalArgType(c2,"params","table",aL)local eH=table.copy(Tween.Config.tweener)setmetatable(eH,Tween.Tweener)eH.id=Daneel.Utilities.GetId()eH.startValue=f_;eH.endValue=0;eH.duration=f_;if g5==true then eH.loops=-1;eH.OnLoopComplete=cB else eH.OnComplete=cB end;if c2~=nil then eH:Set(c2)end;Tween.Tweener.tweeners[eH.id]=eH;Daneel.Debug.StackTrace.EndFunction()return eH end;Daneel.modules.Tween=Tween;function Tween.DefaultConfig()local bA={tweener={isEnabled=true,isPaused=false,delay=0.0,duration=0.0,durationType="time",startValue=nil,endValue=0.0,loops=0,loopType="simple",easeType="linear",isRelative=false,destroyOnComplete=true,destroyOnSceneLoad=true,updateInterval=1,Id=-1,hasStarted=false,isCompleted=false,elapsed=0,fullElapsed=0,elapsedDelay=0,completedLoops=0,diffValue=0.0,value=0.0,frameCount=0},objectsByType={["Tween.Tweener"]=Tween.Tweener},propertiesByComponentName={transform={"scale","localScale","position","localPosition","eulerAngles","localEulerAngles"},modelRenderer={"opacity"},mapRenderer={"opacity"},textRenderer={"text","opacity"},camera={"fov"}}}return bA end;Tween.Config=Tween.DefaultConfig()function Tween.Awake()local o={}for g6,g7 in pairs(Tween.Config.propertiesByComponentName)do for p=1,#g7 do local a4=g7[p]o[a4]=o[a4]or{}table.insert(o[a4],g6)end end;Tween.Config.componentNamesByProperty=o;table.mergein(Tween.Tweener.tweeners,Tween.Tweener.newTweeners)Tween.Tweener.newTweeners={}for az,eH in pairs(Tween.Tweener.tweeners)do if eH.destroyOnSceneLoad then eH:Destroy()end end end;function Tween.Update()table.mergein(Tween.Tweener.tweeners,Tween.Tweener.newTweeners)Tween.Tweener.newTweeners={}for az,eH in pairs(Tween.Tweener.tweeners)do if eH:IsTargetDestroyed()then eH:Destroy()end;if eH.isEnabled==true and eH.isPaused==false and eH.isCompleted==false and eH.duration>0 then eH.frameCount=eH.frameCount+1;if eH.frameCount%eH.updateInterval==0 then local g4=Daneel.Time.deltaTime*eH.updateInterval;if eH.durationType=="realTime"then g4=Daneel.Time.realDeltaTime*eH.updateInterval elseif eH.durationType=="frame"then g4=eH.updateInterval end;if g4>0 then if eH.elapsedDelay>=eH.delay then if eH.hasStarted==false then eH.hasStarted=true;if eH.startValue==nil then if eH.target~=nil then eH.startValue=fV(eH)else error("Tween.Update() : startValue is nil but no target is set for tweener: "..tostring(eH))end elseif eH.target~=nil then fW(eH,eH.startValue)end;eH.value=eH.startValue;if eH.isRelative==true then eH.diffValue=eH.endValue else eH.diffValue=eH.endValue-eH.startValue end;Daneel.Event.Fire(eH,"OnStart",eH)end;eH:Update(g4)else eH.elapsedDelay=eH.elapsedDelay+g4 end;if eH.isCompleted==true then eH.completedLoops=eH.completedLoops+1;if eH.loops==-1 or eH.completedLoops<eH.loops then eH.isCompleted=false;eH.elapsed=0;if eH.loopType:lower()=="yoyo"then local g2=eH.startValue;if eH.isRelative then eH.startValue=eH.value;eH.endValue=-eH.endValue;eH.diffValue=eH.endValue else eH.startValue=eH.endValue;eH.endValue=g2;eH.diffValue=-eH.diffValue end elseif eH.target~=nil then fW(eH,eH.startValue)end;eH.value=eH.startValue;Daneel.Event.Fire(eH,"OnLoopComplete",eH)else Daneel.Event.Fire(eH,"OnComplete",eH)if eH.destroyOnComplete and eH.Destroy~=nil then eH:Destroy()end end end end end end end end;local function g8(b1,a4)local bF=nil;if(a4=="position"or a4=="localPosition")and GUI~=nil and GUI.Hud~=nil and b1.hud~=nil then bF=b1.hud elseif a4=="text"and GUI~=nil and GUI.TextArea~=nil and b1.textArea~=nil then bF=b1.textArea else local g9=Tween.Config.componentNamesByProperty[a4]if g9~=nil then for p=1,#g9 do bF=b1[g9[p]]if bF~=nil then break end end end end;if bF==nil then error("Tween: resolveTarget(): Couldn't resolve the target for property '"..a4 .."' and gameObject: "..tostring(b1))end;return bF end;function GameObject.Animate(b1,a4,fZ,f_,g0,c2)local bF=nil;if type(g0)=="table"and c2==nil then c2=g0;g0=nil end;if c2~=nil and c2.target~=nil then bF=c2.target else bF=g8(b1,a4)end;return Tween.Tweener.New(bF,a4,fZ,f_,g0,c2)end;Daneel.Debug.functionArgumentsInfo["GameObject.Animate"]={{"gameObject","GameObject"},{"property","string"},{"endValue",{"string","number","Vector2","Vector3"}},{"duration","number"}}
-- Easing equations
-- From Emmanuel Oga's easing equations : https://github.com/EmmanuelOga/easing

--
-- Adapted from
-- Tweener's easing functions (Penner's Easing Equations)
-- and http://code.google.com/p/tweener/ (jstweener javascript version)
--

--[[
Disclaimer for Robert Penner's Easing Equations license:

TERMS OF USE - EASING EQUATIONS

Open source under the BSD License.

Copyright © 2001 Robert Penner
All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
* Neither the name of the author nor the names of contributors may be used to endorse or promote products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
]]

-- For all easing functions:
-- t = elapsed time
-- b = begin
-- c = change == ending - beginning
-- d = duration (total time)

local pow = math.pow
local sin = math.sin
local cos = math.cos
local pi = math.pi
local sqrt = math.sqrt
local abs = math.abs
local asin = math.asin

local function linear(t, b, c, d)
  return c * t / d + b
end

local function inQuad(t, b, c, d)
  t = t / d
  return c * pow(t, 2) + b
end

local function outQuad(t, b, c, d)
  t = t / d
  return -c * t * (t - 2) + b
end

local function inOutQuad(t, b, c, d)
  t = t / d * 2
  if t < 1 then
    return c / 2 * pow(t, 2) + b
  else
    return -c / 2 * ((t - 1) * (t - 3) - 1) + b
  end
end

local function outInQuad(t, b, c, d)
  if t < d / 2 then
    return outQuad (t * 2, b, c / 2, d)
  else
    return inQuad((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inCubic (t, b, c, d)
  t = t / d
  return c * pow(t, 3) + b
end

local function outCubic(t, b, c, d)
  t = t / d - 1
  return c * (pow(t, 3) + 1) + b
end

local function inOutCubic(t, b, c, d)
  t = t / d * 2
  if t < 1 then
    return c / 2 * t * t * t + b
  else
    t = t - 2
    return c / 2 * (t * t * t + 2) + b
  end
end

local function outInCubic(t, b, c, d)
  if t < d / 2 then
    return outCubic(t * 2, b, c / 2, d)
  else
    return inCubic((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inQuart(t, b, c, d)
  t = t / d
  return c * pow(t, 4) + b
end

local function outQuart(t, b, c, d)
  t = t / d - 1
  return -c * (pow(t, 4) - 1) + b
end

local function inOutQuart(t, b, c, d)
  t = t / d * 2
  if t < 1 then
    return c / 2 * pow(t, 4) + b
  else
    t = t - 2
    return -c / 2 * (pow(t, 4) - 2) + b
  end
end

local function outInQuart(t, b, c, d)
  if t < d / 2 then
    return outQuart(t * 2, b, c / 2, d)
  else
    return inQuart((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inQuint(t, b, c, d)
  t = t / d
  return c * pow(t, 5) + b
end

local function outQuint(t, b, c, d)
  t = t / d - 1
  return c * (pow(t, 5) + 1) + b
end

local function inOutQuint(t, b, c, d)
  t = t / d * 2
  if t < 1 then
    return c / 2 * pow(t, 5) + b
  else
    t = t - 2
    return c / 2 * (pow(t, 5) + 2) + b
  end
end

local function outInQuint(t, b, c, d)
  if t < d / 2 then
    return outQuint(t * 2, b, c / 2, d)
  else
    return inQuint((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inSine(t, b, c, d)
  return -c * cos(t / d * (pi / 2)) + c + b
end

local function outSine(t, b, c, d)
  return c * sin(t / d * (pi / 2)) + b
end

local function inOutSine(t, b, c, d)
  return -c / 2 * (cos(pi * t / d) - 1) + b
end

local function outInSine(t, b, c, d)
  if t < d / 2 then
    return outSine(t * 2, b, c / 2, d)
  else
    return inSine((t * 2) -d, b + c / 2, c / 2, d)
  end
end

local function inExpo(t, b, c, d)
  if t == 0 then
    return b
  else
    return c * pow(2, 10 * (t / d - 1)) + b - c * 0.001
  end
end

local function outExpo(t, b, c, d)
  if t == d then
    return b + c
  else
    return c * 1.001 * (-pow(2, -10 * t / d) + 1) + b
  end
end

local function inOutExpo(t, b, c, d)
  if t == 0 then return b end
  if t == d then return b + c end
  t = t / d * 2
  if t < 1 then
    return c / 2 * pow(2, 10 * (t - 1)) + b - c * 0.0005
  else
    t = t - 1
    return c / 2 * 1.0005 * (-pow(2, -10 * t) + 2) + b
  end
end

local function outInExpo(t, b, c, d)
  if t < d / 2 then
    return outExpo(t * 2, b, c / 2, d)
  else
    return inExpo((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inCirc(t, b, c, d)
  t = t / d
  return(-c * (sqrt(1 - pow(t, 2)) - 1) + b)
end

local function outCirc(t, b, c, d)
  t = t / d - 1
  return(c * sqrt(1 - pow(t, 2)) + b)
end

local function inOutCirc(t, b, c, d)
  t = t / d * 2
  if t < 1 then
    return -c / 2 * (sqrt(1 - t * t) - 1) + b
  else
    t = t - 2
    return c / 2 * (sqrt(1 - t * t) + 1) + b
  end
end

local function outInCirc(t, b, c, d)
  if t < d / 2 then
    return outCirc(t * 2, b, c / 2, d)
  else
    return inCirc((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inElastic(t, b, c, d, a, p)
  if t == 0 then return b end

  t = t / d

  if t == 1 then return b + c end

  if not p then p = d * 0.3 end

  local s

  if not a or a < abs(c) then
    a = c
    s = p / 4
  else
    s = p / (2 * pi) * asin(c/a)
  end

  t = t - 1

  return -(a * pow(2, 10 * t) * sin((t * d - s) * (2 * pi) / p)) + b
end

-- a: amplitud
-- p: period
local function outElastic(t, b, c, d, a, p)
  if t == 0 then return b end

  t = t / d

  if t == 1 then return b + c end

  if not p then p = d * 0.3 end

  local s

  if not a or a < abs(c) then
    a = c
    s = p / 4
  else
    s = p / (2 * pi) * asin(c/a)
  end

  return a * pow(2, -10 * t) * sin((t * d - s) * (2 * pi) / p) + c + b
end

-- p = period
-- a = amplitud
local function inOutElastic(t, b, c, d, a, p)
  if t == 0 then return b end

  t = t / d * 2

  if t == 2 then return b + c end

  if not p then p = d * (0.3 * 1.5) end
  if not a then a = 0 end

  if not a or a < abs(c) then
    a = c
    s = p / 4
  else
    s = p / (2 * pi) * asin(c / a)
  end

  if t < 1 then
    t = t - 1
    return -0.5 * (a * pow(2, 10 * t) * sin((t * d - s) * (2 * pi) / p)) + b
  else
    t = t - 1
    return a * pow(2, -10 * t) * sin((t * d - s) * (2 * pi) / p ) * 0.5 + c + b
  end
end

-- a: amplitud
-- p: period
local function outInElastic(t, b, c, d, a, p)
  if t < d / 2 then
    return outElastic(t * 2, b, c / 2, d, a, p)
  else
    return inElastic((t * 2) - d, b + c / 2, c / 2, d, a, p)
  end
end

local function inBack(t, b, c, d, s)
  if not s then s = 1.70158 end
  t = t / d
  return c * t * t * ((s + 1) * t - s) + b
end

local function outBack(t, b, c, d, s)
  if not s then s = 1.70158 end
  t = t / d - 1
  return c * (t * t * ((s + 1) * t + s) + 1) + b
end

local function inOutBack(t, b, c, d, s)
  if not s then s = 1.70158 end
  s = s * 1.525
  t = t / d * 2
  if t < 1 then
    return c / 2 * (t * t * ((s + 1) * t - s)) + b
  else
    t = t - 2
    return c / 2 * (t * t * ((s + 1) * t + s) + 2) + b
  end
end

local function outInBack(t, b, c, d, s)
  if t < d / 2 then
    return outBack(t * 2, b, c / 2, d, s)
  else
    return inBack((t * 2) - d, b + c / 2, c / 2, d, s)
  end
end

local function outBounce(t, b, c, d)
  t = t / d
  if t < 1 / 2.75 then
    return c * (7.5625 * t * t) + b
  elseif t < 2 / 2.75 then
    t = t - (1.5 / 2.75)
    return c * (7.5625 * t * t + 0.75) + b
  elseif t < 2.5 / 2.75 then
    t = t - (2.25 / 2.75)
    return c * (7.5625 * t * t + 0.9375) + b
  else
    t = t - (2.625 / 2.75)
    return c * (7.5625 * t * t + 0.984375) + b
  end
end

local function inBounce(t, b, c, d)
  return c - outBounce(d - t, 0, c, d) + b
end

local function inOutBounce(t, b, c, d)
  if t < d / 2 then
    return inBounce(t * 2, 0, c, d) * 0.5 + b
  else
    return outBounce(t * 2 - d, 0, c, d) * 0.5 + c * .5 + b
  end
end

local function outInBounce(t, b, c, d)
  if t < d / 2 then
    return outBounce(t * 2, b, c / 2, d)
  else
    return inBounce((t * 2) - d, b + c / 2, c / 2, d)
  end
end

-- Modifications for Daneel : replaced 'return {' by 'Tween.Ease = {'
Tween.Ease = {
  linear = linear,
  inQuad = inQuad,
  outQuad = outQuad,
  inOutQuad = inOutQuad,
  outInQuad = outInQuad,
  inCubic = inCubic ,
  outCubic = outCubic,
  inOutCubic = inOutCubic,
  outInCubic = outInCubic,
  inQuart = inQuart,
  outQuart = outQuart,
  inOutQuart = inOutQuart,
  outInQuart = outInQuart,
  inQuint = inQuint,
  outQuint = outQuint,
  inOutQuint = inOutQuint,
  outInQuint = outInQuint,
  inSine = inSine,
  outSine = outSine,
  inOutSine = inOutSine,
  outInSine = outInSine,
  inExpo = inExpo,
  outExpo = outExpo,
  inOutExpo = inOutExpo,
  outInExpo = outInExpo,
  inCirc = inCirc,
  outCirc = outCirc,
  inOutCirc = inOutCirc,
  outInCirc = outInCirc,
  inElastic = inElastic,
  outElastic = outElastic,
  inOutElastic = inOutElastic,
  outInElastic = outInElastic,
  inBack = inBack,
  outBack = outBack,
  inOutBack = inOutBack,
  outInBack = outInBack,
  inBounce = inBounce,
  outBounce = outBounce,
  inOutBounce = inOutBounce,
  outInBounce = outInBounce,
}

