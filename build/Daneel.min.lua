-- Generated on Tue Dec 02 2014 21:48:42 GMT+0100 (Paris, Madrid)
function math.isinteger(a)local b=false;if type(a)=="number"then b=a==math.floor(a)end;return b end;function math.lerp(c,d,e,f)if f=="smooth"then e=e*2;if e<1 then e=0.5*e*e*e else e=e-2;e=0.5*e*e*e+2 end elseif f=="smooth in"then e=e*e*e elseif f=="smooth out"then e=e-1;e=e*e*e+1 end;return c+(d-c)*e end;function math.warpangle(g)if g>180 then g=g-360 elseif g<-180 then g=g+360 end;return g end;function math.round(h,i)if i~=nil then h=math.floor(h*10^i+0.5)/10^i else h=math.floor(h+0.5)end;return h end;function math.truncate(h,i)if i~=nil then h=math.floor(h*10^i)/10^i else h=math.floor(h)end;return h end;function tonumber2(j)local a=tonumber(j)if a==nil then j=tostring(j)local k="(%d+)"if j:find(".",1,true)then k="(%d+%.%d+)"end;a=j:match(j:gsub(k,"(%1)"))a=tonumber(a)end;return a end;function math.clamp(h,l,m)h=math.max(h,l)h=math.min(h,m)return h end;function string.totable(n)local o={}for p=1,#n do table.insert(o,n:sub(p,p))end;return o end;function string.ucfirst(n)local q=n:gsub("^%l",string.upper)return q end;function string.lcfirst(n)local q=n:gsub("^%u",string.lower)return q end;function string.split(n,r,s)local t={}if s then local u,v=n:find(r)if u~=nil then local k=r;r=n:sub(u,v)if string.startswith(n,r)then n=n:sub(#r+1,#n)end;if not n:endswith(r)then n=n..r end;for w in n:gmatch("(.-)"..k)do table.insert(t,w)end end else if n:find(r,1,true)~=nil then if string.startswith(n,r)then n=n:sub(#r+1,#n)end;if not n:endswith(r)then n=n..r end;local x=""local y=string.totable(n)local p=1;while p<=#y do local z=y[p]if z==r or n:sub(p,p-1+#r)==r then table.insert(t,x)x=""p=p+#r else x=x..z;p=p+1 end end;if#x>0 then table.insert(t,x)end end end;if#t==0 then t={n}end;return t end;function string.startswith(n,x)local q=n:sub(1,#x)==x;return q end;function string.endswith(n,x)local q=n:sub(#n-#x+1,#n)==x;return q end;function string.trimstart(n)local q=n:gsub("^%s+","")return q end;function string.trimend(n)local q=n:gsub("%s+$","")return q end;function string.trim(n)local q=n:gsub("^%s+",""):gsub("%s+$","")return q end;function string.reverse(n)local A=""for p=#n,1,-1 do A=A..n:sub(p,p)end;return A end;function string.fixcase(n,B)if type(B)=="string"then B={B}end;local C=n:lower()for p=1,#B do local D=B[p]if C==D:lower()then return D end end;return n end;function table.copy(o,E)local F={}if table.isarray(o)then for G,h in ipairs(o)do if type(h)=="table"and E then h=table.copy(h,E)end;table.insert(F,h)end else for G,h in pairs(o)do if type(h)=="table"and E then h=table.copy(h,E)end;F[G]=h end end;return F end;function table.containsvalue(o,h,H)if h==nil then return false end;if H and type(h)=='string'then h=h:lower()end;for G,I in pairs(o)do if H and type(I)=="string"then I=I:lower()end;if h==I then return true end end;return false end;function table.getlength(o,J)local K=0;if J~=nil then J=J:lower()end;for G,h in pairs(o)do if J==nil or type(G)==J then K=K+1 end end;return K end;function table.print(o)if o==nil then print("table.print( t ) : Provided table is nil.")return end;print("~~~~~ table.print("..tostring(o)..") ~~~~~ Start ~~~~~")local L=pairs;if table.getlength(o)==0 then print("Table is empty.")elseif table.isarray(o)then L=ipairs end;for G,h in L(o)do if type(G)=="string"then G='"'..G..'"'end;if type(h)=="string"then h='"'..h..'"'end;print(G,h)end;print("~~~~~ table.print("..tostring(o)..") ~~~~~ End ~~~~~")end;local M={}local N=nil;function table.printr(o,O)O=O or""if o==nil then print(O.."table.printr( t ) : Provided table is nil.")return end;if O==""then print("~~~~~ table.printr("..tostring(o)..") ~~~~~ Start ~~~~~")if N==nil then N=o end end;local L=pairs;if table.getlength(o)==0 then print(O,"Table is empty.")elseif table.isarray(o)then L=ipairs end;for G,h in L(o)do if type(G)=="string"then G='"'..G..'"'end;if type(h)=="string"then h='"'..h..'"'end;if type(h)=="table"and getmetatable(h)==nil then local P=M[h]if h==N then print(O..tostring(G),"Table currently being printed: "..tostring(h))elseif P~=nil then print(O..tostring(G),"Already printed table with key "..P..": "..tostring(h))else M[h]=G;print(O..tostring(G),h)table.printr(h,O.."| - - - ")end else print(O..tostring(G),h)end end;if O==""then print("~~~~~ table.printr("..tostring(o)..") ~~~~~ End ~~~~~")M={}N=nil end end;function table.merge(...)return table.mergein({},...)end;function table.mergein(...)local Q={...}local E=false;if#Q>0 and type(Q[#Q])~="table"then E=table.remove(Q)end;local R=table.remove(Q,1)if R==nil then local S="table.mergein(): No table where passed as argument."if#Q>0 then table.print(Q)S="table.mergein(): First argument is nil. Other arguments are shown above."end;error(S)end;for p,o in ipairs(Q)do local T=type(o)if T=="table"then if table.isarray(o)then for G,h in ipairs(o)do table.insert(R,h)end else for G,h in pairs(o)do if R[G]~=nil and E and type(h)=="table"and getmetatable(h)==nil then h=table.merge(R[G],h,true)end;R[G]=h end end end end;return R end;function table.havesamecontent(U,V)if table.getlength(U)~=table.getlength(V)then return false end;for G,h in pairs(U)do if U[G]~=V[G]then return false end end;return true end;function table.combine(W,X)if#W~=#X then print("table.combine( keys, values ) : WARNING : Arguments 'keys' and 'values' have different length :",#W,#X)end;local F={}for p,G in pairs(W)do F[G]=X[p]end;return F end;function table.removevalue(o,h,Y)if h==nil then return 0 end;local Z=0;for G,I in pairs(o)do if I==h then if math.isinteger(G)then table.remove(o,G)else o[G]=nil end;Z=Z+1;if Y~=nil and Z==Y then break end end end;return Z end;function table.getkeys(o)local W={}for G,h in pairs(o)do table.insert(W,G)end;return W end;function table.getvalues(o)local X={}for G,h in pairs(o)do table.insert(X,h)end;return X end;function table.getkey(o,h)local G=nil;for _,a0 in pairs(o)do if h==a0 then G=_ end end;return G end;function table.sortby(o,a1,a2)if a2==nil or not(a2=="asc"or a2=="desc")then a2="asc"end;local a3={}local a4={}for p=1,#o do local a5=o[p][a1]if a4[a5]==nil then table.insert(a3,a5)a4[a5]={}end;table.insert(a4[a5],o[p])end;if a2=="desc"then table.sort(a3,function(c,d)return c>d end)else table.sort(a3)end;o={}for p=1,#a3 do for a6,a7 in pairs(a4[a3[p]])do table.insert(o,a7)end end;return o end;function table.getvalue(o,W)W=string.split(W,".")local h=o;if h==_G then local a8=false;for G,h in pairs(_G)do if G==W[1]then a8=true;break end end;if not a8 then return nil end end;for p,G in ipairs(W)do if h[G]==nil then h=nil;break else h=h[G]end end;return h end;function table.setvalue(o,W,h)if W:find(".",1,true)==nil then o[W]=h else W=string.split(W,".")for p,G in ipairs(W)do if p==#W then o[G]=h else local a9=o[G]if a9==nil then a9={}o[G]=a9 end;o=a9 end end end end;function table.isarray(o,aa)local ab=0;for _,a0 in pairs(o)do ab=ab+1;if type(_)~="number"or not math.isinteger(_)then return false end end;if aa==nil or aa then return ab==#o end;return true end;function table.reverse(o)local F={}for p=1,#o do table.insert(F,1,o[p])end;return F end;function table.shift(o,ac)local G=nil;local h=nil;if table.isarray(o)then if#o>0 then G=1;h=table.remove(o,1)end else for _,a0 in pairs(o)do G=_;h=a0;break end;if G~=nil then o[G]=nil end end;if ac==true then return G,h else return h end end;function table.reindex(o)if not table.isarray(o,false)then print("table.reindex( table ) : Provided table '"..tostring(o).."' is not an array.")end;local ad=1;for p,a0 in pairs(o)do if type(p)=="number"and p>ad then ad=p end end;local F={}for p=1,ad do if o[p]~=nil then table.insert(F,o[p])end end;return F end;function table.insertonce(o,ae,h)if h==nil then h=ae;ae=nil end;for G,I in pairs(o)do if h==I then return false end end;if ae==nil then table.insert(o,h)else table.insert(o,ae,h)end;return true end;Daneel={}Daneel.modules={moduleNames={}}setmetatable(Daneel.modules,{__newindex=function(af,ag,ah)table.insert(Daneel.modules.moduleNames,ag)rawset(Daneel.modules,ag,ah)end})function string.split(n,r,s)local t={}if s then local u,v=n:find(r)if u~=nil then local k=r;r=n:sub(u,v)if string.startswith(n,r)then n=n:sub(#r+1,#n)end;if not n:endswith(r)then n=n..r end;if CS.IsWebPlayer then for w in n:gmatch("([^"..k.."]+)"..k)do table.insert(t,w)end else for w in n:gmatch("(.-)"..k)do table.insert(t,w)end end end else if n:find(r,1,true)~=nil then if string.startswith(n,r)then n=n:sub(#r+1,#n)end;if not n:endswith(r)then n=n..r end;local x=""local y=string.totable(n)local p=1;while p<=#y do local z=y[p]if z==r or n:sub(p,p-1+#r)==r then table.insert(t,x)x=""p=p+#r else x=x..z;p=p+1 end end;if#x>0 then table.insert(t,x)end end end;if#t==0 then t={n}end;return t end;function table.print(o)if o==nil then print("table.print( t ) : Provided table is nil.")return end;local ai=tostring(o)local aj=Daneel.Debug.ToRawString(o)if ai~=aj then ai=ai.." / "..aj end;print("~~~~~ table.print("..ai..") ~~~~~ Start ~~~~~")local L=pairs;if table.getlength(o)==0 then print("Table is empty.")elseif table.isarray(o)then L=ipairs end;for G,h in L(o)do print(G,h)end;print("~~~~~ table.print("..ai..") ~~~~~ End ~~~~~")end;function table.getlength(o,J)local K=0;if J~=nil then J=J:lower()end;for G,h in pairs(o)do if J==nil or type(G)==J or Daneel.Debug.GetType(G):lower()==J then K=K+1 end end;return K end;Daneel.Utilities={}Daneel.Utilities.CaseProof=string.fixcase;function Daneel.Utilities.ReplaceInString(string,ak)for al,am in pairs(ak)do string=string:gsub(":"..al,am)end;return string end;function Daneel.Utilities.AllowDynamicGettersAndSetters(an,ao)function an.__index(ap,G)local aq=G;if type(G)=="string"then aq=string.ucfirst(G)end;if G==aq then if an[G]~=nil then return an[G]end;if ao~=nil then for p,ar in ipairs(ao)do if ar[G]~=nil then return ar[G]end end end else local as="Get"..aq;if an[as]~=nil then return an[as](ap)elseif an[G]~=nil then return an[G]end;if ao~=nil then for p,ar in ipairs(ao)do if ar[as]~=nil then return ar[as](ap)elseif ar[G]~=nil then return ar[G]end end end end;return nil end;function an.__newindex(ap,G,h)local aq=G;if type(G)=="string"then aq=string.ucfirst(G)end;if G~=aq then local as="Set"..aq;if an[as]~=nil then return an[as](ap,h)end end;return rawset(ap,G,h)end end;Daneel.Utilities.ToNumber=tonumber2;local at={}function Daneel.Utilities.ButtonExists(au)if at[au]==nil then at[au]=Daneel.Debug.Try(function()CS.Input.WasButtonJustPressed(au)end)end;return at[au]end;Daneel.Utilities.id=0;function Daneel.Utilities.GetId(av)if av~=nil and type(av)=="table"then local aw=rawget(av,"id")if aw~=nil then return aw end;aw=Daneel.Utilities.GetId()if av.inner~=nil and not CS.IsWebPlayer then aw=tonumber(tostring(av.inner):match("%d+"))end;if aw==nil then aw="[no id]"end;rawset(av,"id",aw)return aw else Daneel.Utilities.id=Daneel.Utilities.id+1;return Daneel.Utilities.id end end;Daneel.Cache={GetId=Daneel.Utilities.GetId}Daneel.Debug={}local n="string"local d="boolean"local ax="number"local o="table"local ay="function"local az="userdata"local aA={"s",n}local aB={"t",o}Daneel.Debug.functionArgumentsInfo={["math.isinteger"]={{"number"}},["math.lerp"]={{"a",ax},{"b",ax},{"factor",ax},{"easing",n,isOptional=true}},["math.warpangle"]={{"angle",ax}},["math.round"]={{"value",ax},{"decimal",ax,isOptional=true}},["math.truncate"]={{"value",ax},{"decimal",ax,isOptional=true}},["tonumber2"]={{"data"}},["math.clamp"]={{"value",ax},{"min",ax},{"max",ax}},["string.totable"]={aA},["string.ucfirst"]={aA},["string.lcfirst"]={aA},["string.trimstart"]={aA},["string.trimend"]={aA},["string.trim"]={aA},["string.endswith"]={aA,{"chunk",n}},["string.startswith"]={aA,{"chunk",n}},["string.split"]={aA,{"delimiter",n},{"delimiterIsPattern",d,defaultValue=false}},["string.reverse"]={aA},["string.fixcase"]={aA,{"set",{n,o}}},["table.print"]={},["table.merge"]={},["table.mergein"]={},["table.getkeys"]={aB},["table.getvalues"]={aB},["table.reverse"]={aB},["table.reindex"]={aB},["table.getvalue"]={aB,{"keys",n}},["table.setvalue"]={aB,{"keys",n}},["table.getkey"]={aB,{"value"}},["table.copy"]={aB,{"recursive",d,defaultValue=false}},["table.containsvalue"]={aB,{"value"},{"ignoreCase",d,defaultValue=false}},["table.isarray"]={aB,{"strict",d,defaultValue=true}},["table.shift"]={aB,{"returnKey",d,defaultValue=false}},["table.getlength"]={aB,{"keyType",n,isOptional=true}},["table.havesamecontent"]={{"table1",o},{"table2",o}},["table.combine"]={aB,{"values","table"},{"returnFalseIfNotSameLength",d,isOptional=true}},["table.removevalue"]={aB,{"value"},{"maxRemoveCount",ax,isOptional=true}},["table.sortby"]={aB,{"property",n},{"orderBy",n,isOptional=true}},["Daneel.Utilities.ReplaceInString"]={{"string",n},{"replacements",o}},["Daneel.Utilities.ButtonExists"]={{"buttonName",n}}}function Daneel.Debug.CheckArgType(aC,aD,aE,aF)if type(aC)=="table"and getmetatable(aC)==GameObject and aC.inner==nil then error(aF.."Provided argument '"..aD.."' is a destroyed game object '"..tostring(aC))end;if not Daneel.Config.debug.enableDebug then return Daneel.Debug.GetType(aC)end;local aG="Daneel.Debug.CheckArgType(argument, argumentName, expectedArgumentTypes[, p_errorHead]) : "local T=type(aD)if T~="string"then error(aG.."Argument 'argumentName' is of type '"..T.."' with value '"..tostring(aD).."' instead of 'string'.")end;T=type(aE)if T~="string"and T~="table"then error(aG.."Argument 'expectedArgumentTypes' is of type '"..T.."' with value '"..tostring(aE).."' instead of 'string' or 'table'.")end;if T=="string"then aE={aE}elseif#aE<=0 then error(aG.."Argument 'expectedArgumentTypes' is an empty table.")end;T=type(aF)if T~="nil"and T~="string"then error(aG.."Argument 'p_errorHead' is of type '"..T.."' with value '"..tostring(aF).."' instead of 'string'.")end;if aF==nil then aF=""end;T=Daneel.Debug.GetType(aC)local aH=type(aC)for p,aI in ipairs(aE)do if T==aI or aH==aI then return aI end end;error(aF.."Argument '"..aD.."' is of type '"..T.."' with value '"..tostring(aC).."' instead of '"..table.concat(aE,"', '").."'.")end;function Daneel.Debug.CheckOptionalArgType(aC,aD,aE,aF,aJ)if aC==nil then return aJ end;if not Daneel.Config.debug.enableDebug then return aC end;local aG="Daneel.Debug.CheckOptionalArgType(argument, argumentName, expectedArgumentTypes[, p_errorHead, defaultValue]) : "local T=type(aD)if T~="string"then error(aG.."Argument 'argumentName' is of type '"..T.."' with value '"..tostring(aD).."' instead of 'string'.")end;T=type(aE)if T~="string"and T~="table"then error(aG.."Argument 'expectedArgumentTypes' is of type '"..T.."' with value '"..tostring(aE).."' instead of 'string' or 'table'.")end;if T=="string"then aE={aE}elseif#aE<=0 then error(aG.."Argument 'expectedArgumentTypes' is an empty table.")end;T=type(aF)if T~="nil"and T~="string"then error(aG.."Argument 'p_errorHead' is of type '"..T.."' with value '"..tostring(aF).."' instead of 'string'.")end;if aF==nil then aG=""end;T=Daneel.Debug.GetType(aC)local aH=type(aC)for p,aI in ipairs(aE)do if T==aI or aH==aI then return aC end end;error(aF.."Optional argument '"..aD.."' is of type '"..T.."' with value '"..tostring(aC).."' instead of '"..table.concat(aE,"', '").."'.")end;function Daneel.Debug.GetType(av,aK)local aG="Daneel.Debug.GetType( object[, luaTypeOnly] ) : "local T=type(aK)if T~="nil"and T~="boolean"then error(aG.."Argument 'luaTypeOnly' is of type '"..T.."' with value '"..tostring(aK).."' instead of 'boolean'.")end;if aK==nil then aK=false end;T=type(av)if not aK and T=="table"then local aL=getmetatable(av)if aL~=nil then if getmetatable(aL)==Script then return"ScriptedBehavior"end;if Daneel.Config.objectsByType~=nil then for type,av in pairs(Daneel.Config.objectsByType)do if aL==av then return type end end end;for type,av in pairs(_G)do if aL==av then return type end end end end;return T end;oerror=error;function Daneel.Debug.SetNewError()function error(aM,aN)if Daneel.Config.debug.enableDebug and aN~=true then Daneel.Debug.StackTrace.Print()end;oerror(aM)end end;function Daneel.Debug.Disable(aO)if aO~=nil then aO=" : "..tostring(aO)end;print("Daneel.Debug.Disable()"..aO)error=oerror;Daneel.Config.debug.enableDebug=false end;function Daneel.Debug.ToRawString(j)if j==nil and Daneel.Config.debug.enableDebug then print("WARNING : Daneel.Debug.ToRawString( data ) : Argument 'data' is nil.")return nil end;local aP=nil;local aL=getmetatable(j)if aL~=nil then if aL.__tostring~=nil then local aQ=aL.__tostring;aL.__tostring=nil;aP=tostring(j)aL.__tostring=aQ end end;if aP==nil then aP=tostring(j)end;return aP end;function Daneel.Debug.GetNameFromValue(h)Daneel.Debug.StackTrace.BeginFunction("Daneel.Debug.GetNameFromValue",h)local aG="Daneel.Debug.GetNameFromValue(value) : "if h==nil then error(aG.." Argument 'value' is nil.")end;local aR=table.getkey(Daneel.Config.objectsByType,h)if aR==nil then aR=table.getkey(_G,h)end;Daneel.Debug.StackTrace.EndFunction()return aR end;function Daneel.Debug.CheckArgValue(aC,aD,aS,aF,aJ)Daneel.Debug.StackTrace.BeginFunction("Daneel.Debug.CheckArgValue",aC,aD,aS,aF)local aG="Daneel.Debug.CheckArgValue(argument, argumentName, expectedArgumentValues[, p_errorHead, defaultValue]) : "Daneel.Debug.CheckArgType(aD,"argumentName","string",aG)if aS==nil then error(aG.."Argument 'expectedArgumentValues' is nil.")end;Daneel.Debug.CheckOptionalArgType(aF,"p_errorHead","string",aG)if type(aS)~="table"then aS={aS}elseif#aS==0 then error(aG.."Argument 'expectedArgumentValues' is an empty table.")end;local aT=false;if type(aC)=="string"then for p,aU in ipairs(aS)do if aC:lower()==aU:lower()then aC=aU;aT=true;break end end else for p,aU in ipairs(aS)do if aC==aU then aT=true;break end end end;if not aT then if aJ~=nil then aC=aJ else for p,h in ipairs(aS)do aS[p]=tostring(h)end;error(aF.."The value '"..tostring(aC).."' of argument '"..aD.."' is not one of '"..table.concat(aS,"', '").."'.")end end;Daneel.Debug.StackTrace.EndFunction()return aC end;local aV=Behavior;Daneel.Debug.tryGameObject=nil;function Daneel.Debug.Try(aW)Daneel.Debug.StackTrace.BeginFunction("Daneel.Debug.Try",aW)local aG="Daneel.Debug.Try( _function ) : "Daneel.Debug.CheckArgType(aW,"_function",{"function","userdata"},aG)local aX=Daneel.Debug.tryGameObject;if aX==nil or aX.inner==nil then aX=CraftStudio.CreateGameObject("Daneel_Debug_Try")Daneel.Debug.tryGameObject=aX end;local aY=false;aX:CreateScriptedBehavior(aV,{debugTry=true,testFunction=aW,successCallback=function()aY=true end})Daneel.Debug.StackTrace.EndFunction()return aY end;function Daneel.Debug.RegisterFunction(aZ,a_)if not Daneel.Config.debug.enableDebug then return end;local b0=true;if not Daneel.Config.debug.enableStackTrace then b0=false elseif a_.includeInStackTrace~=nil then b0=a_.includeInStackTrace end;local aG=aZ.."( "for p,Q in ipairs(a_)do if Q.name==nil then Q.name=Q[1]end;aG=aG..Q.name..", "end;aG=aG:sub(1,#aG-2)aG=aG.." ) : "local b1=table.getvalue(_G,aZ)if b1~=nil then local b2=function(...)local b3={...}if b0 then Daneel.Debug.StackTrace.BeginFunction(aZ,...)end;for p,Q in ipairs(a_)do if Q.type==nil then Q.type=Q[2]if Q.type==nil and Q.defaultValue~=nil then Q.type=type(Q.defaultValue)end end;if Q.type~=nil then if Q.defaultValue~=nil or Q.isOptional==true then b3[p]=Daneel.Debug.CheckOptionalArgType(b3[p],Q.name,Q.type,aG,Q.defaultValue)else Daneel.Debug.CheckArgType(b3[p],Q.name,Q.type,aG)end elseif b3[p]==nil and not Q.isOptional then error(aG.."Argument '"..Q.name.."' is nil.")end;if Q.value~=nil then b3[p]=Daneel.Debug.CheckArgValue(b3[p],Q.name,Q.value,aG,Q.defaultValue)end end;local b4={b1(unpack(b3))}if b0 then Daneel.Debug.StackTrace.EndFunction()end;return unpack(b4)end;table.setvalue(_G,aZ,b2)else print("Daneel.Debug.RegisterFunction() : Function with name '"..aZ.."' was not found in the global table _G.")end end;Daneel.Debug.StackTrace={messages={}}function Daneel.Debug.StackTrace.BeginFunction(b5,...)if not Daneel.Config.debug.enableDebug or not Daneel.Config.debug.enableStackTrace then return end;if#Daneel.Debug.StackTrace.messages>200 then print("WARNING : your StackTrace is more than 200 items long ! Emptying the StackTrace now. Did you forget to write a 'EndFunction()' somewhere ?")Daneel.Debug.StackTrace.messages={}end;local aG="Daneel.Debug.StackTrace.BeginFunction( functionName[, ...] ) : "Daneel.Debug.CheckArgType(b5,"functionName","string",aG)local S=b5 .."( "local Q={...}if#Q>0 then for p,aC in ipairs(Q)do if type(aC)=="string"then S=S..'"'..tostring(aC)..'", 'else S=S..tostring(aC)..", "end end;S=S:sub(1,#S-2)end;S=S.." )"table.insert(Daneel.Debug.StackTrace.messages,S)end;function Daneel.Debug.StackTrace.EndFunction()if not Daneel.Config.debug.enableDebug or not Daneel.Config.debug.enableStackTrace then return end;table.remove(Daneel.Debug.StackTrace.messages)end;function Daneel.Debug.StackTrace.Print()if not Daneel.Config.debug.enableDebug or not Daneel.Config.debug.enableStackTrace then return end;local b6=Daneel.Debug.StackTrace.messages;Daneel.Debug.StackTrace.messages={}print("~~~~~ Daneel.Debug.StackTrace ~~~~~")if#b6<=0 then print("No message in the StackTrace.")else for p,S in ipairs(b6)do if p<10 then p="0"..p end;print("#"..p.." "..S)end end end;Daneel.Event={events={},persistentEvents={}}function Daneel.Event.Listen(b7,b8,b9)local aG="Daneel.Event.Listen( eventName, functionOrObject[, isPersistent] ) : "local ba=type(b8)local bb=b7;if type(b7)=="string"then bb={b7}end;for p,b7 in pairs(bb)do if Daneel.Event.events[b7]==nil then Daneel.Event.events[b7]={}end;if Daneel.Event.persistentEvents[b7]==nil then Daneel.Event.persistentEvents[b7]={}end;if not table.containsvalue(Daneel.Event.events[b7],b8)and not table.containsvalue(Daneel.Event.persistentEvents[b7],b8)then if b9 and ba=="table"then local aL=getmetatable(b8)if aL~=nil and aL==GameObject or table.containsvalue(Daneel.Config.componentObjectsByType,aL)then if Daneel.Config.debug.enableDebug then print(aG.."Game objects and components can't be persistent listeners",b8)end;b9=false end end;local bc=Daneel.Event.events;if b9 then bc=Daneel.Event.persistentEvents end;table.insert(bc[b7],b8)end end end;function Daneel.Event.StopListen(b7,b8)if type(b7)~="string"then b8=b7;b7=nil end;Daneel.Debug.StackTrace.BeginFunction("Daneel.Event.StopListen",b7,b8)local aG="Daneel.Event.StopListen( eventName, functionOrObject ) : "Daneel.Debug.CheckOptionalArgType(b7,"eventName","string",aG)Daneel.Debug.CheckArgType(b8,"functionOrObject",{"table","function"},aG)local bb=b7;if type(b7)=="string"then bb={b7}end;if bb==nil then bb=table.merge(table.getkeys(Daneel.Event.events),table.getkeys(Daneel.Event.persistentEvents))end;for p,b7 in pairs(bb)do local bd=Daneel.Event.events[b7]if bd~=nil then table.removevalue(bd,b8)end;bd=Daneel.Event.persistentEvents[b7]if bd~=nil then table.removevalue(bd,b8)end end;Daneel.Debug.StackTrace.EndFunction()end;function Daneel.Event.Fire(av,b7,...)local Q={...}Daneel.Debug.StackTrace.BeginFunction("Daneel.Event.Fire",av,b7,...)local aG="Daneel.Event.Fire( [object, ]eventName[, ...] ) : "local T=type(av)if T=="string"then if b7~=nil then table.insert(Q,1,b7)end;b7=av;av=nil elseif T~="nil"then Daneel.Debug.CheckArgType(av,"object","table",aG)Daneel.Debug.CheckArgType(b7,"eventName","string",aG)end;local bd={av}if av==nil then if Daneel.Event.events[b7]~=nil then bd=Daneel.Event.events[b7]end;if Daneel.Event.persistentEvents[b7]~=nil then bd=table.merge(bd,Daneel.Event.persistentEvents[b7])end end;local be={}for p=1,#bd do local bf=bd[p]local ba=type(bf)if ba=="function"or ba=="userdata"then if bf(unpack(Q))==false then table.insert(be,bf)end else local aL=getmetatable(bf)local bg=not bf.isDestroyed;if aL==GameObject and bf.inner==nil then bg=false end;if bg then local bh={}if bf.listenersByEvent~=nil and bf.listenersByEvent[b7]~=nil then bh=bf.listenersByEvent[b7]end;local L=rawget(bf,b7)if L~=nil then table.insert(bh,L)end;for a6=1,#bh do bh[a6](...)end;if aL==GameObject then local bi=Q[1]if bi==bf then table.remove(Q,1)end;if#Q==1 and type(Q[1])=="table"then Q=Q[1]end;bf:SendMessage(b7,Q)end end end end;for p=1,#be do Daneel.Event.StopListen(b7,be[p])end;Daneel.Debug.StackTrace.EndFunction()end;function GameObject.FireEvent(aX,b7,...)Daneel.Event.Fire(aX,b7,...)end;function Daneel.Event.AddEventListener(av,b7,bf)if av.listenersByEvent==nil then av.listenersByEvent={}end;if av.listenersByEvent[b7]==nil then av.listenersByEvent[b7]={}end;if not table.containsvalue(av.listenersByEvent[b7],bf)then table.insert(av.listenersByEvent[b7],bf)elseif Daneel.Debug.enableDebug==true then print("Daneel.Event.AddEventListener(): "..tostring(bf).." already listen for event '"..b7 .."' on object: ",av)end end;function GameObject.AddEventListener(aX,b7,bf)Daneel.Event.AddEventListener(aX,b7,bf)end;function Daneel.Event.RemoveEventListener(av,b7,bf)if av.listenersByEvent~=nil and av.listenersByEvent[b7]~=nil then if bf~=nil then table.removevalue(av.listenersByEvent[b7],bf)else av.listenersByEvent[b7]=nil end end end;function GameObject.RemoveEventListener(aX,b7,bf)Daneel.Event.RemoveEventListener(aX,b7,bf)end;local bj={"gameObject","GameObject"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["Daneel.Event.Listen"]={{"eventName",{n,o}},{"functionOrObject",{o,ay,az}},{"isPersistent",defaultValue=false}},["GameObject.FireEvent"]={bj,{"eventName",n}},["Daneel.Event.AddEventListener"]={{"object","table"},{"eventName",n},{"listener",{ay,az}}},["GameObject.AddEventListener"]={bj,{"eventName",n},{"listener",{ay,az}}},["Daneel.Event.RemoveEventListener"]={{"object","table"},{"eventName",n},{"listener",{ay,az},isOptional=true}},["GameObject.RemoveEventListener"]={bj,{"eventName",n},{"listener",{ay,az},isOptional=true}}})Daneel.Time={realTime=0.0,realDeltaTime=0.0,time=0.0,deltaTime=0.0,timeScale=1.0,frameCount=0}function Daneel.DefaultConfig()local bk={debug={enableDebug=false,enableStackTrace=false},objectsByType={GameObject=GameObject,Vector3=Vector3,Quaternion=Quaternion,Plane=Plane,Ray=Ray},componentObjectsByType={ScriptedBehavior=ScriptedBehavior,ModelRenderer=ModelRenderer,MapRenderer=MapRenderer,Camera=Camera,Transform=Transform,Physics=Physics,TextRenderer=TextRenderer,NetworkSync=NetworkSync},componentTypes={},assetObjectsByType={Script=Script,Model=Model,ModelAnimation=ModelAnimation,Map=Map,TileSet=TileSet,Sound=Sound,Scene=Scene,Font=Font},assetTypes={}}return bk end;Daneel.Config=Daneel.DefaultConfig()Daneel.Config.assetTypes=table.getkeys(Daneel.Config.assetObjectsByType)function Daneel.Load()if Daneel.isLoaded then return end;Daneel.isLoading=true;local bl=nil;if Daneel.UserConfig~=nil then table.mergein(Daneel.Config,Daneel.UserConfig(),true)end;for p,aZ in ipairs(Daneel.modules.moduleNames)do local bm=Daneel.modules[aZ]if bm.isConfigLoaded~=true then bm.isConfigLoaded=true;if bm.Config==nil then if bm.DefaultConfig~=nil then bm.Config=bm.DefaultConfig()else bm.Config={}end end;if bm.UserConfig~=nil then table.mergein(bm.Config,bm.UserConfig(),true)end;if bm.Config.objectsByType~=nil then table.mergein(Daneel.Config.objectsByType,bm.Config.objectsByType)end;if bm.Config.componentObjectsByType~=nil then table.mergein(Daneel.Config.componentObjectsByType,bm.Config.componentObjectsByType)table.mergein(Daneel.Config.objectsByType,bm.Config.componentObjectsByType)end end end;table.mergein(Daneel.Config.objectsByType,Daneel.Config.componentObjectsByType,Daneel.Config.assetObjectsByType)for bn,bo in pairs(Daneel.Config.componentObjectsByType)do Daneel.Utilities.AllowDynamicGettersAndSetters(bo,{Component})if bn~="ScriptedBehavior"then bo["__tostring"]=function(bp)return bn..": "..bp:GetId()end end end;table.mergein(Daneel.Config.componentTypes,table.getkeys(Daneel.Config.componentObjectsByType))if Daneel.Config.debug.enableDebug then if Daneel.Config.debug.enableStackTrace then Daneel.Debug.SetNewError()end;for as,j in pairs(Daneel.Debug.functionArgumentsInfo)do Daneel.Debug.RegisterFunction(as,j)end end;for bq,br in pairs(Daneel.Config.assetObjectsByType)do Daneel.Utilities.AllowDynamicGettersAndSetters(br,{Asset})br["__tostring"]=function(bs)return bq..": "..Daneel.Utilities.GetId(bs)..": '"..Map.GetPathInPackage(bs).."'"end end;CS.IsWebPlayer=type(Camera.ProjectionMode.Orthographic)=="number"Daneel.Debug.StackTrace.BeginFunction("Daneel.Load")for p,aZ in ipairs(Daneel.modules.moduleNames)do local bm=Daneel.modules[aZ]if bm.isLoaded~=true then bm.isLoaded=true;if type(bm.Load)=="function"then bm.Load()end end end;Daneel.isLoaded=true;Daneel.isLoading=false;if Daneel.Config.debug.enableDebug then print("~~~~~ Daneel loaded ~~~~~")end;Daneel.moduleUpdateFunctions={}for p,aZ in ipairs(Daneel.modules.moduleNames)do local bm=Daneel.modules[aZ]if bm.doNotCallUpdate~=true then if type(bm.Update)=="function"and not table.containsvalue(Daneel.moduleUpdateFunctions,bm.Update)then table.insert(Daneel.moduleUpdateFunctions,bm.Update)end end end;Daneel.Debug.StackTrace.EndFunction()end;function Behavior.Awake(self)if self.debugTry==true then CraftStudio.Destroy(self)self.testFunction()self.successCallback()return end;if table.getvalue(_G,"LOAD_DANEEL")~=nil and LOAD_DANEEL==false then return end;if Daneel.isAwake then if Daneel.Config.debug.enableDebug then print("Daneel:Awake() : You tried to load Daneel twice ! The 'Daneel' scripted behavior is on two game objects inside the same scene. This time, it was on "..tostring(self.gameObject))end;CS.Destroy(self)return end;Daneel.isAwake=true;Daneel.Event.Listen("OnSceneLoad",function()Daneel.isAwake=false end)Daneel.Load()Daneel.Debug.StackTrace.messages={}Daneel.Debug.StackTrace.BeginFunction("Daneel.Awake")for p,aZ in ipairs(Daneel.modules.moduleNames)do local bm=Daneel.modules[aZ]if type(bm.Awake)=="function"then bm.Awake()end end;if Daneel.Config.debug.enableDebug then print("~~~~~ Daneel awake ~~~~~")end;Daneel.Event.Fire("OnAwake")Daneel.Debug.StackTrace.EndFunction()end;function Behavior.Start(self)if self.debugTry then return end;Daneel.Debug.StackTrace.BeginFunction("Daneel.Start")for p,aZ in ipairs(Daneel.modules.moduleNames)do local bm=Daneel.modules[aZ]if type(bm.Start)=="function"then bm.Start()end end;if Daneel.Config.debug.enableDebug then print("~~~~~ Daneel started ~~~~~")end;Daneel.Event.Fire("OnStart")Daneel.Debug.StackTrace.EndFunction()end;function Behavior.Update(self)if self.debugTry then return end;local bt=os.clock()Daneel.Time.realDeltaTime=bt-Daneel.Time.realTime;Daneel.Time.realTime=bt;Daneel.Time.deltaTime=Daneel.Time.realDeltaTime*Daneel.Time.timeScale;Daneel.Time.time=Daneel.Time.time+Daneel.Time.deltaTime;Daneel.Time.frameCount=Daneel.Time.frameCount+1;for p=1,#Daneel.moduleUpdateFunctions do Daneel.moduleUpdateFunctions[p]()end end;MouseInput={buttonExists={LeftMouse=false,RightMouse=false,WheelUp=false,WheelDown=false},frameCount=0,lastLeftClickFrame=0,components={}}Daneel.modules.MouseInput=MouseInput;function MouseInput.DefaultConfig()return{doubleClickDelay=20,componentObjectsByType={MouseInput=MouseInput}}end;MouseInput.Config=MouseInput.DefaultConfig()function MouseInput.Load()for au,af in pairs(MouseInput.buttonExists)do MouseInput.buttonExists[au]=Daneel.Utilities.ButtonExists(au)end;MouseInput.lastLeftClickFrame=-MouseInput.Config.doubleClickDelay end;function MouseInput.Update()MouseInput.frameCount=MouseInput.frameCount+1;local bu=CS.Input.GetMouseDelta()local bv=false;if bu.x~=0 or bu.y~=0 then bv=true end;local bw=false;local bx=false;local by=false;if MouseInput.buttonExists.LeftMouse then bw=CS.Input.WasButtonJustPressed("LeftMouse")bx=CS.Input.IsButtonDown("LeftMouse")by=CS.Input.WasButtonJustReleased("LeftMouse")end;local bz=false;if MouseInput.buttonExists.RightMouse then bz=CS.Input.WasButtonJustPressed("RightMouse")end;local bA=false;if MouseInput.buttonExists.WheelUp then bA=CS.Input.WasButtonJustPressed("WheelUp")end;local bB=false;if MouseInput.buttonExists.WheelDown then bB=CS.Input.WasButtonJustPressed("WheelDown")end;if bv==true or bw==true or bx==true or by==true or bz==true or bA==true or bB==true then local bC=false;if bw then bC=MouseInput.frameCount<=MouseInput.lastLeftClickFrame+MouseInput.Config.doubleClickDelay;MouseInput.lastLeftClickFrame=MouseInput.frameCount end;local bD=false;local reindexGameObjects=false;for p=1,#MouseInput.components do local bp=MouseInput.components[p]local bE=bp.gameObject;if bE.inner~=nil and not bE.isDestroyed and bE.camera~=nil then local bF=bE.camera:CreateRay(CS.Input.GetMousePosition())for a6=1,#bp._tags do local bG=bp._tags[a6]local bH=GameObject.Tags[bG]if bH~=nil then for _=1,#bH do local aX=bH[_]if aX.inner~=nil and not aX.isDestroyed then local bI=bF:IntersectsGameObject(aX)if bI~=nil then if not aX.isMouseOver then aX.isMouseOver=true;Daneel.Event.Fire(aX,"OnMouseEnter",aX)end elseif aX.isMouseOver==true then aX.isMouseOver=false;Daneel.Event.Fire(aX,"OnMouseExit",aX)end;if aX.isMouseOver==true then Daneel.Event.Fire(aX,"OnMouseOver",aX,bI)if bw==true then Daneel.Event.Fire(aX,"OnClick",aX)if bC==true then Daneel.Event.Fire(aX,"OnDoubleClick",aX)end end;if bx==true and bv==true then Daneel.Event.Fire(aX,"OnDrag",aX)end;if by==true then Daneel.Event.Fire(aX,"OnLeftClickReleased",aX)end;if bz==true then Daneel.Event.Fire(aX,"OnRightClick",aX)end;if bA==true then Daneel.Event.Fire(aX,"OnWheelUp",aX)end;if bB==true then Daneel.Event.Fire(aX,"OnWheelDown",aX)end end else bH[p]=nil;reindexGameObjects=true end end;if reindexGameObjects==true then GameObject.Tags[bG]=table.reindex(bH)reindexGameObjects=false end end end else MouseInput.components[p]=nil;bD=true end end;if bD==true then table.reindex(MouseInput.components)end end end;function MouseInput.New(aX,bJ)if aX.camera==nil then error("MouseInput.New(gameObject, params) : "..tostring(aX).." has no Camera component.")return end;local bp={_tags={}}bp.gameObject=aX;aX.mouseInput=bp;setmetatable(bp,MouseInput)if bJ~=nil then bp:Set(bJ)end;table.insert(MouseInput.components,bp)return bp end;function MouseInput.SetTags(bK,bL)if type(bL)=="string"then bL={bL}end;bK._tags=bL end;function MouseInput.GetTags(bK)return bK._tags end;local bM={"mouseInput","MouseInput"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["MouseInput.New"]={bj,{"params","table",isOptional=true}},["MouseInput.SetTags"]={bM,{"tags",{n,o}}},["MouseInput.GetTags"]={bM}})Trigger={frameCount=0,triggerComponents={}}Daneel.modules.Trigger=Trigger;function Trigger.DefaultConfig()return{componentObjectsByType={Trigger=Trigger}}end;Trigger.Config=Trigger.DefaultConfig()function Trigger.Update()Trigger.frameCount=Trigger.frameCount+1;local bD=false;for p=1,#Trigger.triggerComponents do local bN=Trigger.triggerComponents[p]local bO=bN.gameObject;if bO.inner~=nil and not bO.isDestroyed then if bN._updateInterval>1 and Trigger.frameCount%bN._updateInterval==0 then local bP=bO.transform:GetPosition()for a6=1,#bN._tags do local bG=bN._tags[a6]local bH=GameObject.Tags[bG]if bH~=nil then for _=1,#bH do local aX=bH[_]if aX.inner~=nil and not aX.isDestroyed and aX~=bO then local bQ=bN:IsGameObjectInRange(aX,bP)local bR=table.containsvalue(bN.gameObjectsInRangeLastUpdate,aX)if bQ then if bR then Daneel.Event.Fire(aX,"OnTriggerStay",aX,bO)Daneel.Event.Fire(bO,"OnTriggerStay",bO,aX)else table.insert(bN.gameObjectsInRangeLastUpdate,aX)Daneel.Event.Fire(aX,"OnTriggerEnter",aX,bO)Daneel.Event.Fire(bO,"OnTriggerEnter",bO,aX)end elseif bR then table.removevalue(bN.gameObjectsInRangeLastUpdate,aX)Daneel.Event.Fire(aX,"OnTriggerExit",aX,bO)Daneel.Event.Fire(bO,"OnTriggerExit",bO,aX)end else bH[p]=nil;reindexGameObjects=true end end;if reindexGameObjects==true then GameObject.Tags[bG]=table.reindex(bH)reindexGameObjects=false end end end end else Trigger.triggerComponents[p]=nil;bD=true end end;if bD==true then table.reindex(Trigger.triggerComponents)end end;function Trigger.New(aX,bJ)local bN={_range=1,_updateInterval=5,_tags={},gameObjectsInRangeLastUpdate={}}bN.gameObject=aX;aX.trigger=bN;setmetatable(bN,Trigger)if bJ~=nil then bN:Set(bJ)end;return bN end;function Trigger.SetTags(bN,bL)if type(bL)=="string"then bL={bL}end;bN._tags=bL end;function Trigger.GetTags(bN)return bN._tags end;function Trigger.SetRange(bN,bS)bN._range=math.clamp(bS,0,9999)end;function Trigger.GetRange(bN)return bN._range end;function Trigger.SetUpdateInterval(bN,bT)bN._updateInterval=math.clamp(bT,0,9999)end;function Trigger.GetUpdateInterval(bN)return bN._updateInterval end;function Trigger.GetGameObjectsInRange(bN)local bP=self.gameObject.transform:GetPosition()local bU={}for p=1,#bN._tags do local bH=GameObject.GetWithTag(bN._tags[p])for a6=1,#bH do local aX=gameObjets[a6]if aX~=bN.gameObject and bN:IsGameObjectInRange(aX,bP)then table.insertonce(bU,aX)end end end;return bU end;function Trigger.IsGameObjectInRange(bN,aX,bP)local aG="Behavior:IsGameObjectInRange( gameObject[, triggerPosition] )"local bO=bN.gameObject;if bP==nil then bP=bO.transform:GetPosition()end;local bV=false;local bW=aX.transform:GetPosition()-bP;local bX=bW:SqrLength()if bN._range>0 and bX<=bN._range^2 then bV=true elseif bN._range<=0 then if bN.ray==nil then bN.ray=Ray.New(Vector3.New(0),Vector3.New(0))end;local bF=bN.ray;bF.position=bP;bF.direction=bW;local bY=nil;if bO.modelRenderer~=nil then bY=bF:IntersectsModelRenderer(bO.modelRenderer)elseif bO.mapRenderer~=nil then bY=bF:IntersectsMapRenderer(bO.mapRenderer)end;if aX.modelRenderer~=nil then bX=bF:IntersectsModelRenderer(aX.modelRenderer)^2 elseif aX.mapRenderer~=nil then bX=bF:IntersectsMapRenderer(aX.mapRenderer)^2 end;if bY~=nil and bX<=bY^2 then bV=true end end;return bV end;local bZ={"trigger","Trigger"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["Trigger.New"]={bj,{"params","table",isOptional=true}},["Trigger.SetTags"]={bZ,{"tags",{n,o}}},["Trigger.GetTags"]={bZ},["Trigger.SetRange"]={bZ,{"range",ax}},["Trigger.GetRange"]={bZ},["Trigger.SetUpdateInterval"]={bZ,{"updateInterval",ax}},["Trigger.GetUpdateInterval"]={bZ},["Trigger.GetGameObjectsInRange"]={bZ},["Trigger.IsGameObjectInRange"]={bZ,bj,{"triggerPosition","Vector3",isOptional=true}}})Lang={dictionariesByLanguage={english={}},cache={},gameObjectsToUpdate={},doNotCallUpdate=true}Daneel.modules.Lang=Lang;function Lang.DefaultConfig()return{default=nil,current=nil,searchInDefault=true,keyNotFound="langkeynotfound"}end;Lang.Config=Lang.DefaultConfig()function Lang.Load()local b_=nil;for c0,c1 in pairs(Lang.dictionariesByLanguage)do local c2=c0:lower()if c2~=c0 then Lang.dictionariesByLanguage[c2]=c1;Lang.dictionariesByLanguage[c0]=nil end;if b_==nil then b_=c2 end end;if b_==nil then if Daneel.Config.debug.enableDebug==true then error("Lang.Load(): No dictionary found in Lang.dictionariesByLanguage !")end;return end;if Lang.Config.default==nil then Lang.Config.default=b_ end;Lang.Config.default=Lang.Config.default:lower()if Lang.Config.current==nil then Lang.Config.current=Lang.Config.default end;Lang.Config.current=Lang.Config.current:lower()end;function Lang.Start()if Lang.Config.current~=nil then Lang.Update(Lang.Config.current)end end;function Lang.Get(G,ak)if ak==nil and Lang.cache[G]~=nil then return Lang.cache[G]end;local c3=Lang.Config.current;local b_=Lang.Config.default;local c4=Lang.Config.searchInDefault;local c5=true;local W=string.split(G,".")local c6=c3;if Lang.dictionariesByLanguage[W[1]]~=nil then c6=table.remove(W,1)end;local c7=table.concat(W,".")local c8=c6 .."."..c7;if ak==nil and Lang.cache[c8]~=nil then return Lang.cache[c8]end;local c1=Lang.dictionariesByLanguage[c6]local aG="Lang.Get(key[, replacements]): "if c1==nil then error(aG.."Language '"..c6 .."' does not exists",G,c8)end;for p=1,#W do local c9=W[p]if c1[c9]==nil then if c4==true and c6~=b_ then c5=false;c1=Lang.Get(b_.."."..c7,ak)else c1=Lang.Config.keyNotFound or"keynotfound"end;break end;c1=c1[c9]end;local ca=c1;if type(ca)~="string"then error(aG.."Localization key '"..G.."' does not lead to a string but to : '"..tostring(ca).."'.",G,c8)end;if ak~=nil then ca=Daneel.Utilities.ReplaceInString(ca,ak)elseif c5==true and ca~=Lang.Config.keyNotFound then Lang.cache[G]=ca;Lang.cache[c8]=ca end;return ca end;function Lang.RegisterForUpdate(aX,G,ak)Lang.gameObjectsToUpdate[aX]={key=G,replacements=ak}end;function Lang.Update(c6)c6=Daneel.Debug.CheckArgValue(c6,"language",table.getkeys(Lang.dictionariesByLanguage),"Lang.Update(language): ")Lang.cache={}Lang.Config.current=c6;for aX,j in pairs(Lang.gameObjectsToUpdate)do if aX.inner==nil or aX.isDestroyed==true then Lang.gameObjectsToUpdate[aX]=nil else local aP=Lang.Get(j.key,j.replacements)if aX.textArea~=nil then aX.textArea:SetText(aP)elseif aX.textRenderer~=nil then aX.textRenderer:SetText(aP)elseif Daneel.Config.debug.enableDebug then print("Lang.Update(language): WARNING : "..tostring(aX).." has no TextRenderer or GUI.TextArea component.")end end end;Daneel.Event.Fire("OnLangUpdate")end;table.mergein(Daneel.Debug.functionArgumentsInfo,{["Lang.Get"]={{"key","string"},{"replacements","table",isOptional=true}},["Lang.RegisterForUpdate"]={bj,{"key","string"},{"replacements","table",isOptional=true}},["Lang.Update"]={{"language","string"}}})local n="string"local d="boolean"local ax="number"local o="table"local bi="GameObject"local cb="Vector2"local cc="Vector3"local cd={"params",o}setmetatable(Vector3,{__call=function(an,...)return an:New(...)end})setmetatable(Quaternion,{__call=function(an,...)return an:New(...)end})setmetatable(Plane,{__call=function(an,...)return an:New(...)end})Plane.__tostring=function(ce)return"Plane: { normal="..tostring(ce.normal)..", distance="..tostring(ce.distance).." }"end;Asset={}Asset.__index=Asset;setmetatable(Asset,{__call=function(an,...)return an.Get(...)end})local cf=table.merge({"string"},Daneel.Config.assetTypes)function Asset.Get(cg,bq,ch)local aG="Asset.Get( assetPath[, assetType, errorIfAssetNotFound] ) : "if cg==nil then if Daneel.Config.debug.enableDebug then error(aG.."Argument 'assetPath' is nil.")end;return nil end;local T=Daneel.Debug.CheckArgType(cg,"assetPath",cf,aG)if bq~=nil then Daneel.Debug.CheckArgType(bq,"assetType","string",aG)bq=Daneel.Debug.CheckArgValue(bq,"assetType",Daneel.Config.assetTypes,aG)end;if T~="string"then if bq~=nil and T~=bq then error(aG.."Provided asset '"..cg.."' has a different type '"..T.."' than the provided 'assetType' argument '"..bq.."'.")end;return cg end;Daneel.Debug.CheckOptionalArgType(ch,"errorIfAssetNotFound","boolean",aG)local bs=nil;if bq==nil then bs=CraftStudio.FindAsset(cg)else bs=CraftStudio.FindAsset(cg,bq)end;if bs==nil and ch then if bq==nil then bq="asset"end;error(aG.."Argument 'assetPath' : "..bq.." with name '"..cg.."' was not found.")end;return bs end;function Asset.GetPath(bs)return Map.GetPathInPackage(bs)end;function Asset.GetName(bs)local aZ=rawget(bs,"name")if aZ==nil then aZ=Asset.GetPath(bs):gsub("^(.*/)","")rawset(bs,"name",aZ)end;return aZ end;function Asset.GetId(bs)return Daneel.Utilities.GetId(bs)end;Component={}Component.__index=Component;function Component.Set(bp,bJ)for G,h in pairs(bJ)do bp[G]=h end end;function Component.Destroy(bp)table.removevalue(bp.gameObject,bp)CraftStudio.Destroy(bp)end;function Component.GetId(bp)return Daneel.Utilities.GetId(bp)end;table.mergein(Daneel.Debug.functionArgumentsInfo,{["Asset.Get"]={{"assetPath"},{"assetType",isOptional=true},{"errorIfAssetNotFound",defaultValue=false}},["Asset.GetPath"]={{"asset",Daneel.Config.assetTypes}},["Asset.GetName"]={{"asset",Daneel.Config.assetTypes}},["Component.Set"]={{"component",Daneel.Config.componentTypes},{"params",defaultValue={}}},["Component.Destroy"]={{"component",Daneel.Config.componentTypes}}})Map.oGetPathInPackage=Map.GetPathInPackage;function Map.GetPathInPackage(bs)local ci=rawget(bs,"path")if ci==nil then ci=Map.oGetPathInPackage(bs)end;return ci end;Map.oLoadFromPackage=Map.LoadFromPackage;function Map.LoadFromPackage(ci,cj)Map.oLoadFromPackage(ci,function(ck)if ck~=nil then rawset(ck,"path",ci)end;cj(ck)end)end;Map.oGetBlockIDAt=Map.GetBlockIDAt;function Map.GetBlockIDAt(ck,cl,cm,cn)if type(cl)=="table"then cn=cl.z;cm=cl.y;cl=cl.x end;return Map.oGetBlockIDAt(ck,cl,cm,cn)end;Map.oGetBlockOrientationAt=Map.GetBlockOrientationAt;function Map.GetBlockOrientationAt(ck,cl,cm,cn)if type(cl)=="table"then cn=cl.z;cm=cl.y;cl=cl.x end;return Map.GetBlockOrientationAt(ck,cl,cm,cn)end;Map.oSetBlockAt=Map.SetBlockAt;function Map.SetBlockAt(ck,cl,cm,cn,aw,co)if type(cl)=="table"then aw=cm;co=cn;cn=cl.z;cm=cl.y;cl=cl.x end;if co==nil then Map.oSetBlockAt(ck,cl,cm,cn,aw)else Map.oSetBlockAt(ck,cl,cm,cn,aw,co)end end;Transform.oSetLocalScale=Transform.SetLocalScale;function Transform.SetLocalScale(cp,cq)if type(cq)=="number"then cq=Vector3:New(cq)end;Transform.oSetLocalScale(cp,cq)end;function Transform.SetScale(cp,cq)if type(cq)=="number"then cq=Vector3:New(cq)end;local cr=cp.gameObject:GetParent()if cr~=nil then cq=cq/cr.transform:GetScale()end;cp:SetLocalScale(cq)end;function Transform.GetScale(cp)local cq=cp:GetLocalScale()local cr=cp.gameObject:GetParent()if cr~=nil then cq=cq*cr.transform:GetScale()end;return cq end;function Transform.WorldToLocal(cp,cs)local bi=cp.worldToLocalGO;if bi==nil then bi=CS.CreateGameObject("WorldToLocal",cp.gameObject)cp.worldToLocalGO=bi else bi:SetParent(cp.gameObject)end;bi.transform:SetPosition(cs)return bi.transform:GetLocalPosition()end;function Transform.LocalToWorld(cp,cs)local bi=cp.worldToLocalGO;if bi==nil then bi=CS.CreateGameObject("WorldToLocal",cp.gameObject)cp.worldToLocalGO=bi else bi:SetParent(cp.gameObject)end;bi.transform:SetLocalPosition(cs)return bi.transform:GetPosition()end;ModelRenderer.oSetModel=ModelRenderer.SetModel;function ModelRenderer.SetModel(ct,cu)local cv=nil;if cu~=nil then cv=Asset.Get(cu,"Model",true)end;ModelRenderer.oSetModel(ct,cv)end;ModelRenderer.oSetAnimation=ModelRenderer.SetAnimation;function ModelRenderer.SetAnimation(ct,cw)local cx=nil;if cw~=nil then cx=Asset.Get(cw,"ModelAnimation",true)end;ModelRenderer.oSetAnimation(ct,cx)end;function ModelRenderer.Set(ct,bJ)if bJ.model~=nil then ct:SetModel(bJ.model)bJ.model=nil end;if bJ.animationTime~=nil and bJ.animation~=nil then ct:SetAnimation(bJ.animation)bJ.animation=nil end;Component.Set(ct,bJ)end;MapRenderer.oSetMap=MapRenderer.SetMap;function MapRenderer.SetMap(cy,cz,cA)local ck=nil;if cz~=nil then ck=Asset.Get(cz,"Map",true)end;if cA~=nil then MapRenderer.oSetMap(cy,ck,cA)else MapRenderer.oSetMap(cy,ck)end end;MapRenderer.oSetTileSet=MapRenderer.SetTileSet;function MapRenderer.SetTileSet(cy,cB)local cC=nil;if cB~=nil then cC=Asset.Get(cB,"TileSet",true)end;MapRenderer.oSetTileSet(cy,cC)end;function MapRenderer.Set(cy,bJ)if bJ.map~=nil then cy:SetMap(bJ.map)bJ.map=nil end;Component.Set(cy,bJ)end;function MapRenderer.LoadNewMap(cy,cj)local ck=cy:GetMap()if ck~=nil then Map.LoadFromPackage(Map.GetPathInPackage(ck),function(ck)cy:SetMap(ck)if cj~=nil then cj(ck)end end)elseif Daneel.Config.debug.enableDebug==true then error("MapRenderer.LoadNewMap(): No map is set on the provided map renderer. Can't load new map.")end end;TextRenderer.oSetFont=TextRenderer.SetFont;function TextRenderer.SetFont(cD,cE)local cF=nil;if cE~=nil then cF=Asset.Get(cE,"Font",true)end;TextRenderer.oSetFont(cD,cF)end;TextRenderer.oSetAlignment=TextRenderer.SetAlignment;function TextRenderer.SetAlignment(cD,cG)if type(cG)=="string"then local cH="Center"if Daneel.Config.textRenderer~=nil and Daneel.Config.textRenderer.alignment~=nil then cH=Daneel.Config.textRenderer.alignment end;local aG="TextRenderer.SetAlignment( textRenderer, alignment ) : "cG=Daneel.Debug.CheckArgValue(cG,"alignment",{"Left","Center","Right"},aG,cH)cG=TextRenderer.Alignment[cG]end;TextRenderer.oSetAlignment(cD,cG)end;function TextRenderer.SetTextWidth(cD,cI)local cJ=cD:GetTextWidth()/cD.gameObject.transform:GetScale()cD.gameObject.transform:SetScale(cI/cJ)end;Camera.oSetProjectionMode=Camera.SetProjectionMode;function Camera.SetProjectionMode(cK,cL)if type(cL)=="string"then local cH="Perspective"if Daneel.Config.camera~=nil and Daneel.Config.camera.projectionMode~=nil then cH=Daneel.Config.camera.projectionMode end;cL=Daneel.Debug.CheckArgValue(cL,"projectionMode",{"Perspective","Orthographic"},"Camera.SetProjectionMode( camera[, projectionMode] ) : ",cH)cL=Camera.ProjectionMode[cL]end;Camera.oSetProjectionMode(cK,cL)end;function Camera.Set(cK,bJ)if bJ.projectionMode~=nil then cK:SetProjectionMode(bJ.projectionMode)bJ.projectionMode=nil end;Component.Set(cK,bJ)end;function Camera.GetPixelsToUnits(cK)local cM=CS.Screen.GetSize()local cN=cM.y;if cM.x<cM.y then cN=cM.x end;if cK:GetProjectionMode()==Camera.ProjectionMode.Orthographic then return cK:GetOrthographicScale()/cN else return math.tan(math.rad(cK:GetFOV()/2))/cN*2 end end;function Camera.GetUnitsToPixels(cK)local cO=cK:GetPixelsToUnits()if cO~=nil and cO~=0 then return 1/cO end end;function Camera.GetBaseDistance(cK)if cK:GetProjectionMode()==Camera.ProjectionMode.Perspective then return 0.5/math.tan(math.rad(cK:GetFOV()/2))end end;function Camera.IsPositionInFrustum(cK,cs)local cP=cK.gameObject.transform:WorldToLocal(cs)if cP.z<0 then local cM=CS.Screen.GetSize()local bS=Vector2.New(0)if cK:GetProjectionMode()==Camera.ProjectionMode.Orthographic then bS=cM*cK:GetPixelsToUnits()/2 else local cN=cM.y;if cM.x<cM.y then cN=cM.x end;bS=-cP.z/cK:GetBaseDistance()*cM/cN;bS=bS/2 end;if cP.x>=-bS.x and cP.x<=bS.x and cP.y>=-bS.y and cP.y<=bS.y then return true end end;return false end;function Camera.WorldToScreenPoint(cK,cs)local cP=cK.gameObject.transform:WorldToLocal(cs)local cQ=cK:GetUnitsToPixels()local cM=CS.Screen.GetSize()if cK:GetProjectionMode()==Camera.ProjectionMode.Orthographic then cP.x=cP.x*cQ+cM.x/2;cP.y=-cP.y*cQ+cM.y/2 else local cR=math.abs(cP.z)cP.x=cP.x/cR*cQ+cM.x/2;cP.y=-cP.y/cR*cQ+cM.y/2 end;return cP end;Camera.oGetFOV=Camera.GetFOV;function Camera.GetFOV(cK)return math.round(Camera.oGetFOV(cK),2)end;Camera.GetFov=Camera.GetFOV;Camera.SetFov=Camera.SetFOV;Camera.oProject=Camera.Project;function Camera.Project(cK,cs)return setmetatable(Camera.oProject(cK,cs),Vector2)end;table.mergein(Daneel.Debug.functionArgumentsInfo,{["Transform.SetLocalScale"]={{"transform","Transform"},{"number",{ax,cc}}},["Transform.SetScale"]={{"transform","Transform"},{"number",{ax,cc}}},["Transform.GetScale"]={{"transform","Transform"}},["Transform.WorldToLocal"]={{"transform","Transform"},{"position",cc}},["Transform.LocalToWorld"]={{"transform","Transform"},{"position",cc}},["ModelRenderer.SetModel"]={{"modelRenderer","ModelRenderer"},{"modelNameOrAsset",{n,"Model"},isOptional=true}},["ModelRenderer.SetAnimation"]={{"modelRenderer","ModelRenderer"},{"animationNameOrAsset",{n,"ModelAnimation"},isOptional=true}},["ModelRenderer.Set"]={{"modelRenderer","ModelRenderer"},cd},["MapRenderer.SetMap"]={{"mapRenderer","MapRenderer"},{"mapNameOrAsset",{n,"Map"},isOptional=true},{"replaceTileSet",defaultValue=true}},["MapRenderer.SetTileSet"]={{"mapRenderer","MapRenderer"},{"tileSetNameOrAsset",{n,"TileSet"},isOptional=true}},["MapRenderer.Set"]={{"mapRenderer","MapRenderer"},cd},["MapRenderer.LoadNewMap"]={{"mapRenderer","MapRenderer"},{"callback","function",isOptional=true}},["TextRenderer.SetFont"]={{"textRenderer","TextRenderer"},{"fontNameOrAsset",{n,"Font"},isOptional=true}},["TextRenderer.SetAlignment"]={{"textRenderer","TextRenderer"},{"alignment",{n,"userdata",ax}}},["TextRenderer.SetTextWidth"]={{"textRenderer","TextRenderer"},{"width",ax}},["Camera.SetProjectionMode"]={{"camera","Camera"},{"projectionMode",{n,"userdata",ax}}},["Camera.Set"]={{"camera","Camera"},cd},["Camera.GetPixelsToUnits"]={{"camera","Camera"}},["Camera.GetUnitsToPixels"]={{"camera","Camera"}},["Camera.GetBaseDistance"]={{"camera","Camera"}},["Camera.IsPositionInFrustum"]={{"camera","Camera"},{"position",cc}},["Camera.WorldToScreenPoint"]={{"camera","Camera"},{"position",cc}},["Camera.GetFOV"]={{"camera","Camera"}}})Vector2={}Vector2.__index=Vector2;setmetatable(Vector2,{__call=function(an,...)return an.New(...)end})Daneel.Config.objectsByType.Vector2=Vector2;function Vector2.__tostring(cS)return"Vector2: { x="..cS.x..", y="..cS.y.." }"end;function Vector2.New(cl,cm)local cT=setmetatable({x=cl,y=cm},Vector2)if type(cl)=="table"then cT.x=cl.x;cT.y=cl.y elseif cm==nil then cT.y=cl end;return cT end;function Vector2.GetLength(cT)return math.sqrt(cT.x^2+cT.y^2)end;function Vector2.GetSqrLength(cT)return cT.x^2+cT.y^2 end;function Vector2.Normalized(cT)return Vector2.New(cT.x,cT.y):Normalize()end;function Vector2.Normalize(cT)local K=cT:GetLength()if K~=0 then cT=cT/K end end;function Vector2.__add(c,d)return Vector2.New(c.x+d.x,c.y+d.y)end;function Vector2.__sub(c,d)return Vector2.New(c.x-d.x,c.y-d.y)end;function Vector2.__mul(c,d)local cU=nil;if type(c)=="number"then cU=Vector2.New(c*d.x,c*d.y)elseif type(d)=="number"then cU=Vector2.New(c.x*d,c.y*d)else cU=Vector2.New(c.x*d.x,c.y*d.y)end;return cU end;function Vector2.__div(c,d)local aG="Vector2.__div(a, b) : "local cU=nil;if type(c)=="number"then if d.x==0 or d.y==0 then error(aG.."One of the components of the denominator is equal to 0. Can't divide by 0 !",c,d)end;cU=Vector2.New(c/d.x,c/d.y)elseif type(d)=="number"then if d==0 then error(aG.."The denominator is equal to 0 ! Can't divide by 0 !",c,d)end;cU=Vector2.New(c.x/d,c.y/d)else if d.x==0 or d.y==0 then error(aG.."One of the components of the denominator is equal to 0. Can't divide by 0 !",c,d)end;cU=Vector2.New(c.x/d.x,c.y/d.y)end;return cU end;function Vector2.__unm(cT)return Vector2.New(-cT.x,-cT.y)end;function Vector2.__pow(cT,cV)return Vector2.New(cT.x^cV,cT.y^cV)end;function Vector2.__eq(c,d)return c.x==d.x and c.y==d.y end;function Vector2.ToString(cT)for p,cW in pairs({"x","y"})do if tostring(cT[cW])=="-0"then cT[cW]=0 end end;return cT.x.." "..cT.y end;Vector3.tostringRoundValue=3;Vector3.__tostring=function(cT)local cX=Vector3.tostringRoundValue;if cX~=nil and cX>=0 then return"Vector3: { x="..math.round(cT.x,cX)..", y="..math.round(cT.y,cX)..", z="..math.round(cT.z,cX).." }"else return"Vector3: { x="..cT.x..", y="..cT.y..", z="..cT.z.." }"end end;function Vector3.New(cl,cm,cn,cY)if cl==Vector3 then cl=cm;cm=cn;cn=cY end;if type(cl)=="table"then if cl.z==nil then cm=cl.y;cl=cl.x else cm=cl.y;cn=cl.z;cl=cl.x end elseif type(cm)=="table"then cn=cm.y;cm=cm.x end;cl=cl or 0;cm=cm or cl;cn=cn or cm;return setmetatable({x=cl,y=cm,z=cn},Vector3)end;function Vector3.GetLength(cT)return math.sqrt(cT.x^2+cT.y^2+cT.z^2)end;function Vector3.GetSqrLength(cT)return cT.x^2+cT.y^2+cT.z^2 end;function Vector3.ToString(cT)for p,cW in pairs({"x","y","z"})do if tostring(cT[cW])=="-0"then cT[cW]=0 end end;return cT.x.." "..cT.y.." "..cT.z end;function string.tovector(cZ)local cT=Vector3:New(0)local W={"z","y","x"}for w in string.gmatch(cZ,"[0-9.-]+")do local cW=table.remove(W)if cW~=nil then cT[cW]=tonumber(w)else break end end;if table.remove(W)=="z"then setmetatable(cT,Vector2)cT.z=nil end;return cT end;table.mergein(Daneel.Debug.functionArgumentsInfo,{["Vector2.New"]={{"x",{n,ax,o,cb,cc}},{"y",{n,ax},isOptional=true}},["Vector2.GetLength"]={{"vector",cb}},["Vector2.GetSqrLength"]={{"vector",cb}},["Vector2.Normalized"]={{"vector",cb}},["Vector2.Normalize"]={{"vector",cb}},["Vector2.__add"]={{"a",cb},{"b",cb}},["Vector2.__sub"]={{"a",cb},{"b",cb}},["Vector2.__mul"]={{"a",{ax,cb}},{"b",{ax,cb}}},["Vector2.__div"]={{"a",{ax,cb}},{"b",{ax,cb}}},["Vector2.__unm"]={{"vector",cb}},["Vector2.__pow"]={{"vector",cb},{"exp","number"}},["Vector2.__add"]={{"a",cb},{"b",cb}},["Vector3.GetLength"]={{"vector",cc}},["Vector3.GetSqrLength"]={{"vector",cc}},["Vector3.ToString"]={{"vector",cc}},["string.tovector"]={{"sVector",n}}})CraftStudio.Input.oGetMousePosition=CraftStudio.Input.GetMousePosition;function CraftStudio.Input.GetMousePosition()return setmetatable(CraftStudio.Input.oGetMousePosition(),Vector2)end;CraftStudio.Input.oGetMouseDelta=CraftStudio.Input.GetMouseDelta;function CraftStudio.Input.GetMouseDelta()return setmetatable(CraftStudio.Input.oGetMouseDelta(),Vector2)end;CraftStudio.Input.isMouseLocked=false;CraftStudio.Input.oLockMouse=CraftStudio.Input.LockMouse;function CraftStudio.Input.LockMouse()CraftStudio.Input.isMouseLocked=true;CraftStudio.Input.oLockMouse()end;CraftStudio.Input.oUnlockMouse=CraftStudio.Input.UnlockMouse;function CraftStudio.Input.UnlockMouse()CraftStudio.Input.isMouseLocked=false;CraftStudio.Input.oUnlockMouse()end;function CraftStudio.Input.ToggleMouseLock()if CraftStudio.Input.isMouseLocked==true then CraftStudio.Input.UnlockMouse()else CraftStudio.Input.LockMouse()end end;CraftStudio.Screen.oSetSize=CraftStudio.Screen.SetSize;function CraftStudio.Screen.SetSize(cl,cm)if type(cl)=="table"then cm=cl.y;cl=cl.x end;CraftStudio.Screen.oSetSize(cl,cm)CraftStudio.Screen.GetSize()end;CraftStudio.Screen.oGetSize=CraftStudio.Screen.GetSize;function CraftStudio.Screen.GetSize()local cM=CraftStudio.Screen.oGetSize()CraftStudio.Screen.aspectRatio=cM.x/cM.y;return setmetatable(cM,Vector2)end;CraftStudio.Screen.GetSize()RaycastHit={}RaycastHit.__index=RaycastHit;setmetatable(RaycastHit,{__call=function(an,...)return an.New(...)end})Daneel.Config.objectsByType.RaycastHit=RaycastHit;RaycastHit.__index=function(bI,G)if G=="hitLocation"then return bI.hitPosition end end;function RaycastHit.__tostring(ap)local S="RaycastHit: { "local c_=true;for G,h in pairs(ap)do if c_ then S=S..G.."="..tostring(h)c_=false else S=S..", "..G.."="..tostring(h)end end;return S.." }"end;Daneel.Debug.functionArgumentsInfo["RaycastHit.New"]={{"params",defaultValue={}}}function RaycastHit.New(bJ)if bJ==nil then bJ={}end;return setmetatable(bJ,RaycastHit)end;setmetatable(Ray,{__call=function(an,...)return an:New(...)end})function Ray.Cast(bF,bH,d0)local d1={}for p,aX in pairs(bH)do if aX.inner~=nil then local bI=bF:IntersectsGameObject(aX)if bI~=nil then table.insert(d1,bI)end end end;if d0==true then d1=table.sortby(d1,"distance")end;return d1 end;function Ray.IntersectsGameObject(bF,d2)local aX=GameObject.Get(d2,true)local bI=nil;if aX.inner==nil then return nil end;local bp=aX.modelRenderer;if bp~=nil then bI=bF:IntersectsModelRenderer(bp,true)end;if bI==nil then bp=aX.mapRenderer;if bp~=nil then bI=bF:IntersectsMapRenderer(bp,true)end end;if bI==nil then bp=aX.textRenderer;if bp~=nil then bI=bF:IntersectsTextRenderer(bp,true)end end;if bI~=nil then bI.gameObject=aX end;return bI end;Ray.oIntersectsPlane=Ray.IntersectsPlane;function Ray.IntersectsPlane(bF,d3,d4)local cR=Ray.oIntersectsPlane(bF,d3)if d4 and cR~=nil then return RaycastHit.New({distance=cR,hitPosition=bF.position+bF.direction*cR,hitObject=d3})end;return cR end;Ray.oIntersectsModelRenderer=Ray.IntersectsModelRenderer;function Ray.IntersectsModelRenderer(bF,ct,d4)local cR,d5=Ray.oIntersectsModelRenderer(bF,ct)if d4 and cR~=nil then return RaycastHit.New({distance=cR,normal=d5,hitPosition=bF.position+bF.direction*cR,hitObject=ct,gameObject=ct.gameObject})end;return cR,d5 end;Ray.oIntersectsMapRenderer=Ray.IntersectsMapRenderer;function Ray.IntersectsMapRenderer(bF,cy,d4)local cR,d5,d6,d7=Ray.oIntersectsMapRenderer(bF,cy)if d6~=nil then setmetatable(d6,Vector3)end;if d7~=nil then setmetatable(d7,Vector3)end;if d4 and cR~=nil then return RaycastHit.New({distance=cR,normal=d5,hitBlockLocation=d6,adjacentBlockLocation=d7,hitPosition=bF.position+bF.direction*cR,hitObject=cy,gameObject=cy.gameObject})end;return cR,d5,d6,d7 end;Ray.oIntersectsTextRenderer=Ray.IntersectsTextRenderer;function Ray.IntersectsTextRenderer(bF,cD,d4)local cR,d5=Ray.oIntersectsTextRenderer(bF,cD)if d4 and cR~=nil then return RaycastHit.New({distance=cR,normal=d5,hitPosition=bF.position+bF.direction*cR,hitObject=cD,gameObject=cD.gameObject})end;return cR,d5 end;function Scene.Load(d8)CraftStudio.LoadScene(d8)end;CraftStudio.oLoadScene=CraftStudio.LoadScene;function CraftStudio.LoadScene(d8)local d9=Asset.Get(d8,"Scene",true)Daneel.Event.Fire("OnNewSceneWillLoad",d9)Daneel.Event.events={}Scene.current=d9;CraftStudio.oLoadScene(d9)end;function Scene.Append(d8,da)local d9=Asset.Get(d8,"Scene",true)local cr=nil;if da~=nil then cr=GameObject.Get(da,true)end;return CraftStudio.AppendScene(d9,cr)end;CraftStudio.oDestroy=CraftStudio.Destroy;function CraftStudio.Destroy(av)if type(av)=="table"then Daneel.Event.Fire(av,"OnDestroy",av)Daneel.Event.StopListen(av)av.isDestroyed=true end;CraftStudio.oDestroy(av)end;local db={"ray","Ray"}local dc={"returnRaycastHit",defaultValue=false}table.mergein(Daneel.Debug.functionArgumentsInfo,{["Ray.Cast"]={db,{"gameObjects",o},{"sortByDistance",defaultValue=false}},["Ray.IntersectsGameObject"]={db,{"gameObjectNameOrInstance",{n,bi}},dc},["Ray.IntersectsPlane"]={db,{"plane","Plane"},dc},["Ray.IntersectsModelRenderer"]={db,{"modelRenderer","ModelRenderer"},dc},["Ray.IntersectsMapRenderer"]={db,{"mapRenderer","MapRenderer"},dc},["Ray.IntersectsTextRenderer"]={db,{"textRenderer","TextRenderer"},dc},["Scene.Load"]={{"sceneNameOrAsset",{n,"Scene"}}},["CraftStudio.LoadScene"]={{"sceneNameOrAsset",{n,"Scene"}}},["Scene.Append"]={{"sceneNameOrAsset",{n,"Scene"}},{"parentNameOrInstance",{n,bi},isOptional=true}},["CraftStudio.Destroy"]={{"object"}}})CraftStudio.Storage.oSave=CraftStudio.Storage.Save;function CraftStudio.Storage.Save(dd,j,cj)if j~=nil and type(j)~="table"then j={value=j,isSavedByDaneel=true}end;CraftStudio.Storage.oSave(dd,j,function(de)if de~=nil and Daneel.Config.debug.enableDebug==true then table.print(j)print("CS.Storage.Save( identifier, data[, callback] ) : Error saving with identifier, data (printed above) and error : ",dd,de.message)end;if cj~=nil then cj(de)end end)end;CraftStudio.Storage.oLoad=CraftStudio.Storage.Load;function CraftStudio.Storage.Load(dd,aJ,cj)if cj==nil and type(aJ)=="function"then cj=aJ;aJ=nil end;CraftStudio.Storage.oLoad(dd,function(de,j)if de~=nil and Daneel.Config.debug.enableDebug==true then print("CS.Storage.Load( identifier[, defaultValue], callback ) : Error loading with identifier, default value and error",dd,aJ,de.message)end;if j~=nil and j.value~=nil and j.isSavedByDaneel==true then j=j.value end;if de==nil and j==nil then j=aJ end;cj(de,j)end)end;table.mergein(Daneel.Debug.functionArgumentsInfo,{["CraftStudio.Storage.Save"]={{"identifier",n},{"data",isOptional=true},{"callback","function",isOptional=true}},["CraftStudio.Storage.Load"]={{"identifier",n},{"defaultValue",isOptional=true},{"callback","function",isOptional=true}}})setmetatable(GameObject,{__call=function(an,...)return an.New(...)end})function GameObject.__tostring(aX)if rawget(aX,"inner")==nil then return"Destroyed GameObject: "..tostring(aX:GetId())..": '"..tostring(aX._name).."': "..Daneel.Debug.ToRawString(aX)end;return"GameObject: "..aX:GetId()..": '"..aX:GetName().."'"end;function GameObject.__index(aX,G)if GameObject[G]~=nil then return GameObject[G]end;if type(G)=="string"then local aq=string.ucfirst(G)if G~=aq then local as="Get"..aq;if GameObject[as]~=nil then return GameObject[as](aX)end end end;return nil end;function GameObject.__newindex(aX,G,h)local aq=G;if type(G)=="string"then aq=string.ucfirst(G)end;if G~=aq and G~="transform"then local as="Set"..aq;if GameObject[as]~=nil then return GameObject[as](aX,h)end end;rawset(aX,G,h)end;function GameObject.New(aZ,bJ)local aX=nil;if bJ~=nil and getmetatable(bJ)==GameObject then aX=CraftStudio.CreateGameObject(aZ,bJ)else aX=CraftStudio.CreateGameObject(aZ)end;if bJ~=nil then aX:Set(bJ)end;return aX end;function GameObject.Instantiate(aZ,d8,bJ)local d9=Asset.Get(d8,"Scene",true)local aX=nil;if bJ~=nil and getmetatable(bJ)==GameObject then aX=CraftStudio.Instantiate(aZ,d9,bJ)else aX=CraftStudio.Instantiate(aZ,d9)end;if bJ~=nil then aX:Set(bJ)end;return aX end;function GameObject.Set(aX,bJ)local aG="GameObject.Set( gameObject[, params] ) :"if bJ.parent~=nil then aX:SetParent(bJ.parent)bJ.parent=nil end;if bJ.transform~=nil then aX.transform:Set(bJ.transform)bJ.transform=nil end;for p,bn in pairs(Daneel.Config.componentTypes)do if bn~="ScriptedBehavior"and bn~="Transform"then local df=string.lcfirst(bn)local dg=bJ[df]if dg~=nil then bJ[df]=nil;Daneel.Debug.CheckArgType(dg,"params."..df,"table",aG)local bp=aX[df]if bp==nil then bp=aX:GetComponent(bn)end;if bp==nil then bp=aX:AddComponent(bn,dg)else bp:Set(dg)end end end end;for G,h in pairs(bJ)do if G=="tags"then aX:RemoveTag()aX:AddTag(h)else aX[G]=h end end end;function GameObject.Get(aZ,dh)if getmetatable(aZ)==GameObject then return aZ end;local aG="GameObject.Get( name[, errorIfGameObjectNotFound] ) : "local di=string.split(aZ,".")local aX=CraftStudio.FindGameObject(di[1])if aX==nil and dh==true then error(aG.."GameObject with name '"..di[1].."' (from '"..aZ.."') was not found.")end;if aX~=nil then local dj=aZ;local dk=table.remove(di,1)for p,aZ in ipairs(di)do aX=aX:GetChild(aZ)dk=dk.."."..aZ;if aX==nil then if dh==true then error(aG.."GameObject with name '"..dk.."' (from '"..dj.."') was not found.")end;break end end end;return aX end;function GameObject.GetId(aX)return Daneel.Utilities.GetId(aX)end;GameObject.oSetParent=GameObject.SetParent;function GameObject.SetParent(aX,da,dl)local cr=nil;if da~=nil then cr=GameObject.Get(da,true)end;if dl==nil then dl=false end;GameObject.oSetParent(aX,cr,dl)end;function GameObject.GetChild(aX,aZ,E)if E==nil then E=false end;local dm=nil;if aZ==nil then local dn=aX:GetChildren()dm=dn[1]else local di=string.split(aZ,".")for p,aZ in ipairs(di)do aX=aX:FindChild(aZ,E)if aX==nil then break end end;dm=aX end;return dm end;GameObject.oGetChildren=GameObject.GetChildren;function GameObject.GetChildren(aX,E,dp)local dq=GameObject.oGetChildren(aX)if E then for p,dm in ipairs(table.copy(dq))do dq=table.merge(dq,dm:GetChildren(true))end end;if dp then table.insert(dq,1,aX)end;return dq end;function GameObject.GetInAncestors(aX,dr)local cr=aX:GetParent()if cr==nil then return end;if dr(cr)==true then return cr end;return cr:GetInAncestors(dr)end;GameObject.oSendMessage=GameObject.SendMessage;function GameObject.SendMessage(aX,b5,j)if Daneel.Config.debug.enableDebug then local aY=Daneel.Debug.Try(function()GameObject.oSendMessage(aX,b5,j)end)if not aY then local ds="No data"local K=0;if j~=nil then K=table.getlength(j)ds="Data with "..K.." entries"end;print("GameObject.SendMessage( gameObject, functionName[, data] ) : Error sending message with parameters : ",aX,b5,ds)if K>0 then table.print(j)end end else GameObject.oSendMessage(aX,b5,j)end end;function GameObject.Display(aX,h,dt)local du=false;if h~=false and h~=0 then du=true end;local dv=type(h)if dv=="boolean"then h=nil elseif dv=="number"and dt==true then h=Vector3:New(h)dv="table"end;local dw=aX.textRenderer or aX.modelRenderer or aX.mapRenderer;if dw~=nil and dt~=true and dv=="number"then if not du and aX.displayOpacity==nil then aX.displayOpacity=dw:GetOpacity()end;if du then h=h or aX.displayOpacity or 1 else h=h or 0 end;dw:SetOpacity(h)else if not du and aX.displayLocalPosition==nil then aX.displayLocalPosition=aX.transform:GetLocalPosition()end;if du then h=h or aX.displayLocalPosition or Vector3:New(1)else h=h or Vector3:New(0,0,999)end;aX.transform:SetLocalPosition(h)end;aX.isDisplayed=du;Daneel.Event.Fire(aX,"OnDisplay",aX)end;function GameObject.Destroy(aX)for p,bi in pairs(aX:GetChildren(true,true))do bi:RemoveTag()end;for G,h in pairs(aX)do if G~="inner"and type(h)=="table"then Daneel.Event.Fire(h,"OnDestroy",h)end end;aX._name=aX:GetName()CraftStudio.Destroy(aX)end;function GameObject.AddComponent(aX,bn,bJ)local aG="GameObject.AddComponent( gameObject, componentType[, params] ) : "bn=Daneel.Debug.CheckArgValue(bn,"componentType",Daneel.Config.componentTypes,aG,bn)local bp=nil;if Daneel.Config.componentObjectsByType[bn]==nil then local dx=Asset.Get(bn,"Script")if dx==nil then error(aG.."Provided component type '"..tostring(bn).."' is not one of the component types, nor a script asset or path.")end;bp=aX:CreateScriptedBehavior(dx,bJ or{})elseif Daneel.DefaultConfig().componentObjectsByType[bn]~=nil then if bn=="Transform"then error(aG.."Can't add a transform component because game objects may only have one transform.")elseif bn=="ScriptedBehavior"then error(aG.."To add a scripted behavior, pass the script asset or path instead of 'ScriptedBehavior' as the 'componentType' argument.")end;bp=aX:CreateComponent(bn)if bJ~=nil then bp:Set(bJ)end else local bo=Daneel.Config.componentObjectsByType[bn]if type(bo.New)=="function"then bp=bo.New(aX,bJ)else error(aG.."Can't create custom component of type '"..bn.."' because the component object does not provide a New() function.")end end;Daneel.Event.Fire(aX,"OnNewComponent",bp)return bp end;GameObject.oGetComponent=GameObject.GetComponent;function GameObject.GetComponent(aX,bn)local aG="GameObject.GetComponent( gameObject, componentType ) : "bn=Daneel.Debug.CheckArgValue(bn,"componentType",Daneel.Config.componentTypes,aG,bn)local df=bn;if type(bn)=="string"then df=string.lcfirst(bn)end;local bp=nil;if df~="scriptedBehavior"then bp=aX[df]end;if bp==nil then if Daneel.DefaultConfig().componentObjectsByType[bn]~=nil then bp=GameObject.oGetComponent(aX,bn)elseif Daneel.Config.componentObjectsByType[bn]==nil then local dx=Asset.Get(bn,"Script",true)bp=GameObject.oGetScriptedBehavior(aX,dx)end end;return bp end;GameObject.oGetScriptedBehavior=GameObject.GetScriptedBehavior;function GameObject.GetScriptedBehavior(aX,dy)local dx=Asset.Get(dy,"Script",true)return GameObject.oGetScriptedBehavior(aX,dx)end;GameObject.Tags={}Daneel.modules.Tags={Awake=function()GameObject.Tags={}end}function GameObject.GetWithTag(bG)local bL=bG;if type(bL)=="string"then bL={bL}end;local dz={}local dA=false;for p,bG in pairs(bL)do local bH=GameObject.Tags[bG]if bH~=nil then for a6,aX in pairs(bH)do if aX.inner~=nil then if aX:HasTag(bL)and not table.containsvalue(dz,aX)then table.insert(dz,aX)end else bH[a6]=nil;dA=true end end;if dA then GameObject.Tags[bG]=table.reindex(bH)dA=false end end end;return dz end;function GameObject.GetTags(aX)local bL={}for bG,bH in pairs(GameObject.Tags)do if table.containsvalue(bH,aX)then table.insert(bL,bG)end end;return bL end;function GameObject.AddTag(aX,bG)local bL=bG;if type(bL)=="string"then bL={bL}end;for p,bG in pairs(bL)do if GameObject.Tags[bG]==nil then GameObject.Tags[bG]={aX}elseif not table.containsvalue(GameObject.Tags[bG],aX)then table.insert(GameObject.Tags[bG],aX)end end end;function GameObject.RemoveTag(aX,bG)local bL=bG;if type(bL)=="string"then bL={bL}end;for bG,bH in pairs(GameObject.Tags)do if bL==nil or table.containsvalue(bL,bG)then table.removevalue(GameObject.Tags[bG],aX)end end end;function GameObject.HasTag(aX,bG,dB)local bL=bG;if type(bL)=="string"then bL={bL}end;local dC=false;if dB==true then for p,bG in pairs(bL)do if GameObject.Tags[bG]~=nil and table.containsvalue(GameObject.Tags[bG],aX)then dC=true;break end end else dC=true;for p,bG in pairs(bL)do if GameObject.Tags[bG]==nil or not table.containsvalue(GameObject.Tags[bG],aX)then dC=false;break end end end;return dC end;local aB={"tag",{"string","table"}}local bj={"gameObject","GameObject"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["GameObject.New"]={{"name",n},{"params",{o,"GameObject"},isOptional=true}},["GameObject.Instantiate"]={{"name",n},{"sceneNameOrAsset",{n,"Scene"}},{"params",{o,"GameObject"},isOptional=true}},["GameObject.Set"]={bj,cd},["GameObject.Get"]={{"name",{n,"GameObject"}},{"errorIfGameObjectNotFound",defaultValue=false}},["GameObject.Destroy"]={bj},["GameObject.SetParent"]={bj,{"parentNameOrInstance",{n,"GameObject"},isOptional=true},{"keepLocalTransform",defaultValue=false}},["GameObject.GetChild"]={bj,{"name",n,isOptional=true},{"recursive",defaultValue=false}},["GameObject.GetChildren"]={bj,{"recursive",defaultValue=false},{"includeSelf",defaultValue=false}},["GameObject.GetChildrenByName"]={bj,{"recursive",defaultValue=false},{"includeSelf",defaultValue=false}},["GameObject.GetInAncestors"]={bj,{"searchFunction","function"}},["GameObject.SendMessage"]={bj,{"functionName",n},{"data",o,isOptional=true}},["GameObject.BroadcastMessage"]={bj,{"functionName",n},{"data",o,isOptional=true}},["GameObject.AddComponent"]={bj,{"componentType",{n,"Script"}},{"params",o,isOptional=true}},["GameObject.GetComponent"]={bj,{"componentType",{n,"Script"}}},["GameObject.GetScriptedBehavior"]={bj,{"scriptNameOrAsset",{n,"Script"}}},["GameObject.GetWithTag"]={aB},["GameObject.GetTags"]={bj},["GameObject.AddTag"]={bj,aB},["GameObject.RemoveTag"]={bj,{"tag",{"string","table"},isOptional=true}},["GameObject.HasTag"]={bj,aB,{"atLeastOneTag",defaultValue=false}}})GUI={}local n="string"local d="boolean"local ax="number"local o="table"local bi="GameObject"local cb="Vector2"local cc="Vector3"local bj={"gameObject",bi}local dD={"params",o,defaultValue={}}local cd={"params",o}function GUI.ToSceneUnit(h,cK)if type(h)=="string"then h=h:trim()if h:find("px")then if cK~=nil and getmetatable(cK)==GameObject then cK=cK.camera end;if cK==nil then error("GUI.ToSceneUnit(value, camera) : Can't convert the value '"..h.."' from pixels to scene units because no camera component has been passed as argument.")end;h=tonumber(h:sub(0,#h-2))*cK:GetPixelsToUnits()elseif h:find("u")then h=tonumber(h:sub(0,#h-1))else h=tonumber(h)end end;return h end;function GUI.ToPixel(h,dE,cK)if type(h)=="string"then if type(dE)=="table"then cK=dE;dE=nil end;h=h:trim()local cM=CS.Screen.GetSize()if h:find("px")then h=tonumber(h:sub(0,#h-2))elseif h:find("%",1,true)and dE~=nil then h=cM[dE]*tonumber(h:sub(0,#h-1))/100 elseif h:find("s")and dE~=nil then h=h:sub(2)if h==""then h=0 end;h=cM[dE]+tonumber(h)elseif h:find("u")then if cK==nil then error("GUI.ToPixel(value, camera) : Can't convert the value '"..h.."' from pixels to scene units because no camera component has been passed as argument.")end;h=tonumber(h:sub(0,#h-1))/cK:GetPixelsToUnits()else h=tonumber(h)end end;return h end;local function dF(aX,aG)local dG=aX:GetInAncestors(function(bi)if bi.camera~=nil then return true end end)if dG==nil and aG~=nil then error(aG..": The "..tostring(aX).." isn't a child of a game object with a camera component and no camera game object is passed via the 'params' argument.")end;return dG end;GUI.Hud={}GUI.Hud.__index=GUI.Hud;function GUI.Hud.CreateOriginGO(aX)if aX.camera==nil then error("GUI.Hud.CreateOriginGO(): Provided game object "..tostring(aX).." has no camera component.")end;local cO=aX.camera:GetPixelsToUnits()local cM=CS.Screen.GetSize()local dH=CS.CreateGameObject("Hud Origin for camera "..aX:GetName(),aX)dH.transform:SetLocalPosition(Vector3:New(-cM.x*cO/2,cM.y*cO/2,0))aX.hudOriginGO=dH end;function GUI.Hud.ToHudPosition()error("GUI.Hud.ToHudPosition() is deprecated since v1.5.0. Use Camera.WorldToScreenPoint() or Camera.Project() instead.")end;function Vector2.ToPixel(cT,cK)return Vector2.New(GUI.ToPixel(cT.x,"x",cK),GUI.ToPixel(cT.y,"y",cK))end;function GUI.Hud.New(aX,bJ)local dI=setmetatable({},GUI.Hud)dI.gameObject=aX;aX.hud=dI;dI.id=Daneel.Utilities.GetId()bJ=bJ or{}dI.cameraGO=bJ.cameraGO or dF(aX,"GUI.Hud.New()")if dI.cameraGO.hudOriginGO==nil then GUI.Hud.CreateOriginGO(dI.cameraGO)end;dI:Set(table.merge(GUI.Config.hud,bJ))return dI end;function GUI.Hud.SetPosition(dI,cs)cs=cs:ToPixel(dI.cameraGO.camera)local dJ=dI.cameraGO.hudOriginGO.transform:GetPosition()+Vector3:New(cs.x*dI.cameraGO.camera:GetPixelsToUnits(),-cs.y*dI.cameraGO.camera:GetPixelsToUnits(),0)dJ.z=dI.gameObject.transform:GetPosition().z;dI.gameObject.transform:SetPosition(dJ)end;function GUI.Hud.GetPosition(dI)local cs=dI.gameObject.transform:GetPosition()-dI.cameraGO.hudOriginGO.transform:GetPosition()cs=cs/dI.cameraGO.camera:GetPixelsToUnits()return Vector2.New(math.round(cs.x),math.round(-cs.y))end;function GUI.Hud.SetLocalPosition(dI,cs)cs=cs:ToPixel(dI.cameraGO.camera)local cr=dI.gameObject.parent or dI.cameraGO.hudOriginGO;local dJ=cr.transform:GetPosition()+Vector3:New(cs.x*dI.cameraGO.camera:GetPixelsToUnits(),-cs.y*dI.cameraGO.camera:GetPixelsToUnits(),0)dJ.z=dI.gameObject.transform:GetPosition().z;dI.gameObject.transform:SetPosition(dJ)end;function GUI.Hud.GetLocalPosition(dI)local cr=dI.gameObject.parent or dI.cameraGO.hudOriginGO;local cs=dI.gameObject.transform:GetPosition()-cr.transform:GetPosition()cs=cs/dI.cameraGO.camera:GetPixelsToUnits()return Vector2.New(math.round(cs.x),math.round(-cs.y))end;function GUI.Hud.SetLayer(dI,dK)local dL=dI.cameraGO.hudOriginGO.transform:GetPosition().z;local dM=dI.gameObject.transform:GetPosition()dI.gameObject.transform:SetPosition(Vector3:New(dM.x,dM.y,dL-dK))end;function GUI.Hud.GetLayer(dI)local dL=dI.cameraGO.hudOriginGO.transform:GetPosition().z;return math.round(dL-dI.gameObject.transform:GetPosition().z,1)end;function GUI.Hud.SetLocalLayer(dI,dK)local cr=dI.gameObject.parent or dI.cameraGO.hudOriginGO;local dL=cr.transform:GetPosition().z;local dM=dI.gameObject.transform:GetPosition()dI.gameObject.transform:SetPosition(Vector3:New(dM.x,dM.y,dL-dK))end;function GUI.Hud.GetLocalLayer(dI)local cr=dI.gameObject.parent or dI.cameraGO.hudOriginGO;local dL=cr.transform:GetPosition().z;return math.round(dL-dI.gameObject.transform:GetPosition().z,1)end;local dN={"hud","Hud"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["GUI.Hud.CreateOriginGO"]={bj},["GUI.Hud.New"]={bj,dD},["GUI.Hud.SetPosition"]={dN,{"position",cb}},["GUI.Hud.GetPosition"]={dN},["GUI.Hud.SetLocalPosition"]={dN,{"position",cb}},["GUI.Hud.GetLocalPosition"]={dN},["GUI.Hud.SetLayer"]={dN,{"layer",ax}},["GUI.Hud.GetLayer"]={dN},["GUI.Hud.SetLocalLayer"]={dN,{"layer",ax}},["GUI.Hud.GetLocalLayer"]={dN}})GUI.Toggle={}GUI.Toggle.__index=GUI.Toggle;function GUI.Toggle.New(aX,bJ)if Daneel.modules.MouseInput==nil then error("GUI.Toggle.New(): The 'Mouse Input' module is missing from your project. It is required for the player to interact with the GUI.Toggle, GUI.Input and GUI.Slider components.")end;local dO=table.copy(GUI.Config.toggle)dO.defaultText=dO.text;dO.text=nil;dO.gameObject=aX;dO.id=Daneel.Utilities.GetId()setmetatable(dO,GUI.Toggle)if bJ~=nil then dO:Set(bJ)end;aX.toggle=dO;aX:AddTag("guiComponent")aX.OnNewComponent=function(bp)if bp==nil then return end;local aL=getmetatable(bp)if aL==TextRenderer then local aP=bp:GetText()if aP==nil then aP=dO.defaultText end;dO:SetText(aP)elseif aL==ModelRenderer and dO.checkedModel~=nil then if dO.isChecked and dO.checkedModel~=nil then bp:SetModel(dO.checkedModel)elseif not dO.isChecked and dO.uncheckedModel~=nil then bp:SetModel(dO.uncheckedModel)end end end;aX.OnClick=function()if not(dO.group~=nil and dO.isChecked)then dO:Check(not dO.isChecked)end end;if aX.textRenderer~=nil and aX.textRenderer:GetText()~=nil then dO:SetText(aX.textRenderer:GetText())end;if aX.modelRenderer~=nil then if dO.isChecked and dO.checkedModel~=nil then dO.gameObject.modelRenderer:SetModel(dO.checkedModel)elseif not dO.isChecked and dO.uncheckedModel~=nil then dO.gameObject.modelRenderer:SetModel(dO.uncheckedModel)end end;dO:Check(dO.isChecked,true)return dO end;function GUI.Toggle.SetText(dO,aP)if dO.gameObject.textRenderer~=nil then if dO.isChecked==true then aP=Daneel.Utilities.ReplaceInString(dO.checkedMark,{text=aP})else aP=Daneel.Utilities.ReplaceInString(dO.uncheckedMark,{text=aP})end;dO.gameObject.textRenderer:SetText(aP)else if Daneel.Config.debug.enableDebug then print("WARNING: GUI.Toggle.SetText(toggle, text): Can't set the toggle's text because no TextRenderer component has been found on the gameObject '"..tostring(dO.gameObject).."'. Waiting for a TextRenderer to be added.")end;dO.defaultText=aP end end;function GUI.Toggle.GetText(dO)local aP=nil;if dO.gameObject.textRenderer~=nil then aP=dO.gameObject.textRenderer:GetText()if aP==nil then aP=dO.defaultText end;local dP=dO.checkedMark;if not dO.isChecked then dP=dO.uncheckedMark end;local dQ,dR=dP:find(":text")if dQ~=nil and dR~=nil then local dS=dP:sub(1,dQ-1)local dT=dP:sub(dR+1)aP=aP:gsub(dS,""):gsub(dT,"")end elseif Daneel.Config.debug.enableDebug then print("WARNING: GUI.Toggle.GetText(toggle): Can't get the toggle's text because no TextRenderer component has been found on the gameObject '"..tostring(dO.gameObject).."'. Returning nil.")end;return aP end;function GUI.Toggle.Check(dO,dU,dV)if dU==nil then dU=true end;if dV==true or dO.isChecked~=dU then local aP=nil;if dO.gameObject.textRenderer~=nil then aP=dO:GetText()end;dO.isChecked=dU;if dO.gameObject.textRenderer~=nil then dO:SetText(aP)end;if dO.gameObject.modelRenderer~=nil then if dU==true and dO.checkedModel~=nil then dO.gameObject.modelRenderer:SetModel(dO.checkedModel)elseif dU==false and dO.uncheckedModel~=nil then dO.gameObject.modelRenderer:SetModel(dO.uncheckedModel)end end;Daneel.Event.Fire(dO,"OnUpdate",dO)if dO.Group~=nil and dU==true then local bH=GameObject.GetWithTag(dO.Group)for p,aX in ipairs(bH)do if aX~=dO.gameObject then aX.toggle:Check(false,true)end end end end end;function GUI.Toggle.SetGroup(dO,dW)if dW==nil and dO.Group~=nil then dO.gameObject:RemoveTag(dO.Group)else if dO.Group~=nil then dO.gameObject:RemoveTag(dO.Group)end;dO:Check(false)dO.Group=dW;dO.gameObject:AddTag(dO.Group)end end;function GUI.Toggle.GetGroup(dO)return dO.Group end;function GUI.Toggle.Set(dO,bJ)local dW=bJ.group;bJ.group=nil;local dX=bJ.isChecked;bJ.isChecked=nil;for G,h in pairs(bJ)do dO[G]=h end;if dW~=nil then dO:SetGroup(dW)end;if dX~=nil then dO:Check(dX)end end;local dY={"toggle","Toggle"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["GUI.Toggle.New"]={bj,dD},["GUI.Toggle.Set"]={dY,cd},["GUI.Toggle.SetText"]={dY,{"text",n}},["GUI.Toggle.GetText"]={dY},["GUI.Toggle.Check"]={dY,{"state",defaultValue=true},{"forceUpdate",defaultValue=false}},["GUI.Toggle.SetGroup"]={dY,{"group",n,isOptional=true}},["GUI.Toggle.GetGroup"]={dY}})GUI.ProgressBar={}GUI.ProgressBar.__index=GUI.ProgressBar;function GUI.ProgressBar.New(aX,bJ)local dZ=table.copy(GUI.Config.progressBar)dZ.gameObject=aX;dZ.id=Daneel.Utilities.GetId()dZ.value=nil;setmetatable(dZ,GUI.ProgressBar)bJ=bJ or{}if bJ.value==nil then bJ.value=GUI.Config.progressBar.value end;dZ.cameraGO=bJ.cameraGO or dF(aX)dZ:Set(bJ)aX.progressBar=dZ;return dZ end;function GUI.ProgressBar.SetValue(dZ,h)local aG="GUI.ProgressBar.SetValue(progressBar, value) : "local d_=dZ.minValue;local e0=dZ.maxValue;local e1=nil;if type(h)=="string"then if h:endswith("%")then e1=tonumber(h:sub(1,#h-1))/100;local e2=e1;e1=math.clamp(e1,0.0,1.0)if e1~=e2 and Daneel.Config.debug.enableDebug then print(aG.."WARNING : value in percentage with value '"..h.."' is below 0% or above 100%.")end;h=(e0-d_)*e1+d_ else h=tonumber(h)end end;local e3=h;h=math.clamp(h,d_,e0)dZ.minLength=GUI.ToSceneUnit(dZ.minLength,dZ.cameraGO)dZ.maxLength=GUI.ToSceneUnit(dZ.maxLength,dZ.cameraGO)local e4=dZ:GetValue()if h~=e4 then if h~=e3 and Daneel.Config.debug.enableDebug then print(aG.." WARNING : value with value '"..e3 .."' is out of its boundaries : min='"..d_.."', max='"..e0 .."'")end;local e5=e0-d_;e1=(h-d_)/e5;dZ.height=GUI.ToSceneUnit(dZ.height,dZ.cameraGO)local e6=(dZ.maxLength-dZ.minLength)*e1+dZ.minLength;local e7=dZ.gameObject.transform:GetLocalScale()dZ.gameObject.transform:SetLocalScale(Vector3:New(e6,dZ.height,e7.z))Daneel.Event.Fire(dZ,"OnUpdate",dZ)end end;GUI.ProgressBar.SetProgress=GUI.ProgressBar.SetValue;function GUI.ProgressBar.UpdateValue(dZ,h,e8)if h==dZ._value then return end;dZ._value=h;local d_=dZ.minValue;local e0=dZ.maxValue;local e9=dZ.minLength;local e1=nil;if type(h)=="string"then local I=h;h=tonumber(h)if h==nil then e1=tonumber(I:sub(1,#I-1))/100 end end;if e1==nil then local e5=e0-d_;e1=(h-d_)/e5 end;e1=math.clamp(e1,0.0,1.0)local e6=(dZ.maxLength-e9)*e1+e9;local e7=dZ.gameObject.transform:GetLocalScale()dZ.gameObject.transform:SetLocalScale(Vector3:New(e6,dZ.height,e7.z))if e8==true then Daneel.Event.Fire(dZ,"OnUpdate",dZ)end end;GUI.ProgressBar.UpdateProgress=GUI.ProgressBar.UpdateValue;function GUI.ProgressBar.GetValue(dZ,ea)local cq=math.round(dZ.gameObject.transform:GetLocalScale().x,2)local e5=dZ.maxLength-dZ.minLength;local h=(cq-dZ.minLength)/e5;if ea==true then h=h*100 else h=(dZ.maxValue-dZ.minValue)*h+dZ.minValue end;return h end;GUI.ProgressBar.GetProgress=GUI.ProgressBar.GetValue;function GUI.ProgressBar.SetHeight(dZ,eb)local e7=dZ.gameObject.transform:GetLocalScale()local eb=GUI.ToSceneUnit(eb,dZ.cameraGO)dZ.gameObject.transform:SetLocalScale(Vector3:New(e7.x,eb,e7.z))end;function GUI.ProgressBar.GetHeight(dZ)return dZ.gameObject.transform:GetLocalScale().y end;function GUI.ProgressBar.Set(dZ,bJ)local h=bJ.value;bJ.value=nil;if h==nil then h=dZ:GetValue()end;for G,h in pairs(bJ)do dZ[G]=h end;dZ:SetValue(h)end;local ec={"progressBar","ProgressBar"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["GUI.ProgressBar.New"]={bj,dD},["GUI.ProgressBar.Set"]={ec,cd},["GUI.ProgressBar.SetValue"]={ec,{"value",{n,ax}}},["GUI.ProgressBar.GetValue"]={ec,{"getAsPercentage",defaultValue=false}},["GUI.ProgressBar.SetHeight"]={ec,{"height",{n,ax}}},["GUI.ProgressBar.GetHeight"]={ec}})GUI.Slider={}GUI.Slider.__index=GUI.Slider;function GUI.Slider.New(aX,bJ)if Daneel.modules.MouseInput==nil then error("GUI.Slider.New(): The 'Mouse Input' module is missing from your project. It is required for the player to interact with the GUI.Toggle, GUI.Input and GUI.Slider components.")end;local ed=table.copy(GUI.Config.slider)ed.gameObject=aX;ed.id=Daneel.Utilities.GetId()ed.value=nil;ed.parent=ed.gameObject:GetParent()if ed.parent==nil then local bi=CS.CreateGameObject("SliderParent")bi.transform:SetPosition(ed.gameObject.transform:GetPosition())ed.gameObject:SetParent(bi)end;setmetatable(ed,GUI.Slider)aX.slider=ed;aX:AddTag("guiComponent")aX.OnDrag=function()local bu=CraftStudio.Input.GetMouseDelta()local ee=Vector3:New(bu.x,0,0)if ed.axis=="y"then ee=Vector3:New(0,-bu.y,0,0)end;aX.transform:Move(ee*ed.cameraGO.camera:GetPixelsToUnits())local ef=aX.transform:GetPosition()local eg=ed.parent.transform:GetPosition()if ed.axis=="x"and ef.x<eg.x then ed:SetValue(ed.minValue)elseif ed.axis=="y"and ef.y<eg.y then ed:SetValue(ed.minValue)elseif ed:GetValue()>ed.maxValue then ed:SetValue(ed.maxValue)else Daneel.Event.Fire(ed,"OnUpdate",ed)end end;bJ=bJ or{}ed.cameraGO=bJ.cameraGO or dF(aX,"GUI.Slider.New()")if bJ.value==nil then bJ.value=GUI.Config.slider.value end;ed:Set(bJ)return ed end;function GUI.Slider.SetValue(ed,h)local aG="GUI.Slider.SetValue( slider, value ) : "local e0=ed.maxValue;local d_=ed.minValue;local eh=nil;if type(h)=="string"then if h:endswith("%")then eh=tonumber(h:sub(1,#h-1))/100;h=(e0-d_)*eh+d_ else h=tonumber(h)end end;local e3=h;h=math.clamp(h,d_,e0)if h~=e3 and Daneel.Config.debug.enableDebug then print(aG.."WARNING : Argument 'value' with value '"..e3 .."' is out of its boundaries : min='"..d_.."', max='"..e0 .."'")end;local e5=e0-d_;eh=(h-d_)/e5;ed.length=GUI.ToSceneUnit(ed.length,ed.cameraGO)local ei=-Vector3:Left()if ed.axis=="y"then ei=Vector3:Up()end;local co=Vector3.Rotate(ei,ed.gameObject.transform:GetOrientation())local dJ=ed.parent.transform:GetPosition()+co*ed.length*eh;ed.gameObject.transform:SetPosition(dJ)Daneel.Event.Fire(ed,"OnUpdate",ed)end;function GUI.Slider.GetValue(ed,ea)local eh=Vector3.Distance(ed.parent.transform:GetPosition(),ed.gameObject.transform:GetPosition())/ed.length;local h=eh*100;if ea~=true then h=(ed.maxValue-ed.minValue)*eh+ed.minValue end;return h end;function GUI.Slider.Set(ed,bJ)local h=bJ.value;bJ.value=nil;if h==nil then h=ed:GetValue()end;for G,h in pairs(bJ)do ed[G]=h end;ed:SetValue(h)end;GUI.Input={}GUI.Input.__index=GUI.Input;function GUI.Input.New(aX,bJ)if Daneel.modules.MouseInput==nil then error("GUI.Input.New(): The 'Mouse Input' module is missing from your project. It is required for the player to interact with the GUI.Toggle, GUI.Input and GUI.Slider components.")end;bJ=bJ or{}local ej=table.merge(GUI.Config.input,bJ)ej.gameObject=aX;ej.id=Daneel.Utilities.GetId()setmetatable(ej,GUI.Input)if ej.OnTextEntered==nil then ej.OnTextEntered=function(z)if ej.isFocused then local ek=string.byte(z)if ek==8 then local aP=aX.textRenderer:GetText()ej:Update(aP:sub(1,#aP-1),true)elseif ek>=32 and ek<=127 then if ej.characterRange~=nil and ej.characterRange:find(z,1,true)==nil then return end;ej:Update(z)end end end end;local el=aX:GetChild("Cursor")if el~=nil then ej.cursorGO=el;el.tweener=Tween.Timer(ej.cursorBlinkInterval,function(em)if em.gameObject==nil or em.gameObject.inner==nil then em:Destroy()return end;local en=1;if em.gameObject.modelRenderer:GetOpacity()==1 then en=0 end;em.gameObject.modelRenderer:SetOpacity(en)end,true)el.tweener.isPaused=true;el.tweener.gameObject=el end;local eo=ej.isFocused;ej.isFocused=nil;ej:Focus(eo)aX.input=ej;aX:AddTag("guiComponent")aX:AddTag("gui_input")local ep=aX:GetChild("Background")if ep~=nil then ej.backgroundGO=ep;if ej.focusOnBackgroundClick then ep:AddTag("guiComponent")end end;return ej end;GUI.Input.Module={}Daneel.modules.GUIInput=GUI.Input.Module;function GUI.Input.Module.Update()if CS.Input.WasButtonJustReleased("LeftMouse")then local eq=GameObject.GetWithTag("gui_input")local er=nil;for p,es in pairs(eq)do local ej=es.input;local et=es.isMouseOver;if et~=true and ej.focusOnBackgroundClick and ej.backgroundGO~=nil then et=ej.backgroundGO.isMouseOver end;if et==true then er=ej else ej:Focus(false)end end;if er~=nil then er:Focus(true)end end;if CS.Input.WasButtonJustReleased("ValidateInput")then local eq=GameObject.GetWithTag("gui_input")for p,es in pairs(eq)do local ej=es.input;if ej.isFocused then Daneel.Event.Fire(ej,"OnValidate",ej)break end end end end;function GUI.Input.Focus(ej,eu)if eu==nil then eu=true end;if ej.isFocused~=eu then ej.isFocused=eu;local aP=string.trim(ej.gameObject.textRenderer:GetText())if eu==true then CS.Input.OnTextEntered(ej.OnTextEntered)if aP==ej.defaultValue then ej.gameObject.textRenderer:SetText("")end else CS.Input.OnTextEntered(nil)if ej.defaultValue~=nil and ej.defaultValue~=""and aP==""then ej.gameObject.textRenderer:SetText(ej.defaultValue)end end;Daneel.Event.Fire(ej,"OnFocus",ej)ej:UpdateCursor()end end;function GUI.Input.UpdateCursor(ej)if ej.cursorGO~=nil then local cG=ej.gameObject.textRenderer:GetAlignment()if cG~=TextRenderer.Alignment.Right then local K=ej.gameObject.textRenderer:GetTextWidth()if cG==TextRenderer.Alignment.Center then K=K/2 end;ej.cursorGO.transform:SetLocalPosition(Vector3:New(K,0,0))end;local en=0;if ej.isFocused then en=1 end;ej.cursorGO.modelRenderer:SetOpacity(en)ej.cursorGO.tweener.isPaused=not ej.isFocused;Daneel.Event.Fire(ej.cursorGO,"OnUpdate",ej)end end;function GUI.Input.Update(ej,aP,ev)local ew=ej.gameObject.textRenderer:GetText()if not ev then aP=ew..aP end;if#aP>ej.maxLength then aP=aP:sub(1,ej.maxLength)end;if ew~=aP then ej.gameObject.textRenderer:SetText(aP)Daneel.Event.Fire(ej,"OnUpdate",ej)ej:UpdateCursor()end end;local ex={"slider","Slider"}local ey={"input","Input"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["GUI.Slider.New"]={bj,dD},["GUI.Slider.Set"]={ex,cd},["GUI.Slider.SetValue"]={ex,{"value",{n,ax}}},["GUI.Slider.GetValue"]={ex,{"getAsPercentage",defaultValue=false}},["GUI.Input.New"]={bj,dD},["GUI.Input.Focus"]={ey,{"focus",defaultValue=true}},["GUI.Input.UpdateCursor"]={ey},["GUI.Input.Update"]={ey,{"text",n},{"replaceText",defaultValue=false}}})GUI.TextArea={}GUI.TextArea.__index=GUI.TextArea;function GUI.TextArea.New(aX,bJ)local ez={}ez.gameObject=aX;aX.textArea=ez;ez.id=Daneel.Utilities.GetId()ez.lineGOs={}setmetatable(ez,GUI.TextArea)ez.textRuler=aX.textRenderer;if ez.textRuler==nil then ez.textRuler=aX:CreateComponent("TextRenderer")end;ez.textRuler:SetText("")bJ=bJ or{}ez.cameraGO=bJ.cameraGO or dF(aX)ez:Set(table.merge(GUI.Config.textArea,bJ))return ez end;function GUI.TextArea.Set(ez,bJ)local eA=ez.lineGOs;ez.lineGOs={}local aP=bJ.text;bJ.text=nil;for G,h in pairs(bJ)do ez[G]=h end;ez.lineGOs=eA;if aP==nil then aP=ez.Text end;ez:SetText(aP)end;function GUI.TextArea.SetText(ez,aP)ez.Text=aP;local eB={aP}if ez.newLine~=""then eB=string.split(aP,ez.NewLine)end;local eC=ez.gameObject.transform:GetLocalScale()local eD=ez.AreaWidth;if eD~=nil and eD>0 then local eE=table.copy(eB)eB={}for p=1,#eE do local ca=eE[p]if ez.textRuler:GetTextWidth(ca)*eC.x>eD then local eF=""for a6=1,#ca do local z=ca:sub(a6,a6)eF=eF..z;if ez.textRuler:GetTextWidth(eF)*eC.x>eD then if z==" "then table.insert(eB,eF:sub(1,#eF-1))eF=""else local eG=""for _=#eF,1,-1 do local eH=eF:sub(_,_)if eH==" "then break else eG=eH..eG end end;table.insert(eB,eF:sub(1,#eF-#eG))eF=eG end;if not ez.WordWrap then eF=nil;break end end end;if eF~=nil then table.insert(eB,eF)end else table.insert(eB,ca)end end end;if type(ez.linesFilter)=="function"then eB=ez.linesFilter(ez,eB)or eB end;local eI=#eB;local eA=ez.lineGOs;local eJ=#eA;local eK=ez.LineHeight/eC.y;local aX=ez.gameObject;local eL={font=ez.Font,alignment=ez.Alignment,opacity=ez.Opacity}local eM=-eK/2;if ez.VerticalAlignment=="middle"then eM=eK*eI/2-eK/2 elseif ez.VerticalAlignment=="bottom"then eM=eK*eI-eK/2 end;for p=1,eI do local ca=eB[p]eL.text=ca;if eA[p]~=nil then eA[p].transform:SetLocalPosition(Vector3:New(0,eM,0))eA[p].textRenderer:Set(eL)else local eN=CS.CreateGameObject("TextArea"..ez.id.."-Line"..p,aX)eN.transform:SetLocalPosition(Vector3:New(0,eM,0))eN.transform:SetLocalScale(Vector3:New(1))eN:CreateComponent("TextRenderer")eN.textRenderer:Set(eL)table.insert(eA,eN)end;eM=eM-eK end;if eI<eJ then for p=eI+1,eJ do eA[p].textRenderer:SetText("")end end;Daneel.Event.Fire(ez,"OnUpdate",ez)end;function GUI.TextArea.GetText(ez)return ez.Text end;function GUI.TextArea.AddLine(ez,ca,eO)local aP=ez.Text;if eO==true then aP=ca..ez.NewLine..aP else if aP~=""and not string.endswith(aP,ez.NewLine)then ca=ez.NewLine..ca end;aP=aP..ca end;ez:SetText(aP)end;function GUI.TextArea.SetAreaWidth(ez,eD)eD=math.clamp(GUI.ToSceneUnit(eD,ez.cameraGO),0,999)if ez.AreaWidth~=eD then ez.AreaWidth=eD;if#ez.lineGOs>0 then ez:SetText(ez.Text)end end end;function GUI.TextArea.GetAreaWidth(ez)return ez.AreaWidth end;function GUI.TextArea.SetWordWrap(ez,eP)if ez.WordWrap~=eP then ez.WordWrap=eP;if#ez.lineGOs>0 then ez:SetText(ez.Text)end end end;function GUI.TextArea.GetWordWrap(ez)return ez.WordWrap end;function GUI.TextArea.SetNewLine(ez,eF)if ez.NewLine~=eF then ez.NewLine=eF;if#ez.lineGOs>0 then ez:SetText(ez.Text)end end end;function GUI.TextArea.GetNewLine(ez)return ez.NewLine end;function GUI.TextArea.SetLineHeight(ez,eK)local eK=GUI.ToSceneUnit(eK,ez.cameraGO)if ez.LineHeight~=eK then ez.LineHeight=eK;if#ez.lineGOs>0 then ez:SetText(ez.Text)end end end;function GUI.TextArea.GetLineHeight(ez)return ez.LineHeight end;function GUI.TextArea.SetVerticalAlignment(ez,eQ)local aG="GUI.TextArea.SetVerticalAlignment( textArea, verticalAlignment ) : "eQ=Daneel.Debug.CheckArgValue(eQ,"verticalAlignment",{"top","middle","bottom"},aG,GUI.Config.textArea.verticalAlignment)eQ=string.trim(eQ:lower())if ez.VerticalAlignment~=eQ then ez.VerticalAlignment=eQ;if#ez.lineGOs>0 then ez:SetText(ez.Text)end end end;function GUI.TextArea.GetVerticalAlignment(ez)return ez.VerticalAlignment end;function GUI.TextArea.SetFont(ez,cF)ez.textRuler:SetFont(cF)cF=ez.textRuler:GetFont()if ez.Font~=cF then ez.Font=cF;if#ez.lineGOs>0 then for p=1,#ez.lineGOs do ez.lineGOs[p].textRenderer:SetFont(ez.Font)end;ez:SetText(ez.Text)end end end;function GUI.TextArea.GetFont(ez)return ez.Font end;function GUI.TextArea.SetAlignment(ez,cG)ez.textRuler:SetAlignment(cG)cG=ez.textRuler:GetAlignment()if ez.Alignment~=cG then ez.Alignment=cG;for p=1,#ez.lineGOs do ez.lineGOs[p].textRenderer:SetAlignment(ez.Alignment)end end end;function GUI.TextArea.GetAlignment(ez)return ez.Alignment end;function GUI.TextArea.SetOpacity(ez,en)if ez.Opacity~=en then ez.Opacity=en;for p=1,#ez.lineGOs do ez.lineGOs[p].textRenderer:SetOpacity(en)end end end;function GUI.TextArea.GetOpacity(ez)return ez.Opacity end;local eR={"textArea","TextArea"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["GUI.TextArea.New"]={{"gameObject",bi},{"params",o,isOptional=true}},["GUI.TextArea.Set"]={eR,cd},["GUI.TextArea.SetText"]={eR,{"text",n}},["GUI.TextArea.GetText"]={eR},["GUI.TextArea.AddLine"]={eR,{"line",n},{"prepend",defaultValue=false}},["GUI.TextArea.SetAreaWidth"]={eR,{"areaWidth",{n,ax},defaultValue=0}},["GUI.TextArea.GetAreaWidth"]={eR},["GUI.TextArea.SetWordWrap"]={eR,{"wordWrap",defaultValue=false}},["GUI.TextArea.GetWordWrap"]={eR},["GUI.TextArea.SetNewLine"]={eR,{"newLine",n}},["GUI.TextArea.GetNewLine"]={eR},["GUI.TextArea.SetLineHeight"]={eR,{"lineHeight",{n,ax}}},["GUI.TextArea.GetLineHeight"]={eR},["GUI.TextArea.SetVerticalAlignment"]={eR,{"verticalAlignment",n}},["GUI.TextArea.GetVerticalAlignment"]={eR},["GUI.TextArea.SetFont"]={eR,{"font",{n,"Font"}}},["GUI.TextArea.GetFont"]={eR},["GUI.TextArea.SetAlignment"]={eR,{"alignment",{n,"userdata",ax}}},["GUI.TextArea.GetAlignment"]={eR},["GUI.TextArea.SetOpacity"]={eR,{"opacity",ax}},["GUI.TextArea.GetOpacity"]={eR}})Daneel.modules.GUI=GUI;function GUI.DefaultConfig()local bk={cameraName="HUD Camera",cameraGO=nil,originGO=nil,hud={},toggle={isChecked=false,text="Toggle",checkedMark=":text",uncheckedMark=":text",checkedModel=nil,uncheckedModel=nil},progressBar={height=1,minValue=0,maxValue=100,minLength=0,maxLength=5,value="100%"},slider={minValue=0,maxValue=100,length=5,axis="x",value="0%",OnTextEntered=nil},input={isFocused=false,maxLength=9999,defaultValue=nil,characterRange=nil,focusOnBackgroundClick=true,cursorBlinkInterval=0.5},textArea={areaWidth=0,wordWrap=false,newLine="<br>",lineHeight=1,verticalAlignment="top",font=nil,text="",alignment=nil,opacity=nil},componentObjectsByType={Hud=GUI.Hud,Toggle=GUI.Toggle,ProgressBar=GUI.ProgressBar,Slider=GUI.Slider,Input=GUI.Input,TextArea=GUI.TextArea},componentTypes={},propertiesByComponentName={hud={"position","localPosition","layer","localLayer"},progressBar={"value","height"},slider={"value"},textArea={"text","areaWidth","lineHeight","opacity"}}}return bk end;GUI.Config=GUI.DefaultConfig()function GUI.Load()if Daneel.modules.Tween then table.mergein(Tween.Config.propertiesByComponentName,GUI.Config.propertiesByComponentName)end end;Draw={}Daneel.modules.Draw=Draw;local eS={}local n="string"local d="boolean"local ax="number"local o="table"local a0="Vector3"local bj={"gameObject","GameObject"}local cd={"params",o,defaultValue={}}local eT={"line","LineRenderer"}local eU={"circle","CircleRenderer"}local eV={"draw",d,defaultValue=true}Draw.LineRenderer={}eS["Draw.LineRenderer.New"]={bj,cd}function Draw.LineRenderer.New(aX,bJ)local ca={origin=aX.transform:GetPosition(),_direction=Vector3:Left(),_length=1,_width=1,gameObject=aX}ca._endPosition=ca.origin;aX.lineRenderer=ca;setmetatable(ca,Draw.LineRenderer)bJ=table.merge(Draw.Config.lineRenderer,bJ)if bJ.endPosition~=nil then bJ.length=nil;bJ.direction=nil end;ca:Set(bJ)return ca end;eS["Draw.LineRenderer.Set"]={eT,cd}function Draw.LineRenderer.Set(ca,bJ)if bJ.endPosition then if bJ.length or bJ.direction then if Daneel.Config.debug.enableDebug then local aP="Draw.LineRenderer.Set( line, params ) : The 'endPosition' property is set with value "..tostring(bJ.endPosition)if bJ.length then aP=aP.." The 'length' property with value '"..tostring(bJ.length).."' has been ignored."end;if bJ.direction then aP=aP.." The 'direction' property with value '"..tostring(bJ.direction).."' has been ignored."end;print(aP)end;bJ.length=nil;bJ.direction=nil end end;local draw=false;for G,h in pairs(bJ)do local as="Set"..string.ucfirst(G)if Draw.LineRenderer[as]~=nil then draw=true;if as=="SetDirection"then Draw.LineRenderer[as](ca,h,nil,false)else Draw.LineRenderer[as](ca,h,false)end else ca[G]=h end end;if draw then ca:Draw()end end;eS["Draw.LineRenderer.Draw"]={eT}function Draw.LineRenderer.Draw(ca)ca.gameObject.transform:LookAt(ca._endPosition)ca.gameObject.transform:SetLocalScale(Vector3:New(ca._width,ca._width,ca._length))Daneel.Event.Fire(ca,"OnDraw",ca)end;eS["Draw.LineRenderer.SetEndPosition"]={eT,{"endPosition",a0},eV}function Draw.LineRenderer.SetEndPosition(ca,eW,draw)ca._endPosition=eW;ca._direction=ca._endPosition-ca.origin;ca._length=ca._direction:Length()if draw==nil or draw then ca:Draw()end end;eS["Draw.LineRenderer.GetEndPosition"]={eT}function Draw.LineRenderer.GetEndPosition(ca)return ca._endPosition end;eS["Draw.LineRenderer.SetLength"]={eT,{"length",ax},eV}function Draw.LineRenderer.SetLength(ca,K,draw)ca._length=K;ca._endPosition=ca.origin+ca._direction*K;if draw==nil or draw then ca:Draw()end end;eS["Draw.LineRenderer.GetLength"]={eT}function Draw.LineRenderer.GetLength(ca)return ca._length end;eS["Draw.LineRenderer.SetWidth"]={eT,{"direction",a0},{"useDirectionAsLength",d,defaultValue=false},eV}function Draw.LineRenderer.SetDirection(ca,ei,eX,draw)ca._direction=ei:Normalized()if eX then ca._length=ei:Length()end;ca._endPosition=ca.origin+ca._direction*ca._length;if draw==nil or draw then ca:Draw()end end;eS["Draw.LineRenderer.GetDirection"]={eT}function Draw.LineRenderer.GetDirection(ca)return ca._direction end;eS["Draw.LineRenderer.SetWidth"]={eT,{"width",ax},eV}function Draw.LineRenderer.SetWidth(ca,cI,draw)ca._width=cI;if draw==nil or draw then ca:Draw()end end;eS["Draw.LineRenderer.GetWidth"]={eT}function Draw.LineRenderer.GetWidth(ca)return ca._width end;Draw.CircleRenderer={}eS["Draw.CircleRenderer.New"]={bj,cd}function Draw.CircleRenderer.New(aX,bJ)local eY={gameObject=aX,origin=aX.transform:GetPosition(),segments={},_segmentCount=6,_radius=1,_width=1,_model=nil}eY._endPosition=eY.origin;aX.circleRenderer=eY;if bJ.model==nil and aX.modelRenderer~=nil then bJ.model=aX.modelRenderer:GetModel()aX.modelRenderer:SetModel(nil)end;setmetatable(eY,Draw.CircleRenderer)eY:Set(table.merge(Draw.Config.circleRenderer,bJ))return eY end;eS["Draw.CircleRenderer.Set"]={eU,cd}function Draw.CircleRenderer.Set(eY,bJ)local draw=false;for G,h in pairs(bJ)do local as="Set"..string.ucfirst(G)if Draw.CircleRenderer[as]~=nil then draw=true;Draw.CircleRenderer[as](eY,h,false)else eY[G]=h end end;if draw then eY:Draw()end end;eS["Draw.CircleRenderer.Draw"]={eU}function Draw.CircleRenderer.Draw(eY)local eM=2*math.pi/eY._segmentCount;local g=-eM;local eZ=eY:GetId()for p=1,eY._segmentCount do g=g+eM;local e_=Vector3:New(eY._radius*math.cos(g),eY._radius*math.sin(g),0)if eY.segments[p]==nil then local f0=CS.CreateGameObject("Circle "..eZ.." Segment "..p,eY.gameObject)f0:CreateComponent("ModelRenderer")if eY._model~=nil then f0.modelRenderer:SetModel(eY._model)end;table.insert(eY.segments,p,f0)end;eY.segments[p].transform:SetLocalPosition(e_)end;while#eY.segments>eY._segmentCount do table.remove(eY.segments):Destroy()end;local f1=eY.segments[1].transform:GetPosition()local f2=Vector3.Distance(f1,eY.segments[2].transform:GetPosition())for p,f3 in ipairs(eY.segments)do if eY.segments[p+1]~=nil then f3.transform:LookAt(eY.segments[p+1].transform:GetPosition())else f3.transform:LookAt(f1)end;f3.transform:SetLocalScale(Vector3:New(eY._width,eY._width,f2))end;Daneel.Event.Fire(eY,"OnDraw",eY)end;eS["Draw.CircleRenderer.SetRadius"]={eU,{"radius",ax},eV}function Draw.CircleRenderer.SetRadius(eY,f4,draw)eY._radius=f4;if draw==nil or draw then eY:Draw()end end;eS["Draw.CircleRenderer.GetRadius"]={eU}function Draw.CircleRenderer.GetRadius(eY)return eY._radius end;eS["Draw.CircleRenderer.SetSegmentCount"]={eU,{"count",ax},eV}function Draw.CircleRenderer.SetSegmentCount(eY,f5,draw)if f5<3 then f5=3 end;if eY._segmentCount~=f5 then eY._segmentCount=f5;if draw==nil or draw then eY:Draw()end end end;eS["Draw.CircleRenderer.GetSegmentCount"]={eU}function Draw.CircleRenderer.GetSegmentCount(eY)return eY._segmentCount end;eS["Draw.CircleRenderer.SetWidth"]={eU,{"width",ax}}function Draw.CircleRenderer.SetWidth(eY,cI)if eY._width~=cI then eY._width=cI;if#eY.segments>0 and draw then local f6=Vector3:New(eY._width,eY._width,eY.segments[1].transform:GetLocalScale().z)for p,ca in pairs(eY.segments)do ca.transform:SetLocalScale(f6)end end end end;eS["Draw.CircleRenderer.GetWidth"]={eU}function Draw.CircleRenderer.GetWidth(eY)return eY._width end;eS["Draw.CircleRenderer.SetModel"]={eU,{"model",{"string","Model"},isOptional=true}}function Draw.CircleRenderer.SetModel(eY,cv)if eY._model~=cv then if type(cv)=="sting"and eY._model~=nil and eY._model:GetPath()==cv then return end;if cv~=nil then eY._model=Asset.Get(cv,"Model",true)else eY._model=nil end;for p,ca in pairs(eY.segments)do ca.modelRenderer:SetModel(eY._model)end end end;eS["Draw.CircleRenderer.GetModel"]={eU}function Draw.CircleRenderer.GetModel(eY)return eY._model end;eS["Draw.CircleRenderer.SetOpacity"]={eU,{"opacity","number"}}function Draw.CircleRenderer.SetOpacity(eY,en)for p=1,#cicle.segments do eY.segments[p].modelRenderer:SetOpacity(en)end end;eS["Draw.CircleRenderer.GetOpacity"]={eU}function Draw.CircleRenderer.GetOpacity(eY)if eY.segments[1]~=nil then return eY.segments[1].modelRenderer:GetOpacity()end;return nil end;table.mergein(Daneel.Debug.functionArgumentsInfo,eS)function Draw.DefaultConfig()local bk={lineRenderer={direction=Vector3:Left(),length=2,width=0.1},circleRenderer={segmentCount=6,radius=1,width=1,model=nil},componentObjectsByType={LineRenderer=Draw.LineRenderer,CircleRenderer=Draw.CircleRenderer},propertiesByComponentName={lineRenderer={"length","endPosition","direction","width"},circleRenderer={"radius","segmentCount","direction","width","opacity"}}}return bk end;Draw.Config=Draw.DefaultConfig()function Draw.Load()if Daneel.modules.Tween then table.mergein(Tween.Config.propertiesByComponentName,Draw.Config.propertiesByComponentName)end end;Color={}ColorMT={__call=function(an,...)return an.New(...)end,__index=function(av,G)local f7=Color.colorsByName[G:lower()]if f7~=nil then return Color.New(f7)end end}setmetatable(Color,ColorMT)function Color.__index(f8,G)local f9={"r","g","b"}G=f9[G]or G;return Color[G]or f8["_"..G]or rawget(f8,G)end;function Color.__newindex(f8,G,h)local f9={"r","g","b"}G=f9[G]or G;if G=="r"or G=="g"or G=="b"then f8["_"..G]=math.round(math.clamp(tonumber(h),0,255),0)else rawset(f8,G,h)end end;function Color.__tostring(f8)local n="Color: { r="..f8._r..", g="..f8._g..", b="..f8._b..", hex="..f8:GetHex()local aZ=f8:GetName()if aZ~=nil then n=n..", name='"..aZ.."'"end;return n.." }"end;function Color.New(q,fa,d)local f8=setmetatable({},Color)if type(q)=="string"and fa==nil then local fb=Color[q]if fb~=nil then return fb else f8:SetHex(q)end else if type(q)=="table"then if q.r~=nil then fa=q.g;d=q.b;q=q.r elseif q.x~=nil then fa=q.y;d=q.z;q=q.x elseif#q==3 then fa=q[2]d=q[3]q=q[1]end end;f8.r=q or 0;f8.g=fa or f8._r;f8.b=d or f8._g end;return f8 end;Color.colorsByName={red={255,0,0},green={0,255,0},blue={0,0,255},yellow={255,255,0},cyan={0,255,255},magenta={255,0,255},white={255,255,255},black={0,0,0}}for aZ,f7 in pairs(Color.colorsByName)do Color.colorsByName[aZ]=Color.New(f7)end;function Color.GetName(f8)for aZ,f7 in pairs(Color.colorsByName)do if type(f7)=="string"then f7={Color.HexToRGB(f7)}end;if f8._r==f7[1]and f8._g==f7[2]and f8._b==f7[3]then return aZ end end end;function Color.ToArray(f8)return{f8._r,f8._g,f8._b}end;function Color.ToRGB(f8)return{r=f8._r,g=f8._g,b=f8._b}end;function Color.ToVector3(f8)return Vector3:New(f8._r,f8._g,f8._b)end;function Color.ToString(f8)return f8._r.." "..f8._g.." "..f8._b end;function string.tocolor(fc)local f8=Color.New(0)local f9={"b","g","r"}for w in string.gmatch(fc,"[0-9]+")do f8[table.remove(f9)]=tonumber(w)end;return f8 end;function Color.RGBToHex(q,fa,d)local f7=Color.New(q,fa,d):ToArray()local fd=""for G=1,3 do local h=f7[G]local fe=''while h>0 do local ae=math.fmod(h,16)+1;h=math.floor(h/16)fe=string.sub('0123456789ABCDEF',ae,ae)..fe end;if string.len(fe)==0 then fe='00'elseif string.len(fe)==1 then fe='0'..fe end;fd=fd..fe end;return fd end;function Color.GetHex(f8)return Color.RGBToHex(f8)end;function Color.HexToRGB(fe)fe=fe:gsub("#",""):gsub("0x",""):gsub("0X","")return tonumber("0x"..fe:sub(1,2)),tonumber("0x"..fe:sub(3,4)),tonumber("0x"..fe:sub(5,6))end;function Color.SetHex(f8,fe)local ff={Color.HexToRGB(fe)}for p=1,3 do f8[p]=ff[p]end end;function Color.GetHSV(f8)local q,fa,d=f8._r/255,f8._g/255,f8._b/255;local m,l=math.max(q,fa,d),math.min(q,fa,d)local fg,n,a0;a0=m;local fh=m-l;if m==0 then n=0 else n=fh/m end;if m==l then fg=0 else if m==q then fg=(fa-d)/fh;if fa<d then fg=fg+6 end elseif m==fa then fg=(d-q)/fh+2 elseif m==d then fg=(q-fa)/fh+4 end;fg=fg/6 end;return fg,n,a0 end;function Color.__eq(c,d)return c._r==d._r and c._g==d._g and c._b==d._b end;function Color.__add(c,d)return Color.New(c._r+d._r,c._g+d._g,c._b+d._b)end;function Color.__sub(c,d)return Color.New(c._r-d._r,c._g-d._g,c._b-d._b)end;function Color.__mul(c,d)local f8=Color.New(0)if type(c)=="table"and type(d)=="number"then f8.r=c._r*d;f8.g=c._g*d;f8.b=c._b*d elseif type(c)=="number"and type(d)=="table"then f8.r=c*d._r;f8.g=c*d._g;f8.b=c*d._b elseif type(c)=="table"and type(d)=="table"then f8.r=c._r*d._r;f8.g=c._g*d._g;f8.b=c._b*d._b end;return f8 end;function Color.__div(c,d)local f8=Color.New(0)if type(c)=="table"and type(d)=="number"then f8.r=c._r/d;f8.g=c._g/d;f8.b=c._b/d elseif type(c)=="number"and type(d)=="table"then f8.r=c/d._r;f8.g=c/d._g;f8.b=c/d._b elseif type(c)=="table"and type(d)=="table"then f8.r=c._r/d._r;f8.g=c._g/d._g;f8.b=c._b/d._b end;return f8 end;function Color._resolve(fi)local fj=Color.New(0)local fk=Color.New(0)for cW,h in pairs(fi:ToRGB())do if h~=255 and h>=127.5 then fj[cW]=255;fk[cW]=0 elseif h~=0 and h<127.5 then fj[cW]=0;fk[cW]=255 else fj[cW]=h;fk[cW]=h end end;if fk==fj then fk=nil end;local fl=fj;local fm=0;if fk~=nil then fm=Color._getFrontOpacity(fj,fk,fi)fl=Color.New((fk:ToVector3()-fj:ToVector3())*fm+fj:ToVector3())if fl~=fi then print("Color._resolve(): Sorry, can't resolve target color [1], getting [2] instead",fi,fl)end end;return fj,fk,fm,fl end;function Color._getFrontOpacity(fj,fk,fi)local cW=nil;local f9={"r","g","b"}for p=1,3 do local fn=f9[p]if fk[fn]~=fj[fn]then cW=fn;break end end;if cW~=nil then return math.round((fi[cW]-fj[cW])/fk[cW]-fj[cW],3)else print("Color._getFrontOpacity(): can't calculate opacity because no suitable component was found",fj,fk,fi)return 1 end end;Color.colorAssetsFolder="Colors/"function Color._getAsset(f8,bq,fo)if not string.endswith(Color.colorAssetsFolder,"/")then Color.colorAssetsFolder=Color.colorAssetsFolder.."/"end;fo=fo or Color.colorAssetsFolder;local aZ=f8:GetName()if aZ==nil then if Daneel.Config.debug.enableDebug==true then print("Color._getAsset(): Can't find the name of the provided color",f8,"It must be set in the Color.colorsByName table.")end;return nil end;local ci=fo..aZ;local bs=CS.FindAsset(ci,bq)if bs==nil then ci=fo..string.ucfirst(aZ)bs=CS.FindAsset(ci,bq)end;if bs==nil and Daneel.Config.debug.enableDebug==true then print("Color._getAsset(): Could not find asset of type '"..bq.."' at path '"..ci.."' for ",f8)end;return bs end;function Color._setColor(dw,f8)local fp,bq,fq,fr;local aL=getmetatable(dw)if aL==ModelRenderer then fp="ModelRenderer"bq="Model"fq=ModelRenderer.SetModel;fr=ModelRenderer.GetModel elseif aL==TextRenderer then fp="TextRenderer"bq="Font"fq=TextRenderer.SetFont;fr=TextRenderer.GetFont end;local fj,fk,fm=f8:_resolve()local aX=dw.gameObject;local fs=aX.frontColorRenderer;local fo=nil;local ft=fr(dw)if ft~=nil then fo=ft:GetPath():gsub(ft.name,"")end;local fu=fj:_getAsset(bq,fo)if ft~=fu then fq(dw,fu)end;if fs==nil and fk~=nil then fs=aX:CreateComponent(fp)aX[string.lcfirst(fp)]=dw;aX.frontColorRenderer=fs;if fp=="TextRenderer"then fs:SetAlignment(dw:GetAlignment())end end;if fs~=nil then if fk~=nil then local fu=fk:_getAsset(bq,fo)local ft=fr(fs)if ft~=fu then fq(fs,fu)end end;fs.Fo=fm;fs:SetOpacity(fm*dw:GetOpacity())end end;function ModelRenderer.SetColor(ct,f8)Color._setColor(ct,f8)end;function TextRenderer.SetColor(cD,f8)Color._setColor(cD,f8)end;local fv=TextRenderer.SetText;function TextRenderer.SetText(cD,aP)fv(cD,aP)local fs=cD.gameObject.frontColorRenderer;if fs~=nil then fv(fs,aP)end end;local fw=TextRenderer.SetAlignment;function TextRenderer.SetAlignment(cD,cG)fw(cD,cG)local fs=cD.gameObject.frontColorRenderer;if fs~=nil then fw(fs,cG)end end;function Color._setOpacity(dw,en)dw:oSetOpacity(en)local fs=dw.gameObject.frontColorRenderer;if fs~=nil and dw~=fs then local fm=fs.Fo or 1;fs:oSetOpacity(fm*en)end end;ModelRenderer.oSetOpacity=ModelRenderer.SetOpacity;ModelRenderer.SetOpacity=Color._setOpacity;TextRenderer.oSetOpacity=TextRenderer.SetOpacity;TextRenderer.SetOpacity=Color._setOpacity;function Color._getColor(dw)local fp,fr;local aL=getmetatable(dw)if aL==ModelRenderer then fp="ModelRenderer"fr=ModelRenderer.GetModel elseif aL==TextRenderer then fp="TextRenderer"fr=TextRenderer.GetFont end;local fj,fk,fl;local bs=fr(dw)if bs~=nil then fj=Color[bs:GetName()]end;local fs=dw.gameObject.frontColorRenderer;local fm=1;if fs~=nil and fj~=nil then fm=fs.Fo or 1;local bs=fr(fs)if bs~=nil then fk=Color[bs:GetName()]end end;if fj~=nil then if fk~=nil then fl=Color.New((fk:ToVector3()-fj:ToVector3())*fm+fj:ToVector3())else fl=fj end end;return fl end;function ModelRenderer.GetColor(ct)return Color._getColor(ct)end;function TextRenderer.GetColor(cD)return Color._getColor(cD)end;Color.Pattern={DesaturedPlainColor=1,DeValuedPlainColor=2,Any0255=3,["21128"]=4,["0128"]=5}Color.PatternsById={}for aZ,aw in pairs(Color.Pattern)do Color.PatternsById[aw]=aZ end;function Color.GetRandom(k)k=k or math.random(#Color.PatternsById)local fx=table.copy(Color.colorsByName)fx.black=nil;fx=table.getvalues(fx)local f8=Color.New(0)if k==1 then local fy=Color.New(fx[math.random(#fx)])f8=fy+Color.New(math.random(0,255))elseif k==2 then local fy=Color.New(fx[math.random(#fx)])f8=fy-Color.New(math.random(0,255))elseif k==3 then local X={0,255,math.random(0,255)}for p=1,3 do f8[p]=table.remove(X,math.random(#X))end elseif k==4 then local l=math.random(0,128)local m=255-l;local fz=l;if math.random(2)==1 then fz=m end;local X={l,m,fz}for p=1,3 do f8[p]=table.remove(X,math.random(#X))end elseif k==5 then local l=math.random(0,128)local m=255-l;local fz=0;if math.random(2)==1 then fz=255 end;local X={l,m,fz}for p=1,3 do f8[p]=table.remove(X,math.random(#X))end end;return f8 end;Tween={}local function fA(em)if em.target~=nil then Daneel.Debug.StackTrace.BeginFunction("GetTweenerProperty",em)local h=nil;h=em.target[em.property]if h==nil then local b5="Get"..string.ucfirst(em.property)if em.target[b5]~=nil then h=em.target[b5](em.target)end end;Daneel.Debug.StackTrace.EndFunction()return h end end;local function fB(em,h)if em.target~=nil then Daneel.Debug.StackTrace.BeginFunction("SetTweenerProperty",em,h)if em.valueType=="string"then if type(h)=="number"and h>=#em.stringValue+1 then local fC=em.startStringValue..em.endStringValue:sub(1,h)if fC~=em.stringValue then em.stringValue=fC;h=fC else return end else return end end;if em.target[em.property]==nil then local b5="Set"..string.ucfirst(em.property)if em.target[b5]~=nil then em.target[b5](em.target,em.property)end else em.target[em.property]=h end;Daneel.Debug.StackTrace.EndFunction()end end;Tween.Tweener={tweeners={}}Tween.Tweener.__index=Tween.Tweener;setmetatable(Tween.Tweener,{__call=function(an,...)return an.New(...)end})function Tween.Tweener.__tostring(em)return"Tweener: "..em.id end;function Tween.Tweener.New(fD,a1,fE,fF,fG,bJ)Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.New",fD,a1,fE,fF,bJ)local aG="Tween.Tweener.New(target, property, endValue, duration[, params]) : "local em=table.copy(Tween.Config.tweener)setmetatable(em,Tween.Tweener)em.id=Daneel.Utilities.GetId()local fH=type(fD)local aL=nil;if fH=="table"then aL=getmetatable(fD)end;if fH=="number"or fH=="string"or aL==Vector2 or aL==Vector3 then bJ=fG;fG=fF;fF=fE;fE=a1;local fI=fD;aG="Tween.Tweener.New(startValue, endValue, duration[, onCompleteCallback, params]) : "Daneel.Debug.CheckArgType(fF,"duration","number",aG)if type(fG)=="table"then bJ=fG;fG=nil end;Daneel.Debug.CheckOptionalArgType(fG,"onCompleteCallback","function",aG)Daneel.Debug.CheckOptionalArgType(bJ,"params","table",aG)em.startValue=fI;em.endValue=fE;em.duration=fF;if fG~=nil then em.OnComplete=fG end;if bJ~=nil then em:Set(bJ)end elseif a1==nil then Daneel.Debug.CheckArgType(fD,"params","table",aG)aG="Tween.Tweener.New(params) : "em:Set(fD)else Daneel.Debug.CheckArgType(fD,"target","table",aG)Daneel.Debug.CheckArgType(a1,"property","string",aG)Daneel.Debug.CheckArgType(fF,"duration","number",aG)if type(fG)=="table"then bJ=fG;fG=nil end;Daneel.Debug.CheckOptionalArgType(fG,"onCompleteCallback","function",aG)Daneel.Debug.CheckOptionalArgType(bJ,"params","table",aG)em.target=fD;em.property=a1;em.endValue=fE;em.duration=fF;if fG~=nil then em.OnComplete=fG end;if bJ~=nil then em:Set(bJ)end end;if em.endValue==nil then error("Tween.Tweener.New(): 'endValue' property is nil for tweener: "..tostring(em))end;if em.startValue==nil then em.startValue=fA(em)end;if em.target~=nil then em.gameObject=em.target.gameObject end;em.valueType=Daneel.Debug.GetType(em.startValue)if em.valueType=="string"then em.startStringValue=em.startValue;em.stringValue=em.startStringValue;em.endStringValue=em.endValue;em.startValue=1;em.endValue=#em.endStringValue end;Tween.Tweener.tweeners[em.id]=em;Daneel.Debug.StackTrace.EndFunction()return em end;function Tween.Tweener.Set(em,bJ)Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.Set",em,bJ)local aG="Tween.Tweener.Set(tweener, params) : "Daneel.Debug.CheckArgType(em,"tweener","Tween.Tweener",aG)for G,h in pairs(bJ)do em[G]=h end;Daneel.Debug.StackTrace.EndFunction()return em end;function Tween.Tweener.Play(em)if em.isEnabled==false then return end;Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.Play",em)local aG="Tween.Tweener.Play(tweener) : "Daneel.Debug.CheckArgType(em,"tweener","Tween.Tweener",aG)em.isPaused=false;Daneel.Event.Fire(em,"OnPlay",em)Daneel.Debug.StackTrace.EndFunction()end;function Tween.Tweener.Pause(em)if em.isEnabled==false then return end;Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.Pause",em)local aG="Tween.Tweener.Pause(tweener) : "Daneel.Debug.CheckArgType(em,"tweener","Tween.Tweener",aG)em.isPaused=true;Daneel.Event.Fire(em,"OnPause",em)Daneel.Debug.StackTrace.EndFunction()end;function Tween.Tweener.Restart(em)if em.isEnabled==false then return end;Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.Restart",em)local aG="Tween.Tweener.Restart(tweener) : "Daneel.Debug.CheckArgType(em,"tweener","Tween.Tweener",aG)em.elapsed=0;em.fullElapsed=0;em.elapsedDelay=0;em.completedLoops=0;em.isCompleted=false;em.hasStarted=false;local fI=em.startValue;if em.loopType=="yoyo"and em.completedLoops%2~=0 then fI=em.endValue end;if em.target~=nil then fB(em,fI)end;em.value=fI;Daneel.Debug.StackTrace.EndFunction()end;function Tween.Tweener.Complete(em)if em.isEnabled==false or em.loops==-1 then return end;Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.Complete",em)local aG="Tween.Tweener.Complete( tweener ) : "Daneel.Debug.CheckArgType(em,"tweener","Tween.Tweener",aG)em.isCompleted=true;local fE=em.endValue;if em.loopType=="yoyo"then if em.loops%2==0 and em.completedLoops%2==0 then fE=em.startValue elseif em.loops%2~=0 and em.completedLoops%2~=0 then fE=em.startValue end end;if em.target~=nil then fB(em,fE)end;em.value=fE;Daneel.Event.Fire(em,"OnComplete",em)if em.destroyOnComplete then em:Destroy()end;Daneel.Debug.StackTrace.EndFunction()end;local function fJ(aX)return aX.isDestroyed==true or aX.inner==nil end;function Tween.Tweener.IsTargetDestroyed(em)if em.target~=nil then if em.target.isDestroyed then return true end;if em.target.gameObject~=nil and fJ(em.target.gameObject)then return true end end;if em.gameObject~=nil and fJ(em.gameObject)then return true end;return false end;function Tween.Tweener.Destroy(em)Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.Destroy",em)local aG="Tween.Tweener.Destroy( tweener ) : "Daneel.Debug.CheckArgType(em,"tweener","Tween.Tweener",aG)em.isEnabled=false;em.isPaused=true;em.target=nil;em.duration=0;Tween.Tweener.tweeners[em.id]=nil;CraftStudio.Destroy(em)Daneel.Debug.StackTrace.EndFunction()end;function Tween.Tweener.Update(em,fK)if em.isEnabled==false then return end;Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.Update",em,fK)local aG="Tween.Tweener.Update(tweener[, deltaDuration]) : "Daneel.Debug.CheckArgType(em,"tweener","Tween.Tweener",aG)Daneel.Debug.CheckArgType(fK,"deltaDuration","number",aG)if Tween.Ease[em.easeType]==nil then if Daneel.Config.debug.enableDebug then print("Tween.Tweener.Update() : Easing '"..tostring(em.easeType).."' for tweener ID '"..tween.id.."' does not exists. Setting it back for the default easing '"..Tween.Config.tweener.easeType.."'.")end;em.easeType=Tween.Config.tweener.easeType end;if fK~=nil then em.elapsed=em.elapsed+fK;em.fullElapsed=em.fullElapsed+fK end;local h=nil;if em.elapsed>em.duration then em.isCompleted=true;em.elapsed=em.duration;if em.isRelative==true then h=em.startValue+em.endValue else h=em.endValue end else if em.valueType=="Vector3"then h=Vector3:New(Tween.Ease[em.easeType](em.elapsed,em.startValue.x,em.diffValue.x,em.duration),Tween.Ease[em.easeType](em.elapsed,em.startValue.y,em.diffValue.y,em.duration),Tween.Ease[em.easeType](em.elapsed,em.startValue.z,em.diffValue.z,em.duration))elseif em.valueType=="Vector2"then h=Vector2.New(Tween.Ease[em.easeType](em.elapsed,em.startValue.x,em.diffValue.x,em.duration),Tween.Ease[em.easeType](em.elapsed,em.startValue.y,em.diffValue.y,em.duration))else h=Tween.Ease[em.easeType](em.elapsed,em.startValue,em.diffValue,em.duration)end end;if em.target~=nil then fB(em,h)end;em.value=h;Daneel.Event.Fire(em,"OnUpdate",em)Daneel.Debug.StackTrace.EndFunction()end;Tween.Timer={}Tween.Timer.__index=Tween.Tweener;setmetatable(Tween.Timer,{__call=function(an,...)return an.New(...)end})function Tween.Timer.New(fF,cj,fL,bJ)Daneel.Debug.StackTrace.BeginFunction("Tween.Timer.New",fF,cj,fL,bJ)local aG="Tween.Timer.New( duration, callback[, isInfiniteLoop, params] ) : "if type(fL)=="table"then bJ=fL;aG="Tween.Timer.New( duration, callback[, params] ) : "end;Daneel.Debug.CheckArgType(fF,"duration","number",aG)Daneel.Debug.CheckArgType(cj,"callback",{"function","userdata"},aG)Daneel.Debug.CheckOptionalArgType(bJ,"params","table",aG)local em=table.copy(Tween.Config.tweener)setmetatable(em,Tween.Tweener)em.id=Daneel.Utilities.GetId()em.startValue=fF;em.endValue=0;em.duration=fF;if fL==true then em.loops=-1;em.OnLoopComplete=cj else em.OnComplete=cj end;if bJ~=nil then em:Set(bJ)end;Tween.Tweener.tweeners[em.id]=em;Daneel.Debug.StackTrace.EndFunction()return em end;Daneel.modules.Tween=Tween;function Tween.DefaultConfig()local bk={tweener={isEnabled=true,isPaused=false,delay=0.0,duration=0.0,durationType="time",startValue=nil,endValue=0.0,loops=0,loopType="simple",easeType="linear",isRelative=false,destroyOnComplete=true,destroyOnSceneLoad=true,updateInterval=1,Id=-1,hasStarted=false,isCompleted=false,elapsed=0,fullElapsed=0,elapsedDelay=0,completedLoops=0,diffValue=0.0,value=0.0,frameCount=0},objectsByType={["Tween.Tweener"]=Tween.Tweener},propertiesByComponentName={transform={"scale","localScale","position","localPosition","eulerAngles","localEulerAngles"},modelRenderer={"opacity"},mapRenderer={"opacity"},textRenderer={"text","opacity"},camera={"fov"}}}return bk end;Tween.Config=Tween.DefaultConfig()function Tween.Awake()local o={}for fM,fN in pairs(Tween.Config.propertiesByComponentName)do for p=1,#fN do local a1=fN[p]o[a1]=o[a1]or{}table.insert(o[a1],fM)end end;Tween.Config.componentNamesByProperty=o;for aw,em in pairs(Tween.Tweener.tweeners)do if em.destroyOnSceneLoad then em:Destroy()end end end;function Tween.Update()for aw,em in pairs(Tween.Tweener.tweeners)do if em:IsTargetDestroyed()then em:Destroy()end;if em.isEnabled==true and em.isPaused==false and em.isCompleted==false and em.duration>0 then em.frameCount=em.frameCount+1;if em.frameCount%em.updateInterval==0 then local fK=Daneel.Time.deltaTime*em.updateInterval;if em.durationType=="realTime"then fK=Daneel.Time.realDeltaTime*em.updateInterval elseif em.durationType=="frame"then fK=em.updateInterval end;if fK>0 then if em.elapsedDelay>=em.delay then if em.hasStarted==false then em.hasStarted=true;if em.startValue==nil then if em.target~=nil then em.startValue=fA(em)else error("Tween.Update() : startValue is nil but no target is set for tweener: "..tostring(em))end elseif em.target~=nil then fB(em,em.startValue)end;em.value=em.startValue;if em.isRelative==true then em.diffValue=em.endValue else em.diffValue=em.endValue-em.startValue end;Daneel.Event.Fire(em,"OnStart",em)end;em:Update(fK)else em.elapsedDelay=em.elapsedDelay+fK end;if em.isCompleted==true then em.completedLoops=em.completedLoops+1;if em.loops==-1 or em.completedLoops<em.loops then em.isCompleted=false;em.elapsed=0;if em.loopType:lower()=="yoyo"then local fI=em.startValue;if em.isRelative then em.startValue=em.value;em.endValue=-em.endValue;em.diffValue=em.endValue else em.startValue=em.endValue;em.endValue=fI;em.diffValue=-em.diffValue end elseif em.target~=nil then fB(em,em.startValue)end;em.value=em.startValue;Daneel.Event.Fire(em,"OnLoopComplete",em)else Daneel.Event.Fire(em,"OnComplete",em)if em.destroyOnComplete and em.Destroy~=nil then em:Destroy()end end end end end end end end;local function fO(aX,a1)local bp=nil;if(a1=="position"or a1=="localPosition")and GUI~=nil and GUI.Hud~=nil and aX.hud~=nil then bp=aX.hud elseif a1=="text"and GUI~=nil and GUI.TextArea~=nil and aX.textArea~=nil then bp=aX.textArea else local fP=Tween.Config.componentNamesByProperty[a1]if fP~=nil then for p=1,#fP do bp=aX[fP[p]]if bp~=nil then break end end end end;if bp==nil then error("Tween: resolveTarget(): Couldn't resolve the target for property '"..a1 .."' and gameObject: "..tostring(aX))end;return bp end;function GameObject.Animate(aX,a1,fE,fF,fG,bJ)local bp=nil;if type(fG)=="table"and bJ==nil then bJ=fG;fG=nil end;if bJ~=nil and bJ.target~=nil then bp=bJ.target else bp=fO(aX,a1)end;return Tween.Tweener.New(bp,a1,fE,fF,fG,bJ)end
-- Easing equations
-- From Emmanuel Oga's easing equations : https://github.com/EmmanuelOga/easing

--
-- Adapted from
-- Tweener's easing functions (Penner's Easing Equations)
-- and http://code.google.com/p/tweener/ (jstweener javascript version)
--

--[[
Disclaimer for Robert Penner's Easing Equations license:

TERMS OF USE - EASING EQUATIONS

Open source under the BSD License.

Copyright © 2001 Robert Penner
All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
* Neither the name of the author nor the names of contributors may be used to endorse or promote products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
]]

-- For all easing functions:
-- t = elapsed time
-- b = begin
-- c = change == ending - beginning
-- d = duration (total time)

local pow = math.pow
local sin = math.sin
local cos = math.cos
local pi = math.pi
local sqrt = math.sqrt
local abs = math.abs
local asin = math.asin

local function linear(t, b, c, d)
  return c * t / d + b
end

local function inQuad(t, b, c, d)
  t = t / d
  return c * pow(t, 2) + b
end

local function outQuad(t, b, c, d)
  t = t / d
  return -c * t * (t - 2) + b
end

local function inOutQuad(t, b, c, d)
  t = t / d * 2
  if t < 1 then
    return c / 2 * pow(t, 2) + b
  else
    return -c / 2 * ((t - 1) * (t - 3) - 1) + b
  end
end

local function outInQuad(t, b, c, d)
  if t < d / 2 then
    return outQuad (t * 2, b, c / 2, d)
  else
    return inQuad((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inCubic (t, b, c, d)
  t = t / d
  return c * pow(t, 3) + b
end

local function outCubic(t, b, c, d)
  t = t / d - 1
  return c * (pow(t, 3) + 1) + b
end

local function inOutCubic(t, b, c, d)
  t = t / d * 2
  if t < 1 then
    return c / 2 * t * t * t + b
  else
    t = t - 2
    return c / 2 * (t * t * t + 2) + b
  end
end

local function outInCubic(t, b, c, d)
  if t < d / 2 then
    return outCubic(t * 2, b, c / 2, d)
  else
    return inCubic((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inQuart(t, b, c, d)
  t = t / d
  return c * pow(t, 4) + b
end

local function outQuart(t, b, c, d)
  t = t / d - 1
  return -c * (pow(t, 4) - 1) + b
end

local function inOutQuart(t, b, c, d)
  t = t / d * 2
  if t < 1 then
    return c / 2 * pow(t, 4) + b
  else
    t = t - 2
    return -c / 2 * (pow(t, 4) - 2) + b
  end
end

local function outInQuart(t, b, c, d)
  if t < d / 2 then
    return outQuart(t * 2, b, c / 2, d)
  else
    return inQuart((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inQuint(t, b, c, d)
  t = t / d
  return c * pow(t, 5) + b
end

local function outQuint(t, b, c, d)
  t = t / d - 1
  return c * (pow(t, 5) + 1) + b
end

local function inOutQuint(t, b, c, d)
  t = t / d * 2
  if t < 1 then
    return c / 2 * pow(t, 5) + b
  else
    t = t - 2
    return c / 2 * (pow(t, 5) + 2) + b
  end
end

local function outInQuint(t, b, c, d)
  if t < d / 2 then
    return outQuint(t * 2, b, c / 2, d)
  else
    return inQuint((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inSine(t, b, c, d)
  return -c * cos(t / d * (pi / 2)) + c + b
end

local function outSine(t, b, c, d)
  return c * sin(t / d * (pi / 2)) + b
end

local function inOutSine(t, b, c, d)
  return -c / 2 * (cos(pi * t / d) - 1) + b
end

local function outInSine(t, b, c, d)
  if t < d / 2 then
    return outSine(t * 2, b, c / 2, d)
  else
    return inSine((t * 2) -d, b + c / 2, c / 2, d)
  end
end

local function inExpo(t, b, c, d)
  if t == 0 then
    return b
  else
    return c * pow(2, 10 * (t / d - 1)) + b - c * 0.001
  end
end

local function outExpo(t, b, c, d)
  if t == d then
    return b + c
  else
    return c * 1.001 * (-pow(2, -10 * t / d) + 1) + b
  end
end

local function inOutExpo(t, b, c, d)
  if t == 0 then return b end
  if t == d then return b + c end
  t = t / d * 2
  if t < 1 then
    return c / 2 * pow(2, 10 * (t - 1)) + b - c * 0.0005
  else
    t = t - 1
    return c / 2 * 1.0005 * (-pow(2, -10 * t) + 2) + b
  end
end

local function outInExpo(t, b, c, d)
  if t < d / 2 then
    return outExpo(t * 2, b, c / 2, d)
  else
    return inExpo((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inCirc(t, b, c, d)
  t = t / d
  return(-c * (sqrt(1 - pow(t, 2)) - 1) + b)
end

local function outCirc(t, b, c, d)
  t = t / d - 1
  return(c * sqrt(1 - pow(t, 2)) + b)
end

local function inOutCirc(t, b, c, d)
  t = t / d * 2
  if t < 1 then
    return -c / 2 * (sqrt(1 - t * t) - 1) + b
  else
    t = t - 2
    return c / 2 * (sqrt(1 - t * t) + 1) + b
  end
end

local function outInCirc(t, b, c, d)
  if t < d / 2 then
    return outCirc(t * 2, b, c / 2, d)
  else
    return inCirc((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inElastic(t, b, c, d, a, p)
  if t == 0 then return b end

  t = t / d

  if t == 1 then return b + c end

  if not p then p = d * 0.3 end

  local s

  if not a or a < abs(c) then
    a = c
    s = p / 4
  else
    s = p / (2 * pi) * asin(c/a)
  end

  t = t - 1

  return -(a * pow(2, 10 * t) * sin((t * d - s) * (2 * pi) / p)) + b
end

-- a: amplitud
-- p: period
local function outElastic(t, b, c, d, a, p)
  if t == 0 then return b end

  t = t / d

  if t == 1 then return b + c end

  if not p then p = d * 0.3 end

  local s

  if not a or a < abs(c) then
    a = c
    s = p / 4
  else
    s = p / (2 * pi) * asin(c/a)
  end

  return a * pow(2, -10 * t) * sin((t * d - s) * (2 * pi) / p) + c + b
end

-- p = period
-- a = amplitud
local function inOutElastic(t, b, c, d, a, p)
  if t == 0 then return b end

  t = t / d * 2

  if t == 2 then return b + c end

  if not p then p = d * (0.3 * 1.5) end
  if not a then a = 0 end

  if not a or a < abs(c) then
    a = c
    s = p / 4
  else
    s = p / (2 * pi) * asin(c / a)
  end

  if t < 1 then
    t = t - 1
    return -0.5 * (a * pow(2, 10 * t) * sin((t * d - s) * (2 * pi) / p)) + b
  else
    t = t - 1
    return a * pow(2, -10 * t) * sin((t * d - s) * (2 * pi) / p ) * 0.5 + c + b
  end
end

-- a: amplitud
-- p: period
local function outInElastic(t, b, c, d, a, p)
  if t < d / 2 then
    return outElastic(t * 2, b, c / 2, d, a, p)
  else
    return inElastic((t * 2) - d, b + c / 2, c / 2, d, a, p)
  end
end

local function inBack(t, b, c, d, s)
  if not s then s = 1.70158 end
  t = t / d
  return c * t * t * ((s + 1) * t - s) + b
end

local function outBack(t, b, c, d, s)
  if not s then s = 1.70158 end
  t = t / d - 1
  return c * (t * t * ((s + 1) * t + s) + 1) + b
end

local function inOutBack(t, b, c, d, s)
  if not s then s = 1.70158 end
  s = s * 1.525
  t = t / d * 2
  if t < 1 then
    return c / 2 * (t * t * ((s + 1) * t - s)) + b
  else
    t = t - 2
    return c / 2 * (t * t * ((s + 1) * t + s) + 2) + b
  end
end

local function outInBack(t, b, c, d, s)
  if t < d / 2 then
    return outBack(t * 2, b, c / 2, d, s)
  else
    return inBack((t * 2) - d, b + c / 2, c / 2, d, s)
  end
end

local function outBounce(t, b, c, d)
  t = t / d
  if t < 1 / 2.75 then
    return c * (7.5625 * t * t) + b
  elseif t < 2 / 2.75 then
    t = t - (1.5 / 2.75)
    return c * (7.5625 * t * t + 0.75) + b
  elseif t < 2.5 / 2.75 then
    t = t - (2.25 / 2.75)
    return c * (7.5625 * t * t + 0.9375) + b
  else
    t = t - (2.625 / 2.75)
    return c * (7.5625 * t * t + 0.984375) + b
  end
end

local function inBounce(t, b, c, d)
  return c - outBounce(d - t, 0, c, d) + b
end

local function inOutBounce(t, b, c, d)
  if t < d / 2 then
    return inBounce(t * 2, 0, c, d) * 0.5 + b
  else
    return outBounce(t * 2 - d, 0, c, d) * 0.5 + c * .5 + b
  end
end

local function outInBounce(t, b, c, d)
  if t < d / 2 then
    return outBounce(t * 2, b, c / 2, d)
  else
    return inBounce((t * 2) - d, b + c / 2, c / 2, d)
  end
end

-- Modifications for Daneel : replaced 'return {' by 'Tween.Ease = {'
Tween.Ease = {
  linear = linear,
  inQuad = inQuad,
  outQuad = outQuad,
  inOutQuad = inOutQuad,
  outInQuad = outInQuad,
  inCubic = inCubic ,
  outCubic = outCubic,
  inOutCubic = inOutCubic,
  outInCubic = outInCubic,
  inQuart = inQuart,
  outQuart = outQuart,
  inOutQuart = inOutQuart,
  outInQuart = outInQuart,
  inQuint = inQuint,
  outQuint = outQuint,
  inOutQuint = inOutQuint,
  outInQuint = outInQuint,
  inSine = inSine,
  outSine = outSine,
  inOutSine = inOutSine,
  outInSine = outInSine,
  inExpo = inExpo,
  outExpo = outExpo,
  inOutExpo = inOutExpo,
  outInExpo = outInExpo,
  inCirc = inCirc,
  outCirc = outCirc,
  inOutCirc = inOutCirc,
  outInCirc = outInCirc,
  inElastic = inElastic,
  outElastic = outElastic,
  inOutElastic = inOutElastic,
  outInElastic = outInElastic,
  inBack = inBack,
  outBack = outBack,
  inOutBack = inOutBack,
  outInBack = outInBack,
  inBounce = inBounce,
  outBounce = outBounce,
  inOutBounce = inOutBounce,
  outInBounce = outInBounce,
}

