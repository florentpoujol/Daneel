-- Generated on Sun Nov 23 2014 17:32:58 GMT+0100 (Paris, Madrid)

function math.isinteger(a)local b=false;if type(a)=="number"then b=a==math.floor(a)end;return b end;function math.lerp(c,d,e,f)if f=="smooth"then e=e*2;if e<1 then e=0.5*e*e*e else e=e-2;e=0.5*e*e*e+2 end elseif f=="smooth in"then e=e*e*e elseif f=="smooth out"then e=e-1;e=e*e*e+1 end;return c+(d-c)*e end;function math.warpangle(g)if g>180 then g=g-360 elseif g<-180 then g=g+360 end;return g end;function math.round(h,i)if i~=nil then h=math.floor(h*10^i+0.5)/10^i else h=math.floor(h+0.5)end;return h end;function tonumber2(j)local a=tonumber(j)if a==nil then j=tostring(j)local k="(%d+)"if j:find(".",1,true)then k="(%d+%.%d+)"end;a=j:match(j:gsub(k,"(%1)"))a=tonumber(a)end;return a end;function math.clamp(h,l,m)h=math.max(h,l)h=math.min(h,m)return h end;function string.totable(n)local o={}for p=1,#n do table.insert(o,n:sub(p,p))end;return o end;function string.ucfirst(n)local q=n:gsub("^%l",string.upper)return q end;function string.lcfirst(n)local q=n:gsub("^%u",string.lower)return q end;function string.split(n,r,s)local t={}if s then local u,v=n:find(r)if u~=nil then local k=r;r=n:sub(u,v)if string.startswith(n,r)then n=n:sub(#r+1,#n)end;if not n:endswith(r)then n=n..r end;for w in n:gmatch("(.-)"..k)do table.insert(t,w)end end else if n:find(r,1,true)~=nil then if string.startswith(n,r)then n=n:sub(#r+1,#n)end;if not n:endswith(r)then n=n..r end;local x=""local y=string.totable(n)local p=1;while p<=#y do local z=y[p]if z==r or n:sub(p,p-1+#r)==r then table.insert(t,x)x=""p=p+#r else x=x..z;p=p+1 end end;if#x>0 then table.insert(t,x)end end end;if#t==0 then t={n}end;return t end;function string.startswith(n,x)local q=n:sub(1,#x)==x;return q end;function string.endswith(n,x)local q=n:sub(#n-#x+1,#n)==x;return q end;function string.trimstart(n)local q=n:gsub("^%s+","")return q end;function string.trimend(n)local q=n:gsub("%s+$","")return q end;function string.trim(n)local q=n:gsub("^%s+",""):gsub("%s+$","")return q end;function string.reverse(n)local A=""for p=#n,1,-1 do A=A..n:sub(p,p)end;return A end;function string.fixcase(n,B)if type(B)=="string"then B={B}end;local C=n:lower()for p=1,#B do local D=B[p]if C==D:lower()then return D end end end;function table.copy(o,E)local F={}if table.isarray(o)then for G,h in ipairs(o)do if type(h)=="table"and E then h=table.copy(h,E)end;table.insert(F,h)end else for G,h in pairs(o)do if type(h)=="table"and E then h=table.copy(h,E)end;F[G]=h end end;return F end;function table.containsvalue(o,h,H)if h==nil then return false end;if H and type(h)=='string'then h=h:lower()end;for G,I in pairs(o)do if H and type(I)=="string"then I=I:lower()end;if h==I then return true end end;return false end;function table.getlength(o,J)local K=0;if J~=nil then J=J:lower()end;for G,h in pairs(o)do if J==nil or type(G)==J then K=K+1 end end;return K end;function table.print(o)if o==nil then print("table.print( t ) : Provided table is nil.")return end;print("~~~~~ table.print("..tostring(o)..") ~~~~~ Start ~~~~~")local L=pairs;if table.getlength(o)==0 then print("Table is empty.")elseif table.isarray(o)then L=ipairs end;for G,h in L(o)do if type(G)=="string"then G='"'..G..'"'end;if type(h)=="string"then h='"'..h..'"'end;print(G,h)end;print("~~~~~ table.print("..tostring(o)..") ~~~~~ End ~~~~~")end;local M={}function table.rprint(o,N)N=N or""if o==nil then print(N.."table.rprint( t ) : Provided table is nil.")return end;if N==""then print("~~~~~ table.rprint("..tostring(o)..") ~~~~~ Start ~~~~~")end;local L=pairs;if table.getlength(o)==0 then print(N,"Table is empty.")elseif table.isarray(o)then L=ipairs end;for G,h in L(o)do if type(G)=="string"then G='"'..G..'"'end;if type(h)=="string"then h='"'..h..'"'end;if type(h)=="table"and getmetatable(h)==nil then local O=M[h]if O~=nil then print(N..tostring(G),"Already printed table with key "..O..": "..tostring(h))else M[h]=G;print(N..tostring(G),h)table.rprint(h,N.."| - - - ")end else print(N..tostring(G),h)end end;if N==""then print("~~~~~ table.rprint("..tostring(o)..") ~~~~~ End ~~~~~")M={}end end;function table.merge(...)return table.mergein({},...)end;function table.mergein(...)local P={...}local E=false;if#P>0 and type(P[#P])~="table"then E=table.remove(P)end;local Q=table.remove(P,1)if Q==nil then local R="table.mergein(): No table where passed as argument."if#P>0 then table.print(P)R="table.mergein(): First argument is nil. Other arguments are shown above."end;error(R)end;for p,o in ipairs(P)do local S=type(o)if S=="table"then if table.isarray(o)then for G,h in ipairs(o)do table.insert(Q,h)end else for G,h in pairs(o)do if Q[G]~=nil and E and type(h)=="table"and getmetatable(h)==nil then h=table.merge(Q[G],h,true)end;Q[G]=h end end end end;return Q end;function table.havesamecontent(T,U)if table.getlength(T)~=table.getlength(U)then return false end;for G,h in pairs(T)do if T[G]~=U[G]then return false end end;return true end;function table.combine(V,W)if#V~=#W then print("table.combine( keys, values ) : WARNING : Arguments 'keys' and 'values' have different length :",#V,#W)end;local F={}for p,G in pairs(V)do F[G]=W[p]end;return F end;function table.removevalue(o,h,X)if h==nil then return 0 end;local Y=0;for G,I in pairs(o)do if I==h then if math.isinteger(G)then table.remove(o,G)else o[G]=nil end;Y=Y+1;if X~=nil and Y==X then break end end end;return Y end;function table.getkeys(o)local V={}for G,h in pairs(o)do table.insert(V,G)end;return V end;function table.getvalues(o)local W={}for G,h in pairs(o)do table.insert(W,h)end;return W end;function table.getkey(o,h)local G=nil;for Z,_ in pairs(o)do if h==_ then G=Z end end;return G end;function table.sortby(o,a0,a1)if a1==nil or not(a1=="asc"or a1=="desc")then a1="asc"end;local a2={}local a3={}for p=1,#o do local a4=o[p][a0]if a3[a4]==nil then table.insert(a2,a4)a3[a4]={}end;table.insert(a3[a4],o[p])end;if a1=="desc"then table.sort(a2,function(c,d)return c>d end)else table.sort(a2)end;o={}for p=1,#a2 do for a5,a6 in pairs(a3[a2[p]])do table.insert(o,a6)end end;return o end;function table.getvalue(o,V)V=string.split(V,".")local h=o;if h==_G then local a7=false;for G,h in pairs(_G)do if G==V[1]then a7=true;break end end;if not a7 then return nil end end;for p,G in ipairs(V)do if h[G]==nil then h=nil;break else h=h[G]end end;return h end;function table.setvalue(o,V,h)if V:find(".",1,true)==nil then o[V]=h else V=string.split(V,".")for p,G in ipairs(V)do if p==#V then o[G]=h else local a8=o[G]if a8==nil then a8={}o[G]=a8 end;o=a8 end end end end;function table.isarray(o,a9)local aa=0;for Z,_ in pairs(o)do aa=aa+1;if type(Z)~="number"or not math.isinteger(Z)then return false end end;if a9==nil or a9 then return aa==#o end;return true end;function table.reverse(o)local F={}for p,_ in ipairs(o)do table.insert(F,1,_)end;return F end;function table.shift(o,ab)local G=nil;local h=nil;if table.isarray(o)then if#o>0 then h=table.removevalue(o,1)if h~=nil then G=1 end end else for Z,_ in pairs(o)do G=Z;h=_;break end;if G~=nil then o[G]=nil end end;if ab then return G,h else return h end end;function table.reindex(o)if not table.isarray(o,false)then print("table.reindex( table ) : Provided table '"..tostring(o).."' is not an array.")end;local ac=1;for p,_ in pairs(o)do if type(p)=="number"and p>ac then ac=p end end;local F={}for p=1,ac do if o[p]~=nil then table.insert(F,o[p])end end;return F end;function table.insertonce(o,ad,h)if h==nil then h=ad;ad=nil end;for G,I in pairs(o)do if h==I then return false end end;if ad==nil then table.insert(o,h)else table.insert(o,ad,h)end;return true end;Daneel={}Daneel.modules={moduleNames={}}setmetatable(Daneel.modules,{__newindex=function(ae,af,ag)table.insert(Daneel.modules.moduleNames,af)rawset(Daneel.modules,af,ag)end})function string.split(n,r,s)local t={}if s then local u,v=n:find(r)if u~=nil then local k=r;r=n:sub(u,v)if string.startswith(n,r)then n=n:sub(#r+1,#n)end;if not n:endswith(r)then n=n..r end;if CS.IsWebPlayer then for w in n:gmatch("([^"..k.."]+)"..k)do table.insert(t,w)end else for w in n:gmatch("(.-)"..k)do table.insert(t,w)end end end else if n:find(r,1,true)~=nil then if string.startswith(n,r)then n=n:sub(#r+1,#n)end;if not n:endswith(r)then n=n..r end;local x=""local y=string.totable(n)local p=1;while p<=#y do local z=y[p]if z==r or n:sub(p,p-1+#r)==r then table.insert(t,x)x=""p=p+#r else x=x..z;p=p+1 end end;if#x>0 then table.insert(t,x)end end end;if#t==0 then t={n}end;return t end;function table.deepmerge(...)return table.merge(...,true)end;function table.print(o)if o==nil then print("table.print( t ) : Provided table is nil.")return end;local ah=tostring(o)local ai=Daneel.Debug.ToRawString(o)if ah~=ai then ah=ah.." / "..ai end;print("~~~~~ table.print("..ah..") ~~~~~ Start ~~~~~")local L=pairs;if table.getlength(o)==0 then print("Table is empty.")elseif table.isarray(o)then L=ipairs end;for G,h in L(o)do print(G,h)end;print("~~~~~ table.print("..ah..") ~~~~~ End ~~~~~")end;function table.getlength(o,J)local K=0;if J~=nil then J=J:lower()end;for G,h in pairs(o)do if J==nil or type(G)==J or Daneel.Debug.GetType(G):lower()==J then K=K+1 end end;return K end;Daneel.Utilities={}Daneel.Utilities.CaseProof=string.fixcase;function Daneel.Utilities.ReplaceInString(string,aj)for ak,al in pairs(aj)do string=string:gsub(":"..ak,al)end;return string end;function Daneel.Utilities.AllowDynamicGettersAndSetters(am,an)function am.__index(ao,G)local ap=G;if type(G)=="string"then ap=string.ucfirst(G)end;if G==ap then if am[G]~=nil then return am[G]end;if an~=nil then for p,aq in ipairs(an)do if aq[G]~=nil then return aq[G]end end end else local ar="Get"..ap;if am[ar]~=nil then return am[ar](ao)elseif am[G]~=nil then return am[G]end;if an~=nil then for p,aq in ipairs(an)do if aq[ar]~=nil then return aq[ar](ao)elseif aq[G]~=nil then return aq[G]end end end end;return nil end;function am.__newindex(ao,G,h)local ap=G;if type(G)=="string"then ap=string.ucfirst(G)end;if G~=ap then local ar="Set"..ap;if am[ar]~=nil then return am[ar](ao,h)end end;return rawset(ao,G,h)end end;Daneel.Utilities.ToNumber=tonumber2;local as={}function Daneel.Utilities.ButtonExists(at)if as[at]==nil then as[at]=Daneel.Debug.Try(function()CS.Input.WasButtonJustPressed(at)end)end;return as[at]end;Daneel.Utilities.id=0;function Daneel.Utilities.GetId(au)if au~=nil and type(au)=="table"then local av=rawget(au,"id")if av~=nil then return av end;av=Daneel.Utilities.GetId()if au.inner~=nil and not CS.IsWebPlayer then av=tonumber(tostring(au.inner):match("%d+"))end;if av==nil then av="[no id]"end;rawset(au,"id",av)return av else Daneel.Utilities.id=Daneel.Utilities.id+1;return Daneel.Utilities.id end end;Daneel.Cache={GetId=Daneel.Utilities.GetId}Daneel.Debug={}local n="string"local d="boolean"local aw="number"local o="table"local ax="function"local ay="userdata"local az={"s",n}local aA={"t",o}Daneel.Debug.functionArgumentsInfo={["math.isinteger"]={{"number"}},["math.lerp"]={{"a",aw},{"b",aw},{"factor",aw},{"easing",n,isOptional=true}},["math.warpangle"]={{"angle",aw}},["math.round"]={{"value",aw},{"decimal",aw,isOptional=true}},["tonumber2"]={{"data"}},["math.clamp"]={{"value",aw},{"min",aw},{"max",aw}},["string.totable"]={az},["string.ucfirst"]={az},["string.lcfirst"]={az},["string.trimstart"]={az},["string.trimend"]={az},["string.trim"]={az},["string.endswith"]={az,{"chunk",n}},["string.startswith"]={az,{"chunk",n}},["string.split"]={az,{"delimiter",n},{"delimiterIsPattern",d,defaultValue=false}},["string.reverse"]={az},["string.fixcase"]={az,{"set",{n,o}}},["table.print"]={},["table.merge"]={},["table.mergein"]={},["table.getkeys"]={aA},["table.getvalues"]={aA},["table.reverse"]={aA},["table.reindex"]={aA},["table.getvalue"]={aA,{"keys",n}},["table.setvalue"]={aA,{"keys",n}},["table.getkey"]={aA,{"value"}},["table.copy"]={aA,{"recursive",d,defaultValue=false}},["table.containsvalue"]={aA,{"value"},{"ignoreCase",d,defaultValue=false}},["table.isarray"]={aA,{"strict",d,defaultValue=true}},["table.shift"]={aA,{"returnKey",d,defaultValue=false}},["table.getlength"]={aA,{"keyType",n,isOptional=true}},["table.havesamecontent"]={{"table1",o},{"table2",o}},["table.combine"]={aA,{"values","table"},{"returnFalseIfNotSameLength",d,isOptional=true}},["table.removevalue"]={aA,{"value"},{"maxRemoveCount",aw,isOptional=true}},["table.sortby"]={aA,{"property",n},{"orderBy",n,isOptional=true}},["Daneel.Utilities.ReplaceInString"]={{"string",n},{"replacements",o}},["Daneel.Utilities.ButtonExists"]={{"buttonName",n}}}function Daneel.Debug.CheckArgType(aB,aC,aD,aE)if type(aB)=="table"and getmetatable(aB)==GameObject and aB.inner==nil then error(aE.."Provided argument '"..aC.."' is a destroyed game object '"..tostring(aB))end;if not Daneel.Config.debug.enableDebug then return Daneel.Debug.GetType(aB)end;local aF="Daneel.Debug.CheckArgType(argument, argumentName, expectedArgumentTypes[, p_errorHead]) : "local S=type(aC)if S~="string"then error(aF.."Argument 'argumentName' is of type '"..S.."' with value '"..tostring(aC).."' instead of 'string'.")end;S=type(aD)if S~="string"and S~="table"then error(aF.."Argument 'expectedArgumentTypes' is of type '"..S.."' with value '"..tostring(aD).."' instead of 'string' or 'table'.")end;if S=="string"then aD={aD}elseif#aD<=0 then error(aF.."Argument 'expectedArgumentTypes' is an empty table.")end;S=type(aE)if S~="nil"and S~="string"then error(aF.."Argument 'p_errorHead' is of type '"..S.."' with value '"..tostring(aE).."' instead of 'string'.")end;if aE==nil then aE=""end;S=Daneel.Debug.GetType(aB)local aG=type(aB)for p,aH in ipairs(aD)do if S==aH or aG==aH then return aH end end;error(aE.."Argument '"..aC.."' is of type '"..S.."' with value '"..tostring(aB).."' instead of '"..table.concat(aD,"', '").."'.")end;function Daneel.Debug.CheckOptionalArgType(aB,aC,aD,aE,aI)if aB==nil then return aI end;if not Daneel.Config.debug.enableDebug then return aB end;local aF="Daneel.Debug.CheckOptionalArgType(argument, argumentName, expectedArgumentTypes[, p_errorHead, defaultValue]) : "local S=type(aC)if S~="string"then error(aF.."Argument 'argumentName' is of type '"..S.."' with value '"..tostring(aC).."' instead of 'string'.")end;S=type(aD)if S~="string"and S~="table"then error(aF.."Argument 'expectedArgumentTypes' is of type '"..S.."' with value '"..tostring(aD).."' instead of 'string' or 'table'.")end;if S=="string"then aD={aD}elseif#aD<=0 then error(aF.."Argument 'expectedArgumentTypes' is an empty table.")end;S=type(aE)if S~="nil"and S~="string"then error(aF.."Argument 'p_errorHead' is of type '"..S.."' with value '"..tostring(aE).."' instead of 'string'.")end;if aE==nil then aF=""end;S=Daneel.Debug.GetType(aB)local aG=type(aB)for p,aH in ipairs(aD)do if S==aH or aG==aH then return aB end end;error(aE.."Optional argument '"..aC.."' is of type '"..S.."' with value '"..tostring(aB).."' instead of '"..table.concat(aD,"', '").."'.")end;function Daneel.Debug.GetType(au,aJ)local aF="Daneel.Debug.GetType( object[, luaTypeOnly] ) : "local S=type(aJ)if S~="nil"and S~="boolean"then error(aF.."Argument 'luaTypeOnly' is of type '"..S.."' with value '"..tostring(aJ).."' instead of 'boolean'.")end;if aJ==nil then aJ=false end;S=type(au)if not aJ and S=="table"then local aK=getmetatable(au)if aK~=nil then if getmetatable(aK)==Script then return"ScriptedBehavior"end;if Daneel.Config.objects~=nil then for type,au in pairs(Daneel.Config.objects)do if aK==au then return type end end end;for type,au in pairs(_G)do if aK==au then return type end end end end;return S end;oerror=error;function Daneel.Debug.SetNewError()function error(aL,aM)if Daneel.Config.debug.enableDebug and aM~=true then Daneel.Debug.StackTrace.Print()end;oerror(aL)end end;function Daneel.Debug.Disable(aN)if aN~=nil then aN=" : "..tostring(aN)end;print("Daneel.Debug.Disable()"..aN)error=oerror;Daneel.Config.debug.enableDebug=false end;function Daneel.Debug.ToRawString(j)if j==nil and Daneel.Config.debug.enableDebug then print("WARNING : Daneel.Debug.ToRawString( data ) : Argument 'data' is nil.")return nil end;local aO=nil;local aK=getmetatable(j)if aK~=nil then if aK.__tostring~=nil then local aP=aK.__tostring;aK.__tostring=nil;aO=tostring(j)aK.__tostring=aP end end;if aO==nil then aO=tostring(j)end;return aO end;function Daneel.Debug.GetNameFromValue(h)Daneel.Debug.StackTrace.BeginFunction("Daneel.Debug.GetNameFromValue",h)local aF="Daneel.Debug.GetNameFromValue(value) : "if h==nil then error(aF.." Argument 'value' is nil.")end;local aQ=table.getkey(Daneel.Config.objects,h)if aQ==nil then aQ=table.getkey(_G,h)end;Daneel.Debug.StackTrace.EndFunction()return aQ end;function Daneel.Debug.CheckArgValue(aB,aC,aR,aE,aI)Daneel.Debug.StackTrace.BeginFunction("Daneel.Debug.CheckArgValue",aB,aC,aR,aE)local aF="Daneel.Debug.CheckArgValue(argument, argumentName, expectedArgumentValues[, p_errorHead, defaultValue]) : "Daneel.Debug.CheckArgType(aC,"argumentName","string",aF)if aR==nil then error(aF.."Argument 'expectedArgumentValues' is nil.")end;Daneel.Debug.CheckOptionalArgType(aE,"p_errorHead","string",aF)if type(aR)~="table"then aR={aR}elseif#aR==0 then error(aF.."Argument 'expectedArgumentValues' is an empty table.")end;local aS=false;if type(aB)=="string"then for p,aT in ipairs(aR)do if aB:lower()==aT:lower()then aB=aT;aS=true;break end end else for p,aT in ipairs(aR)do if aB==aT then aS=true;break end end end;if not aS then if aI~=nil then aB=aI else for p,h in ipairs(aR)do aR[p]=tostring(h)end;error(aE.."The value '"..tostring(aB).."' of argument '"..aC.."' is not one of '"..table.concat(aR,"', '").."'.")end end;Daneel.Debug.StackTrace.EndFunction()return aB end;local aU=Behavior;Daneel.Debug.tryGameObject=nil;function Daneel.Debug.Try(aV)Daneel.Debug.StackTrace.BeginFunction("Daneel.Debug.Try",aV)local aF="Daneel.Debug.Try( _function ) : "Daneel.Debug.CheckArgType(aV,"_function",{"function","userdata"},aF)local aW=Daneel.Debug.tryGameObject;if aW==nil or aW.inner==nil then aW=CraftStudio.CreateGameObject("Daneel_Debug_Try")Daneel.Debug.tryGameObject=aW end;local aX=false;aW:CreateScriptedBehavior(aU,{debugTry=true,testFunction=aV,successCallback=function()aX=true end})Daneel.Debug.StackTrace.EndFunction()return aX end;function Daneel.Debug.RegisterFunction(aY,aZ)if not Daneel.Config.debug.enableDebug then return end;local a_=true;if not Daneel.Config.debug.enableStackTrace then a_=false elseif aZ.includeInStackTrace~=nil then a_=aZ.includeInStackTrace end;local aF=aY.."( "for p,P in ipairs(aZ)do if P.name==nil then P.name=P[1]end;aF=aF..P.name..", "end;aF=aF:sub(1,#aF-2)aF=aF.." ) : "local b0=table.getvalue(_G,aY)if b0~=nil then local b1=function(...)local b2={...}if a_ then Daneel.Debug.StackTrace.BeginFunction(aY,...)end;for p,P in ipairs(aZ)do if P.type==nil then P.type=P[2]if P.type==nil and P.defaultValue~=nil then P.type=type(P.defaultValue)end end;if P.type~=nil then if P.defaultValue~=nil or P.isOptional==true then b2[p]=Daneel.Debug.CheckOptionalArgType(b2[p],P.name,P.type,aF,P.defaultValue)else Daneel.Debug.CheckArgType(b2[p],P.name,P.type,aF)end elseif b2[p]==nil and not P.isOptional then error(aF.."Argument '"..P.name.."' is nil.")end end;local b3={b0(unpack(b2))}if a_ then Daneel.Debug.StackTrace.EndFunction()end;return unpack(b3)end;table.setvalue(_G,aY,b1)else print("Daneel.Debug.RegisterFunction() : Function with name '"..aY.."' was not found in the global table _G.")end end;Daneel.Debug.StackTrace={messages={}}function Daneel.Debug.StackTrace.BeginFunction(b4,...)if not Daneel.Config.debug.enableDebug or not Daneel.Config.debug.enableStackTrace then return end;if#Daneel.Debug.StackTrace.messages>200 then print("WARNING : your StackTrace is more than 200 items long ! Emptying the StackTrace now. Did you forget to write a 'EndFunction()' somewhere ?")Daneel.Debug.StackTrace.messages={}end;local aF="Daneel.Debug.StackTrace.BeginFunction( functionName[, ...] ) : "Daneel.Debug.CheckArgType(b4,"functionName","string",aF)local R=b4 .."( "local P={...}if#P>0 then for p,aB in ipairs(P)do if type(aB)=="string"then R=R..'"'..tostring(aB)..'", 'else R=R..tostring(aB)..", "end end;R=R:sub(1,#R-2)end;R=R.." )"table.insert(Daneel.Debug.StackTrace.messages,R)end;function Daneel.Debug.StackTrace.EndFunction()if not Daneel.Config.debug.enableDebug or not Daneel.Config.debug.enableStackTrace then return end;table.remove(Daneel.Debug.StackTrace.messages)end;function Daneel.Debug.StackTrace.Print()if not Daneel.Config.debug.enableDebug or not Daneel.Config.debug.enableStackTrace then return end;local b5=Daneel.Debug.StackTrace.messages;Daneel.Debug.StackTrace.messages={}print("~~~~~ Daneel.Debug.StackTrace ~~~~~")if#b5<=0 then print("No message in the StackTrace.")else for p,R in ipairs(b5)do if p<10 then p="0"..p end;print("#"..p.." "..R)end end end;Daneel.Event={events={},persistentEvents={}}function Daneel.Event.Listen(b6,b7,b8)local aF="Daneel.Event.Listen( eventName, functionOrObject[, isPersistent] ) : "local b9=type(b7)local ba=b6;if type(b6)=="string"then ba={b6}end;for p,b6 in pairs(ba)do if Daneel.Event.events[b6]==nil then Daneel.Event.events[b6]={}end;if Daneel.Event.persistentEvents[b6]==nil then Daneel.Event.persistentEvents[b6]={}end;if not table.containsvalue(Daneel.Event.events[b6],b7)and not table.containsvalue(Daneel.Event.persistentEvents[b6],b7)then if b8 and b9=="table"then local aK=getmetatable(b7)if aK~=nil and aK==GameObject or table.containsvalue(Daneel.Config.componentObjects,aK)then if Daneel.Config.debug.enableDebug then print(aF.."Game objects and components can't be persistent listeners",b7)end;b8=false end end;local bb=Daneel.Event.events;if b8 then bb=Daneel.Event.persistentEvents end;table.insert(bb[b6],b7)end end end;function Daneel.Event.StopListen(b6,b7)if type(b6)~="string"then b7=b6;b6=nil end;Daneel.Debug.StackTrace.BeginFunction("Daneel.Event.StopListen",b6,b7)local aF="Daneel.Event.StopListen( eventName, functionOrObject ) : "Daneel.Debug.CheckOptionalArgType(b6,"eventName","string",aF)Daneel.Debug.CheckArgType(b7,"functionOrObject",{"table","function"},aF)local ba=b6;if type(b6)=="string"then ba={b6}end;if ba==nil then ba=table.merge(table.getkeys(Daneel.Event.events),table.getkeys(Daneel.Event.persistentEvents))end;for p,b6 in pairs(ba)do local bc=Daneel.Event.events[b6]if bc~=nil then table.removevalue(bc,b7)end;bc=Daneel.Event.persistentEvents[b6]if bc~=nil then table.removevalue(bc,b7)end end;Daneel.Debug.StackTrace.EndFunction()end;function Daneel.Event.Fire(au,b6,...)local P={...}Daneel.Debug.StackTrace.BeginFunction("Daneel.Event.Fire",au,b6,...)local aF="Daneel.Event.Fire( [object, ]eventName[, ...] ) : "local S=type(au)if S=="string"then if b6~=nil then table.insert(P,1,b6)end;b6=au;au=nil elseif S~="nil"then Daneel.Debug.CheckArgType(au,"object","table",aF)Daneel.Debug.CheckArgType(b6,"eventName","string",aF)end;local bc={au}if au==nil then if Daneel.Event.events[b6]~=nil then bc=Daneel.Event.events[b6]end;if Daneel.Event.persistentEvents[b6]~=nil then bc=table.merge(bc,Daneel.Event.persistentEvents[b6])end end;local bd={}for p=1,#bc do local be=bc[p]local b9=type(be)if b9=="function"or b9=="userdata"then if be(unpack(P))==false then table.insert(bd,be)end else local aK=getmetatable(be)local bf=not be.isDestroyed;if aK==GameObject and be.inner==nil then bf=false end;if bf then local bg={}if be.listenersByEvent~=nil and be.listenersByEvent[b6]~=nil then bg=be.listenersByEvent[b6]end;local L=rawget(be,b6)if L~=nil then table.insert(bg,L)end;for a5=1,#bg do bg[a5](...)end;if aK==GameObject then be:SendMessage(b6,P)end end end end;for p=1,#bd do Daneel.Event.StopListen(b6,bd[p])end;Daneel.Debug.StackTrace.EndFunction()end;function GameObject.FireEvent(aW,b6,...)Daneel.Event.Fire(aW,b6,...)end;function Daneel.Event.AddEventListener(au,b6,be)if au.listenersByEvent==nil then au.listenersByEvent={}end;if au.listenersByEvent[b6]==nil then au.listenersByEvent[b6]={}end;if not table.containsvalue(au.listenersByEvent[b6],be)then table.insert(au.listenersByEvent[b6],be)elseif Daneel.Debug.enableDebug==true then print("Daneel.Event.AddEventListener(): "..tostring(be).." already listen for event '"..b6 .."' on object: ",au)end end;function GameObject.AddEventListener(aW,b6,be)Daneel.Event.AddEventListener(aW,b6,be)end;function Daneel.Event.RemoveEventListener(au,b6,be)if au.listenersByEvent~=nil and au.listenersByEvent[b6]~=nil then if be~=nil then table.removevalue(au.listenersByEvent[b6],be)else au.listenersByEvent[b6]=nil end end end;function GameObject.RemoveEventListener(aW,b6,be)Daneel.Event.RemoveEventListener(aW,b6,be)end;table.mergein(Daneel.Debug.functionArgumentsInfo,{["Daneel.Event.Listen"]={{"eventName",{n,o}},{"functionOrObject",{o,ax,ay}},{"isPersistent",defaultValue=false}},["GameObject.FireEvent"]={{"gameObject","GameObject"},{"eventName",n}},["Daneel.Event.AddEventListener"]={{"object","table"},{"eventName",n},{"listener",{ax,ay}}},["GameObject.AddEventListener"]={{"gameObject","GameObject"},{"eventName",n},{"listener",{ax,ay}}},["Daneel.Event.RemoveEventListener"]={{"object","table"},{"eventName",n},{"listener",{ax,ay},isOptional=true}},["GameObject.RemoveEventListener"]={{"gameObject","GameObject"},{"eventName",n},{"listener",{ax,ay},isOptional=true}}})Daneel.Time={realTime=0.0,realDeltaTime=0.0,time=0.0,deltaTime=0.0,timeScale=1.0,frameCount=0}Daneel.Storage={}function Daneel.Storage.Save(aY,j,bh)if j~=nil and type(j)~="table"then j={value=j,isSavedByDaneel=true}end;CS.Storage.Save(aY,j,function(error)if error~=nil then if Daneel.Config.debug.enableDebug then print("Daneel.Storage.Save( name, data[, callback] ) : Error saving with name, data and error : ",aY,j,error.message)end end;if bh~=nil then if error==nil then error={}end;bh(error.message)end end)end;function Daneel.Storage.Load(aY,aI,bh)if bh==nil and type(aI)=="function"then bh=aI;aI=nil end;local h=nil;CS.Storage.Load(aY,function(error,j)if error~=nil then if Daneel.Config.debug.enableDebug then print("Daneel.Storage.Load( name[, defaultValue, callback] ) : Error loading with name, default value and error",aY,aI,error.message)end;j=nil end;h=aI;if j~=nil then if type(j)=="table"and j.value~=nil and j.isSavedByDaneel then h=j.value else h=j end end;if bh~=nil then if error==nil then error={}end;bh(h,error.message)end end)return h end;table.mergein(Daneel.Debug.functionArgumentsInfo,{["Daneel.Storage.Save"]={{"name",n},{"data",isOptional=true},{"callback","function",isOptional=true}},["Daneel.Storage.Load"]={{"name",n},{"defaultValue",isOptional=true},{"callback","function",isOptional=true}}})function Daneel.DefaultConfig()local bi={debug={enableDebug=false,enableStackTrace=false},objects={GameObject=GameObject,Vector3=Vector3,Quaternion=Quaternion,Plane=Plane,Ray=Ray},componentObjects={ScriptedBehavior=ScriptedBehavior,ModelRenderer=ModelRenderer,MapRenderer=MapRenderer,Camera=Camera,Transform=Transform,Physics=Physics,TextRenderer=TextRenderer,NetworkSync=NetworkSync},componentTypes={},assetObjects={Script=Script,Model=Model,ModelAnimation=ModelAnimation,Map=Map,TileSet=TileSet,Sound=Sound,Scene=Scene,Font=Font},assetTypes={}}return bi end;Daneel.Config=Daneel.DefaultConfig()Daneel.Config.assetTypes=table.getkeys(Daneel.Config.assetObjects)function Daneel.Load()if Daneel.isLoaded then return end;Daneel.isLoading=true;local bj=Daneel.UserConfig;if type(bj)=="function"then bj=bj()end;if bj~=nil then table.mergein(Daneel.Config,bj,true)end;for p,aY in ipairs(Daneel.modules.moduleNames)do local bk=Daneel.modules[aY]if bk.isConfigLoaded~=true then bk.isConfigLoaded=true;if bk.Config==nil then local bi=bk.DefaultConfig;if type(bi)=="function"then bi=bi()end;if bi==nil then bi={}end;bk.Config=bi end;local bj=bk.UserConfig;if type(bj)=="function"then bj=bj()end;if bj~=nil then table.mergein(bk.Config,bj,true)end;if bk.Config.objects~=nil then table.mergein(Daneel.Config.objects,bk.Config.objects)end;if bk.Config.componentObjects~=nil then table.mergein(Daneel.Config.componentObjects,bk.Config.componentObjects)table.mergein(Daneel.Config.objects,bk.Config.componentObjects)end end end;table.mergein(Daneel.Config.objects,Daneel.Config.componentObjects,Daneel.Config.assetObjects)for bl,bm in pairs(Daneel.Config.componentObjects)do Daneel.Utilities.AllowDynamicGettersAndSetters(bm,{Component})if bl~="ScriptedBehavior"then bm["__tostring"]=function(bn)return bl..": "..bn:GetId()end end end;table.mergein(Daneel.Config.componentTypes,table.getkeys(Daneel.Config.componentObjects))if Daneel.Config.debug.enableDebug then if Daneel.Config.debug.enableStackTrace then Daneel.Debug.SetNewError()end;for ar,j in pairs(Daneel.Debug.functionArgumentsInfo)do Daneel.Debug.RegisterFunction(ar,j)end end;for bo,bp in pairs(Daneel.Config.assetObjects)do Daneel.Utilities.AllowDynamicGettersAndSetters(bp,{Asset})bp["__tostring"]=function(bq)return bo..": "..Daneel.Utilities.GetId(bq)..": '"..Map.GetPathInPackage(bq).."'"end end;CS.IsWebPlayer=type(Camera.ProjectionMode.Orthographic)=="number"Daneel.Debug.StackTrace.BeginFunction("Daneel.Load")for p,aY in ipairs(Daneel.modules.moduleNames)do local bk=Daneel.modules[aY]if bk.isLoaded~=true then bk.isLoaded=true;if type(bk.Load)=="function"then bk.Load()end end end;Daneel.isLoaded=true;Daneel.isLoading=false;if Daneel.Config.debug.enableDebug then print("~~~~~ Daneel loaded ~~~~~")end;Daneel.moduleUpdateFunctions={}for p,aY in ipairs(Daneel.modules.moduleNames)do local bk=Daneel.modules[aY]if bk.doNotCallUpdate~=true then if type(bk.Update)=="function"and not table.containsvalue(Daneel.moduleUpdateFunctions,bk.Update)then table.insert(Daneel.moduleUpdateFunctions,bk.Update)end end end;Daneel.Debug.StackTrace.EndFunction()end;function Behavior.Awake(br)if br.debugTry==true then CraftStudio.Destroy(br)br.testFunction()br.successCallback()return end;if table.getvalue(_G,"LOAD_DANEEL")~=nil and LOAD_DANEEL==false then return end;if Daneel.isAwake then if Daneel.Config.debug.enableDebug then print("Daneel:Awake() : You tried to load Daneel twice ! The 'Daneel' scripted behavior is on two game objects inside the same scene. This time, it was on "..tostring(br.gameObject))end;CS.Destroy(br)return end;Daneel.isAwake=true;Daneel.Event.Listen("OnSceneLoad",function()Daneel.isAwake=false end)Daneel.Load()Daneel.Debug.StackTrace.messages={}Daneel.Debug.StackTrace.BeginFunction("Daneel.Awake")for p,aY in ipairs(Daneel.modules.moduleNames)do local bk=Daneel.modules[aY]if type(bk.Awake)=="function"then bk.Awake()end end;if Daneel.Config.debug.enableDebug then print("~~~~~ Daneel awake ~~~~~")end;Daneel.Event.Fire("OnAwake")Daneel.Debug.StackTrace.EndFunction()end;function Behavior.Start(br)if br.debugTry then return end;Daneel.Debug.StackTrace.BeginFunction("Daneel.Start")for p,aY in ipairs(Daneel.modules.moduleNames)do local bk=Daneel.modules[aY]if type(bk.Start)=="function"then bk.Start()end end;if Daneel.Config.debug.enableDebug then print("~~~~~ Daneel started ~~~~~")end;Daneel.Event.Fire("OnStart")Daneel.Debug.StackTrace.EndFunction()end;function Behavior.Update(br)if br.debugTry then return end;local bs=os.clock()Daneel.Time.realDeltaTime=bs-Daneel.Time.realTime;Daneel.Time.realTime=bs;Daneel.Time.deltaTime=Daneel.Time.realDeltaTime*Daneel.Time.timeScale;Daneel.Time.time=Daneel.Time.time+Daneel.Time.deltaTime;Daneel.Time.frameCount=Daneel.Time.frameCount+1;for p=1,#Daneel.moduleUpdateFunctions do Daneel.moduleUpdateFunctions[p]()end end;local n="string"local d="boolean"local aw="number"local o="table"local bt="GameObject"local bu="Vector2"local bv="Vector3"local bw={"params",o}setmetatable(Vector3,{__call=function(am,...)return am:New(...)end})setmetatable(Quaternion,{__call=function(am,...)return am:New(...)end})setmetatable(Plane,{__call=function(am,...)return am:New(...)end})Plane.__tostring=function(bx)return"Plane: { normal="..tostring(bx.normal)..", distance="..tostring(bx.distance).." }"end;Asset={}Asset.__index=Asset;setmetatable(Asset,{__call=function(am,...)return am.Get(...)end})local by=table.merge({"string"},Daneel.Config.assetTypes)function Asset.Get(bz,bo,bA)local aF="Asset.Get( assetPath[, assetType, errorIfAssetNotFound] ) : "if bz==nil then if Daneel.Config.debug.enableDebug then error(aF.."Argument 'assetPath' is nil.")end;return nil end;local S=Daneel.Debug.CheckArgType(bz,"assetPath",by,aF)if bo~=nil then Daneel.Debug.CheckArgType(bo,"assetType","string",aF)bo=Daneel.Debug.CheckArgValue(bo,"assetType",Daneel.Config.assetTypes,aF)end;if S~="string"then if bo~=nil and S~=bo then error(aF.."Provided asset '"..bz.."' has a different type '"..S.."' than the provided 'assetType' argument '"..bo.."'.")end;return bz end;Daneel.Debug.CheckOptionalArgType(bA,"errorIfAssetNotFound","boolean",aF)local bq=nil;if bo==nil then bq=CraftStudio.FindAsset(bz)else bq=CraftStudio.FindAsset(bz,bo)end;if bq==nil and bA then if bo==nil then bo="asset"end;error(aF.."Argument 'assetPath' : "..bo.." with name '"..bz.."' was not found.")end;return bq end;function Asset.GetPath(bq)return Map.GetPathInPackage(bq)end;function Asset.GetName(bq)local aY=rawget(bq,"name")if aY==nil then aY=Asset.GetPath(bq):gsub("^(.*/)","")rawset(bq,"name",aY)end;return aY end;function Asset.GetId(bq)return Daneel.Utilities.GetId(bq)end;Component={}Component.__index=Component;function Component.Set(bn,bB)for G,h in pairs(bB)do bn[G]=h end end;function Component.Destroy(bn)table.removevalue(bn.gameObject,bn)CraftStudio.Destroy(bn)end;function Component.GetId(bn)return Daneel.Utilities.GetId(bn)end;table.mergein(Daneel.Debug.functionArgumentsInfo,{["Asset.Get"]={{"assetPath"},{"assetType",isOptional=true},{"errorIfAssetNotFound",defaultValue=false}},["Asset.GetPath"]={{"asset",Daneel.Config.assetTypes}},["Asset.GetName"]={{"asset",Daneel.Config.assetTypes}},["Component.Set"]={{"component",Daneel.Config.componentTypes},{"params",defaultValue={}}},["Component.Destroy"]={{"component",Daneel.Config.componentTypes}}})Map.oGetPathInPackage=Map.GetPathInPackage;function Map.GetPathInPackage(bq)local bC=rawget(bq,"path")if bC==nil then bC=Map.oGetPathInPackage(bq)end;return bC end;Map.oLoadFromPackage=Map.LoadFromPackage;function Map.LoadFromPackage(bC,bh)Map.oLoadFromPackage(bC,function(bD)if bD~=nil then rawset(bD,"path",bC)bD.isDynamicallyLoaded=true end;bh(bD)end)end;Map.oGetBlockIDAt=Map.GetBlockIDAt;function Map.GetBlockIDAt(bD,bE,bF,bG)if type(bE)=="table"then bG=bE.z;bF=bE.y;bE=bE.x end;return Map.oGetBlockIDAt(bD,bE,bF,bG)end;Map.oGetBlockOrientationAt=Map.GetBlockOrientationAt;function Map.GetBlockOrientationAt(bD,bE,bF,bG)if type(bE)=="table"then bG=bE.z;bF=bE.y;bE=bE.x end;return Map.GetBlockOrientationAt(bD,bE,bF,bG)end;Map.oSetBlockAt=Map.SetBlockAt;function Map.SetBlockAt(bD,bE,bF,bG,av,bH)if type(bE)=="table"then av=bF;bH=bG;bG=bE.z;bF=bE.y;bE=bE.x end;if bH==nil then Map.oSetBlockAt(bD,bE,bF,bG,av)else Map.oSetBlockAt(bD,bE,bF,bG,av,bH)end end;Transform.oSetLocalScale=Transform.SetLocalScale;function Transform.SetLocalScale(bI,bJ)if type(bJ)=="number"then bJ=Vector3:New(bJ)end;Transform.oSetLocalScale(bI,bJ)end;function Transform.SetScale(bI,bJ)if type(bJ)=="number"then bJ=Vector3:New(bJ)end;local bK=bI.gameObject:GetParent()if bK~=nil then bJ=bJ/bK.transform:GetScale()end;bI:SetLocalScale(bJ)end;function Transform.GetScale(bI)local bJ=bI:GetLocalScale()local bK=bI.gameObject:GetParent()if bK~=nil then bJ=bJ*bK.transform:GetScale()end;return bJ end;function Transform.WorldToLocal(bI,bL)local bt=bI.worldToLocalGO;if bt==nil then bt=CS.CreateGameObject("WorldToLocal",bI.gameObject)bI.worldToLocalGO=bt end;bt.transform:SetPosition(bL)return bt.transform:GetLocalPosition()end;function Transform.LocalToWorld(bI,bL)local bt=bI.worldToLocalGO;if bt==nil then bt=CS.CreateGameObject("WorldToLocal",bI.gameObject)bI.worldToLocalGO=bt end;bt.transform:SetLocalPosition(bL)return bt.transform:GetPosition()end;ModelRenderer.oSetModel=ModelRenderer.SetModel;function ModelRenderer.SetModel(bM,bN)local bO=nil;if bN~=nil then bO=Asset.Get(bN,"Model",true)end;ModelRenderer.oSetModel(bM,bO)end;ModelRenderer.oSetAnimation=ModelRenderer.SetAnimation;function ModelRenderer.SetAnimation(bM,bP)local bQ=nil;if bP~=nil then bQ=Asset.Get(bP,"ModelAnimation",true)end;ModelRenderer.oSetAnimation(bM,bQ)end;function ModelRenderer.Set(bM,bB)if bB.model~=nil then bM:SetModel(bB.model)bB.model=nil end;if bB.animationTime~=nil and bB.animation~=nil then bM:SetAnimation(bB.animation)bB.animation=nil end;Component.Set(bM,bB)end;MapRenderer.oSetMap=MapRenderer.SetMap;function MapRenderer.SetMap(bR,bS,bT)local bD=nil;if bS~=nil then bD=Asset.Get(bS,"Map",true)end;if bT~=nil then MapRenderer.oSetMap(bR,bD,bT)else MapRenderer.oSetMap(bR,bD)end end;MapRenderer.oSetTileSet=MapRenderer.SetTileSet;function MapRenderer.SetTileSet(bR,bU)local bV=nil;if bU~=nil then bV=Asset.Get(bU,"TileSet",true)end;MapRenderer.oSetTileSet(bR,bV)end;function MapRenderer.Set(bR,bB)if bB.map~=nil then bR:SetMap(bB.map)bB.map=nil end;Component.Set(bR,bB)end;function MapRenderer.LoadNewMap(bR,bh)local bD=bR:GetMap()if bD~=nil then Map.LoadFromPackage(Map.GetPathInPackage(bD),function(bD)bR:SetMap(bD)if bh~=nil then bh(bD)end end)elseif Daneel.Config.debug.enableDebug==true then print("ERROR: MapRenderer.LoadNewMap(): No map is set on the provided map renderer. Can't load new map.")end end;TextRenderer.oSetFont=TextRenderer.SetFont;function TextRenderer.SetFont(bW,bX)local bY=nil;if bX~=nil then bY=Asset.Get(bX,"Font",true)end;TextRenderer.oSetFont(bW,bY)end;TextRenderer.oSetAlignment=TextRenderer.SetAlignment;function TextRenderer.SetAlignment(bW,bZ)if type(bZ)=="string"then local b_="Center"if Daneel.Config.textRenderer~=nil and Daneel.Config.textRenderer.alignment~=nil then b_=Daneel.Config.textRenderer.alignment end;local aF="TextRenderer.SetAlignment( textRenderer, alignment ) : "bZ=Daneel.Debug.CheckArgValue(bZ,"alignment",{"Left","Center","Right"},aF,b_)bZ=TextRenderer.Alignment[bZ]end;TextRenderer.oSetAlignment(bW,bZ)end;function TextRenderer.SetTextWidth(bW,c0)local c1=bW:GetTextWidth()/bW.gameObject.transform:GetScale()bW.gameObject.transform:SetScale(c0/c1)end;Camera.oSetProjectionMode=Camera.SetProjectionMode;function Camera.SetProjectionMode(c2,c3)if type(c3)=="string"then local b_="Perspective"if Daneel.Config.camera~=nil and Daneel.Config.camera.projectionMode~=nil then b_=Daneel.Config.camera.projectionMode end;c3=Daneel.Debug.CheckArgValue(c3,"projectionMode",{"Perspective","Orthographic"},"Camera.SetProjectionMode( camera[, projectionMode] ) : ",b_)c3=Camera.ProjectionMode[c3]end;Camera.oSetProjectionMode(c2,c3)end;function Camera.Set(c2,bB)if bB.projectionMode~=nil then c2:SetProjectionMode(bB.projectionMode)bB.projectionMode=nil end;Component.Set(c2,bB)end;function Camera.GetPixelsToUnits(c2)local c4=CS.Screen.GetSize()local c5=c4.y;if c4.x<c4.y then c5=c4.x end;if c2:GetProjectionMode()==Camera.ProjectionMode.Orthographic then return c2:GetOrthographicScale()/c5 else return math.tan(math.rad(c2:GetFOV()/2))/c5*2 end end;function Camera.GetUnitsToPixels(c2)local c6=c2:GetPixelsToUnits()if c6~=nil and c6~=0 then return 1/c6 end end;function Camera.GetBaseDistance(c2)if c2:GetProjectionMode()==Camera.ProjectionMode.Perspective then return 0.5/math.tan(math.rad(c2:GetFOV()/2))end end;function Camera.IsPositionInFrustum(c2,bL)local c7=c2.gameObject.transform:WorldToLocal(bL)if c7.z<0 then local c4=CS.Screen.GetSize()local c8=Vector2.New(0)if c2:GetProjectionMode()==Camera.ProjectionMode.Orthographic then c8=c4*c2:GetPixelsToUnits()/2 else local c5=c4.y;if c4.x<c4.y then c5=c4.x end;c8=-c7.z/c2:GetBaseDistance()*c4/c5;c8=c8/2 end;if c7.x>=-c8.x and c7.x<=c8.x and c7.y>=-c8.y and c7.y<=c8.y then return true end end;return false end;function Camera.WorldToScreenPoint(c2,bL)local c7=c2.gameObject.transform:WorldToLocal(bL)local c9=c2:GetUnitsToPixels()local c4=CS.Screen.GetSize()if c2:GetProjectionMode()==Camera.ProjectionMode.Orthographic then c7.x=c7.x*c9+c4.x/2;c7.y=-c7.y*c9+c4.y/2 else local ca=math.abs(c7.z)c7.x=c7.x/ca*c9+c4.x/2;c7.y=-c7.y/ca*c9+c4.y/2 end;return c7 end;Camera.oGetFOV=Camera.GetFOV;function Camera.GetFOV(c2)return math.round(Camera.oGetFOV(c2),2)end;Camera.GetFov=Camera.GetFOV;Camera.SetFov=Camera.SetFOV;Camera.oProject=Camera.Project;function Camera.Project(c2,bL)return setmetatable(Camera.oProject(c2,bL),Vector2)end;table.mergein(Daneel.Debug.functionArgumentsInfo,{["Transform.SetLocalScale"]={{"transform","Transform"},{"number",{aw,bv}}},["Transform.SetScale"]={{"transform","Transform"},{"number",{aw,bv}}},["Transform.GetScale"]={{"transform","Transform"}},["Transform.WorldToLocal"]={{"transform","Transform"},{"position",bv}},["Transform.LocalToWorld"]={{"transform","Transform"},{"position",bv}},["ModelRenderer.SetModel"]={{"modelRenderer","ModelRenderer"},{"modelNameOrAsset",{n,"Model"},isOptional=true}},["ModelRenderer.SetAnimation"]={{"modelRenderer","ModelRenderer"},{"animationNameOrAsset",{n,"ModelAnimation"},isOptional=true}},["ModelRenderer.Set"]={{"modelRenderer","ModelRenderer"},bw},["MapRenderer.SetMap"]={{"mapRenderer","MapRenderer"},{"mapNameOrAsset",{n,"Map"},isOptional=true},{"replaceTileSet",defaultValue=true}},["MapRenderer.SetTileSet"]={{"mapRenderer","MapRenderer"},{"tileSetNameOrAsset",{n,"TileSet"},isOptional=true}},["MapRenderer.Set"]={{"mapRenderer","MapRenderer"},bw},["MapRenderer.LoadNewMap"]={{"mapRenderer","MapRenderer"},{"callback","function",isOptional=true}},["TextRenderer.SetFont"]={{"textRenderer","TextRenderer"},{"fontNameOrAsset",{n,"Font"},isOptional=true}},["TextRenderer.SetAlignment"]={{"textRenderer","TextRenderer"},{"alignment",{n,"userdata",aw}}},["TextRenderer.SetTextWidth"]={{"textRenderer","TextRenderer"},{"width",aw}},["Camera.SetProjectionMode"]={{"camera","Camera"},{"projectionMode",{n,"userdata",aw}}},["Camera.Set"]={{"camera","Camera"},bw},["Camera.GetPixelsToUnits"]={{"camera","Camera"}},["Camera.GetUnitsToPixels"]={{"camera","Camera"}},["Camera.GetBaseDistance"]={{"camera","Camera"}},["Camera.IsPositionInFrustum"]={{"camera","Camera"},{"position",bv}},["Camera.WorldToScreenPoint"]={{"camera","Camera"},{"position",bv}},["Camera.GetFOV"]={{"camera","Camera"}}})Vector2={}Vector2.__index=Vector2;setmetatable(Vector2,{__call=function(am,...)return am.New(...)end})Daneel.Config.objects.Vector2=Vector2;function Vector2.__tostring(cb)return"Vector2: { x="..cb.x..", y="..cb.y.." }"end;function Vector2.New(bE,bF)local cc=setmetatable({x=bE,y=bF},Vector2)if type(bE)=="table"then cc.x=bE.x;cc.y=bE.y elseif bF==nil then cc.y=bE end;return cc end;function Vector2.GetLength(cc)return math.sqrt(cc.x^2+cc.y^2)end;function Vector2.GetSqrLength(cc)return cc.x^2+cc.y^2 end;function Vector2.Normalized(cc)return Vector2.New(cc.x,cc.y):Normalize()end;function Vector2.Normalize(cc)local K=cc:GetLength()if K~=0 then cc=cc/K end end;function Vector2.__add(c,d)return Vector2.New(c.x+d.x,c.y+d.y)end;function Vector2.__sub(c,d)return Vector2.New(c.x-d.x,c.y-d.y)end;function Vector2.__mul(c,d)local cd=nil;if type(c)=="number"then cd=Vector2.New(c*d.x,c*d.y)elseif type(d)=="number"then cd=Vector2.New(c.x*d,c.y*d)else cd=Vector2.New(c.x*d.x,c.y*d.y)end;return cd end;function Vector2.__div(c,d)local aF="Vector2.__div(a, b) : "local cd=nil;if type(c)=="number"then if d.x==0 or d.y==0 then error(aF.."One of the components of the denominator is equal to 0. Can't divide by 0 !",c,d)end;cd=Vector2.New(c/d.x,c/d.y)elseif type(d)=="number"then if d==0 then error(aF.."The denominator is equal to 0 ! Can't divide by 0 !",c,d)end;cd=Vector2.New(c.x/d,c.y/d)else if d.x==0 or d.y==0 then error(aF.."One of the components of the denominator is equal to 0. Can't divide by 0 !",c,d)end;cd=Vector2.New(c.x/d.x,c.y/d.y)end;return cd end;function Vector2.__unm(cc)return Vector2.New(-cc.x,-cc.y)end;function Vector2.__pow(cc,ce)return Vector2.New(cc.x^ce,cc.y^ce)end;function Vector2.__eq(c,d)return c.x==d.x and c.y==d.y end;function Vector2.ToString(cc)for p,cf in pairs({"x","y"})do if tostring(cc[cf])=="-0"then cc[cf]=0 end end;return cc.x.." "..cc.y end;Vector3.tostringRoundValue=3;Vector3.__tostring=function(cc)local cg=Vector3.tostringRoundValue;if cg~=nil and cg>=0 then return"Vector3: { x="..math.round(cc.x,cg)..", y="..math.round(cc.y,cg)..", z="..math.round(cc.z,cg).." }"else return"Vector3: { x="..cc.x..", y="..cc.y..", z="..cc.z.." }"end end;function Vector3.New(bE,bF,bG,ch)if bE==Vector3 then bE=bF;bF=bG;bG=ch end;if type(bE)=="table"then if bE.z==nil then bF=bE.y;bE=bE.x else bF=bE.y;bG=bE.z;bE=bE.x end elseif type(bF)=="table"then bG=bF.y;bF=bF.x end;bE=bE or 0;bF=bF or bE;bG=bG or bF;return setmetatable({x=bE,y=bF,z=bG},Vector3)end;function Vector3.GetLength(cc)return math.sqrt(cc.x^2+cc.y^2+cc.z^2)end;function Vector3.GetSqrLength(cc)return cc.x^2+cc.y^2+cc.z^2 end;function Vector3.ToString(cc)for p,cf in pairs({"x","y","z"})do if tostring(cc[cf])=="-0"then cc[cf]=0 end end;return cc.x.." "..cc.y.." "..cc.z end;function string.tovector(ci)local cc=Vector3:New(0)local V={"z","y","x"}for w in string.gmatch(ci,"[0-9.-]+")do local cf=table.remove(V)if cf~=nil then cc[cf]=tonumber(w)else break end end;if table.remove(V)=="z"then setmetatable(cc,Vector2)cc.z=nil end;return cc end;table.mergein(Daneel.Debug.functionArgumentsInfo,{["Vector2.New"]={{"x",{n,aw,o,bu,bv}},{"y",{n,aw},isOptional=true}},["Vector2.GetLength"]={{"vector",bu}},["Vector2.GetSqrLength"]={{"vector",bu}},["Vector2.Normalized"]={{"vector",bu}},["Vector2.Normalize"]={{"vector",bu}},["Vector2.__add"]={{"a",bu},{"b",bu}},["Vector2.__sub"]={{"a",bu},{"b",bu}},["Vector2.__mul"]={{"a",{aw,bu}},{"b",{aw,bu}}},["Vector2.__div"]={{"a",{aw,bu}},{"b",{aw,bu}}},["Vector2.__unm"]={{"vector",bu}},["Vector2.__pow"]={{"vector",bu},{"exp","number"}},["Vector2.__add"]={{"a",bu},{"b",bu}},["Vector3.GetLength"]={{"vector",bv}},["Vector3.GetSqrLength"]={{"vector",bv}},["Vector3.ToString"]={{"vector",bv}},["string.tovector"]={{"sVector",n}}})CraftStudio.Input.oGetMousePosition=CraftStudio.Input.GetMousePosition;function CraftStudio.Input.GetMousePosition()return setmetatable(CraftStudio.Input.oGetMousePosition(),Vector2)end;CraftStudio.Input.oGetMouseDelta=CraftStudio.Input.GetMouseDelta;function CraftStudio.Input.GetMouseDelta()return setmetatable(CraftStudio.Input.oGetMouseDelta(),Vector2)end;CraftStudio.Screen.oSetSize=CraftStudio.Screen.SetSize;function CraftStudio.Screen.SetSize(bE,bF)if type(bE)=="table"then bF=bE.y;bE=bE.x end;CraftStudio.Screen.oSetSize(bE,bF)CraftStudio.Screen.GetSize()end;CraftStudio.Screen.oGetSize=CraftStudio.Screen.GetSize;function CraftStudio.Screen.GetSize()local c4=CraftStudio.Screen.oGetSize()CraftStudio.Screen.aspectRatio=c4.x/c4.y;return setmetatable(c4,Vector2)end;CraftStudio.Screen.GetSize()RaycastHit={}RaycastHit.__index=RaycastHit;setmetatable(RaycastHit,{__call=function(am,...)return am.New(...)end})Daneel.Config.objects.RaycastHit=RaycastHit;RaycastHit.__index=function(cj,G)if G=="hitLocation"then return cj.hitPosition end end;function RaycastHit.__tostring(ao)local R="RaycastHit: { "local ck=true;for G,h in pairs(ao)do if ck then R=R..G.."="..tostring(h)ck=false else R=R..", "..G.."="..tostring(h)end end;return R.." }"end;Daneel.Debug.functionArgumentsInfo["RaycastHit.New"]={{"params",defaultValue={}}}function RaycastHit.New(bB)if bB==nil then bB={}end;return setmetatable(bB,RaycastHit)end;setmetatable(Ray,{__call=function(am,...)return am:New(...)end})function Ray.Cast(cl,cm,cn)local co={}for p,aW in pairs(cm)do if aW.inner~=nil then local cj=cl:IntersectsGameObject(aW)if cj~=nil then table.insert(co,cj)end end end;if cn==true then co=table.sortby(co,"distance")end;return co end;function Ray.IntersectsGameObject(cl,cp)local aW=GameObject.Get(cp,true)local cj=nil;if aW.inner==nil then return nil end;local bn=aW.modelRenderer;if bn~=nil then cj=cl:IntersectsModelRenderer(bn,true)end;if cj==nil then bn=aW.mapRenderer;if bn~=nil then cj=cl:IntersectsMapRenderer(bn,true)end end;if cj==nil then bn=aW.textRenderer;if bn~=nil then cj=cl:IntersectsTextRenderer(bn,true)end end;if cj~=nil then cj.gameObject=aW end;return cj end;Ray.oIntersectsPlane=Ray.IntersectsPlane;function Ray.IntersectsPlane(cl,cq,cr)local ca=Ray.oIntersectsPlane(cl,cq)if cr and ca~=nil then return RaycastHit.New({distance=ca,hitPosition=cl.position+cl.direction*ca,hitObject=cq})end;return ca end;Ray.oIntersectsModelRenderer=Ray.IntersectsModelRenderer;function Ray.IntersectsModelRenderer(cl,bM,cr)local ca,cs=Ray.oIntersectsModelRenderer(cl,bM)if cr and ca~=nil then return RaycastHit.New({distance=ca,normal=cs,hitPosition=cl.position+cl.direction*ca,hitObject=bM,gameObject=bM.gameObject})end;return ca,cs end;Ray.oIntersectsMapRenderer=Ray.IntersectsMapRenderer;function Ray.IntersectsMapRenderer(cl,bR,cr)local ca,cs,ct,cu=Ray.oIntersectsMapRenderer(cl,bR)if ct~=nil then setmetatable(ct,Vector3)end;if cu~=nil then setmetatable(cu,Vector3)end;if cr and ca~=nil then return RaycastHit.New({distance=ca,normal=cs,hitBlockLocation=ct,adjacentBlockLocation=cu,hitPosition=cl.position+cl.direction*ca,hitObject=bR,gameObject=bR.gameObject})end;return ca,cs,ct,cu end;Ray.oIntersectsTextRenderer=Ray.IntersectsTextRenderer;function Ray.IntersectsTextRenderer(cl,bW,cr)local ca,cs=Ray.oIntersectsTextRenderer(cl,bW)if cr and ca~=nil then return RaycastHit.New({distance=ca,normal=cs,hitPosition=cl.position+cl.direction*ca,hitObject=bW,gameObject=bW.gameObject})end;return ca,cs end;function Scene.Load(cv)CraftStudio.LoadScene(cv)end;CraftStudio.oLoadScene=CraftStudio.LoadScene;function CraftStudio.LoadScene(cv)local cw=Asset.Get(cv,"Scene",true)Daneel.Event.Fire("OnNewSceneWillLoad",cw)Daneel.Event.events={}Scene.current=cw;CraftStudio.oLoadScene(cw)end;function Scene.Append(cv,cx)local cw=Asset.Get(cv,"Scene",true)local bK=nil;if cx~=nil then bK=GameObject.Get(cx,true)end;return CraftStudio.AppendScene(cw,bK)end;CraftStudio.oDestroy=CraftStudio.Destroy;function CraftStudio.Destroy(au)if type(au)=="table"then Daneel.Event.Fire(au,"OnDestroy",au)Daneel.Event.StopListen(au)au.isDestroyed=true end;CraftStudio.oDestroy(au)end;local cy={"ray","Ray"}local cz={"returnRaycastHit",defaultValue=false}table.mergein(Daneel.Debug.functionArgumentsInfo,{["Ray.Cast"]={cy,{"gameObjects",o},{"sortByDistance",defaultValue=false}},["Ray.IntersectsGameObject"]={cy,{"gameObjectNameOrInstance",{n,bt}},cz},["Ray.IntersectsPlane"]={cy,{"plane","Plane"},cz},["Ray.IntersectsModelRenderer"]={cy,{"modelRenderer","ModelRenderer"},cz},["Ray.IntersectsMapRenderer"]={cy,{"mapRenderer","MapRenderer"},cz},["Ray.IntersectsTextRenderer"]={cy,{"textRenderer","TextRenderer"},cz},["Scene.Load"]={{"sceneNameOrAsset",{n,"Scene"}}},["CraftStudio.LoadScene"]={{"sceneNameOrAsset",{n,"Scene"}}},["Scene.Append"]={{"sceneNameOrAsset",{n,"Scene"}},{"parentNameOrInstance",{n,bt},isOptional=true}},["CraftStudio.Destroy"]={{"object"}}})CraftStudio.Input.isMouseLocked=false;CraftStudio.Input.oLockMouse=CraftStudio.Input.LockMouse;function CraftStudio.Input.LockMouse()CraftStudio.Input.isMouseLocked=true;CraftStudio.Input.oLockMouse()end;CraftStudio.Input.oUnlockMouse=CraftStudio.Input.UnlockMouse;function CraftStudio.Input.UnlockMouse()CraftStudio.Input.isMouseLocked=false;CraftStudio.Input.oUnlockMouse()end;function CraftStudio.Input.ToggleMouseLock()if CraftStudio.Input.isMouseLocked then CraftStudio.Input.UnlockMouse()else CraftStudio.Input.LockMouse()end end;setmetatable(GameObject,{__call=function(am,...)return am.New(...)end})function GameObject.__tostring(aW)if rawget(aW,"inner")==nil then return"Destroyed GameObject: "..tostring(aW:GetId())..": '"..tostring(aW._name).."': "..Daneel.Debug.ToRawString(aW)end;return"GameObject: "..aW:GetId()..": '"..aW:GetName().."'"end;function GameObject.__index(aW,G)if GameObject[G]~=nil then return GameObject[G]end;if type(G)=="string"then local ap=string.ucfirst(G)if G~=ap then local ar="Get"..ap;if GameObject[ar]~=nil then return GameObject[ar](aW)end end end;return nil end;function GameObject.__newindex(aW,G,h)local ap=G;if type(G)=="string"then ap=string.ucfirst(G)end;if G~=ap and G~="transform"then local ar="Set"..ap;if GameObject[ar]~=nil then return GameObject[ar](aW,h)end end;rawset(aW,G,h)end;function GameObject.New(aY,bB)local aW=nil;local cw=Asset.Get(aY,"Scene")if cw~=nil then aW=CraftStudio.AppendScene(cw)else aW=CraftStudio.CreateGameObject(aY)end;if bB~=nil and aW~=nil then aW:Set(bB)end;return aW end;function GameObject.Instantiate(cA,cv,bB)local cw=Asset.Get(cv,"Scene",true)local aW=CraftStudio.Instantiate(cA,cw)if bB~=nil then aW:Set(bB)end;return aW end;function GameObject.Set(aW,bB)local aF="GameObject.Set( gameObject[, params] ) :"if bB.parent~=nil then aW:SetParent(bB.parent)bB.parent=nil end;if bB.transform~=nil then aW.transform:Set(bB.transform)bB.transform=nil end;for p,bl in pairs(Daneel.Config.componentTypes)do if bl~="ScriptedBehavior"and bl~="Transform"then local cB=string.lcfirst(bl)local cC=bB[cB]if cC~=nil then bB[cB]=nil;Daneel.Debug.CheckArgType(cC,"params."..cB,"table",aF)local bn=aW[cB]if bn==nil then bn=aW:GetComponent(bl)end;if bn==nil then bn=aW:AddComponent(bl,cC)else bn:Set(cC)end end end end;for G,h in pairs(bB)do if G=="tags"then aW:RemoveTag()aW:AddTag(h)else aW[G]=h end end end;function GameObject.Get(aY,cD)if getmetatable(aY)==GameObject then return aY end;local aF="GameObject.Get( name[, errorIfGameObjectNotFound] ) : "local cE=string.split(aY,".")local aW=CraftStudio.FindGameObject(cE[1])if aW==nil and cD==true then error(aF.."GameObject with name '"..cE[1].."' (from '"..aY.."') was not found.")end;if aW~=nil then local cF=aY;local cG=table.remove(cE,1)for p,aY in ipairs(cE)do aW=aW:GetChild(aY)cG=cG.."."..aY;if aW==nil then if cD==true then error(aF.."GameObject with name '"..cG.."' (from '"..cF.."') was not found.")end;break end end end;return aW end;function GameObject.GetId(aW)return Daneel.Utilities.GetId(aW)end;GameObject.oSetParent=GameObject.SetParent;function GameObject.SetParent(aW,cx,cH)local bK=nil;if cx~=nil then bK=GameObject.Get(cx,true)end;if cH==nil then cH=false end;GameObject.oSetParent(aW,bK,cH)end;function GameObject.GetChild(aW,aY,E)if E==nil then E=false end;local cI=nil;if aY==nil then local cJ=aW:GetChildren()cI=cJ[1]else local cE=string.split(aY,".")for p,aY in ipairs(cE)do aW=aW:FindChild(aY,E)if aW==nil then break end end;cI=aW end;return cI end;GameObject.oGetChildren=GameObject.GetChildren;function GameObject.GetChildren(aW,E,cK)local cL=GameObject.oGetChildren(aW)if E then for p,cI in ipairs(table.copy(cL))do cL=table.merge(cL,cI:GetChildren(true))end end;if cK then table.insert(cL,1,aW)end;return cL end;function GameObject.GetChildrenByName(aW,E,cK)local cM=aW:GetChildren(E,cK)local cN={}for p=1,#cM do local cI=cM[p]cN[cI:GetName()]=cI end;return cN end;GameObject.oSendMessage=GameObject.SendMessage;function GameObject.GetInAncestors(aW,cO)local bK=aW:GetParent()if bK==nil then return end;if cO(bK)==true then return bK end;return bK:GetInAncestors(cO)end;function GameObject.SendMessage(aW,b4,j)if Daneel.Config.debug.enableDebug then local aX=Daneel.Debug.Try(function()GameObject.oSendMessage(aW,b4,j)end)if not aX then local cP="No data"local K=0;if j~=nil then K=table.getlength(j)cP="Data with "..K.." entries"end;print("GameObject.SendMessage( gameObject, functionName[, data] ) : Error sending message with parameters : ",aW,b4,cP)if K>0 then table.print(j)end end else GameObject.oSendMessage(aW,b4,j)end end;function GameObject.BroadcastMessage(aW,b4,j)local cQ=aW:GetChildren(true,true)for p,bt in ipairs(cQ)do bt:SendMessage(b4,j)end end;function GameObject.Display(aW,h,cR)local cS=false;if h~=false and h~=0 then cS=true end;local cT=type(h)if cT=="boolean"then h=nil elseif cT=="number"and cR==true then h=Vector3:New(h)cT="table"end;local cU=aW.textRenderer or aW.modelRenderer or aW.mapRenderer;if cU~=nil and cR~=true and cT=="number"then if not cS and aW.displayOpacity==nil then aW.displayOpacity=cU:GetOpacity()end;if cS then h=h or aW.displayOpacity or 1 else h=h or 0 end;cU:SetOpacity(h)else if not cS and aW.displayLocalPosition==nil then aW.displayLocalPosition=aW.transform:GetLocalPosition()end;if cS then h=h or aW.displayLocalPosition or Vector3:New(1)else h=h or Vector3:New(0,0,999)end;aW.transform:SetLocalPosition(h)end;aW.isDisplayed=cS;Daneel.Event.Fire(aW,"OnDisplay",aW)end;function GameObject.AddComponent(aW,bl,bB)local aF="GameObject.AddComponent( gameObject, componentType[, params] ) : "bl=Daneel.Debug.CheckArgValue(bl,"componentType",Daneel.Config.componentTypes,aF,bl)local bn=nil;if Daneel.Config.componentObjects[bl]==nil then local cV=Asset.Get(bl,"Script")if cV==nil then if Daneel.Config.debug.enableDebug then error(aF.."Provided component type '"..tostring(bl).."' in not one of the component types, nor a script asset, path or alias.")end;return end;if bB==nil then bB={}end;bn=aW:CreateScriptedBehavior(cV,bB)bB=nil elseif Daneel.DefaultConfig().componentObjects[bl]~=nil then if bl=="Transform"then if Daneel.Config.debug.enableDebug then print(aF.."Can't add a transform component because gameObjects may only have one transform.")end;return elseif bl=="ScriptedBehavior"then if Daneel.Config.debug.enableDebug then print(aF.."To add a scripted behavior, pass the script asset or path instead of 'ScriptedBehavior' as argument 'componentType'.")end;return end;bn=aW:CreateComponent(bl)local cW=Daneel.Config[string.lcfirst(bl)]if cW~=nil then bB=table.merge(cW,bB)end;if bB~=nil then bn:Set(bB)end else local bm=Daneel.Config.componentObjects[bl]if bm~=nil and type(bm.New)=="function"then bn=bm.New(aW,bB)else if Daneel.Config.debug.enableDebug then error(aF.."Custom component of type '"..bl.."' does not provide a New() function; Can't create the component.")end;return end end;Daneel.Event.Fire(aW,"OnNewComponent",bn)return bn end;GameObject.oGetComponent=GameObject.GetComponent;GameObject.oGetScriptedBehavior=GameObject.GetScriptedBehavior;function GameObject.GetComponent(aW,bl)local aF="GameObject.GetComponent( gameObject, componentType ) : "bl=Daneel.Debug.CheckArgValue(bl,"componentType",Daneel.Config.componentTypes,aF,bl)local cB=bl;if type(bl)=="string"then cB=string.lcfirst(bl)end;local bn=nil;if cB~="scriptedBehavior"then bn=aW[cB]end;if bn==nil then if Daneel.DefaultConfig().componentObjects[bl]~=nil then bn=GameObject.oGetComponent(aW,bl)elseif Daneel.Config.componentObjects[bl]==nil then local cV=Asset.Get(bl,"Script",true)bn=GameObject.oGetScriptedBehavior(aW,cV)end end;return bn end;function GameObject.GetScriptedBehavior(aW,cX)local cV=Asset.Get(cX,"Script",true)return GameObject.oGetScriptedBehavior(aW,cV)end;function GameObject.Destroy(aW)for p,bt in pairs(aW:GetChildren(true,true))do bt:RemoveTag()end;for G,h in pairs(aW)do if G~="inner"and type(h)=="table"then Daneel.Event.Fire(h,"OnDestroy",h)end end;aW._name=aW:GetName()CraftStudio.Destroy(aW)end;GameObject.Tags={}function GameObject.GetWithTag(cY)local cZ=cY;if type(cZ)=="string"then cZ={cZ}end;local c_={}local d0=false;for p,cY in pairs(cZ)do local cm=GameObject.Tags[cY]if cm~=nil then for a5,aW in pairs(cm)do if aW.inner~=nil then if aW:HasTag(cZ)and not table.containsvalue(c_,aW)then table.insert(c_,aW)end else cm[a5]=nil;d0=true end end;if d0 then GameObject.Tags[cY]=table.reindex(cm)d0=false end end end;return c_ end;function GameObject.GetTags(aW)local cZ={}for cY,cm in pairs(GameObject.Tags)do if table.containsvalue(cm,aW)then table.insert(cZ,cY)end end;return cZ end;function GameObject.AddTag(aW,cY)local cZ=cY;if type(cZ)=="string"then cZ={cZ}end;for p,cY in pairs(cZ)do if GameObject.Tags[cY]==nil then GameObject.Tags[cY]={aW}elseif not table.containsvalue(GameObject.Tags[cY],aW)then table.insert(GameObject.Tags[cY],aW)end end end;function GameObject.RemoveTag(aW,cY)local cZ=cY;if type(cZ)=="string"then cZ={cZ}end;for cY,cm in pairs(GameObject.Tags)do if cZ==nil or table.containsvalue(cZ,cY)then table.removevalue(GameObject.Tags[cY],aW)end end end;function GameObject.HasTag(aW,cY,d1)local cZ=cY;if type(cZ)=="string"then cZ={cZ}end;local d2=false;if d1==true then for p,cY in pairs(cZ)do if GameObject.Tags[cY]~=nil and table.containsvalue(GameObject.Tags[cY],aW)then d2=true;break end end else d2=true;for p,cY in pairs(cZ)do if GameObject.Tags[cY]==nil or not table.containsvalue(GameObject.Tags[cY],aW)then d2=false;break end end end;return d2 end;local aA={"tag",{"string","table"}}local d3={"gameObject","GameObject"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["GameObject.New"]={{"name",{n,"Scene"}},{"params",o,isOptional=true}},["GameObject.Instantiate"]={{"name",n},{"sceneNameOrAsset",{n,"Scene"}},{"params",o,isOptional=true}},["GameObject.Set"]={d3,bw},["GameObject.Get"]={{"name",{n,"GameObject"}},{"errorIfGameObjectNotFound",defaultValue=false}},["GameObject.Destroy"]={d3},["GameObject.SetParent"]={d3,{"parentNameOrInstance",{n,"GameObject"},isOptional=true},{"keepLocalTransform",defaultValue=false}},["GameObject.GetChild"]={d3,{"name",n,isOptional=true},{"recursive",defaultValue=false}},["GameObject.GetChildren"]={d3,{"recursive",defaultValue=false},{"includeSelf",defaultValue=false}},["GameObject.GetChildrenByName"]={d3,{"recursive",defaultValue=false},{"includeSelf",defaultValue=false}},["GameObject.GetInAncestors"]={d3,{"searchFunction","function"}},["GameObject.SendMessage"]={d3,{"functionName",n},{"data",o,isOptional=true}},["GameObject.BroadcastMessage"]={d3,{"functionName",n},{"data",o,isOptional=true}},["GameObject.AddComponent"]={d3,{"componentType",{n,"Script"}},{"params",o,isOptional=true}},["GameObject.GetComponent"]={d3,{"componentType",{n,"Script"}}},["GameObject.GetScriptedBehavior"]={d3,{"scriptNameOrAsset",{n,"Script"}}},["GameObject.GetWithTag"]={aA},["GameObject.GetTags"]={d3},["GameObject.AddTag"]={d3,aA},["GameObject.RemoveTag"]={d3,{"tag",{"string","table"},isOptional=true}},["GameObject.HasTag"]={d3,aA,{"atLeastOneTag",defaultValue=false}}})Daneel.modules.Tags={Awake=function()GameObject.Tags={}end}GUI={}local n="string"local d="boolean"local aw="number"local o="table"local bt="GameObject"local bu="Vector2"local bv="Vector3"local d3={"gameObject",bt}local d4={"params",o,defaultValue={}}local bw={"params",o}function GUI.ToSceneUnit(h,c2)if type(h)=="string"then h=h:trim()if h:find("px")then if c2~=nil and getmetatable(c2)==GameObject then c2=c2.camera end;if c2==nil then error("GUI.ToSceneUnit(value, camera) : Can't convert the value '"..h.."' from pixels to scene units because no camera component has been passed as argument.")end;h=tonumber(h:sub(0,#h-2))*c2:GetPixelsToUnits()elseif h:find("u")then h=tonumber(h:sub(0,#h-1))else h=tonumber(h)end end;return h end;function GUI.ToPixel(h,d5,c2)if type(h)=="string"then if type(d5)=="table"then c2=d5;d5=nil end;h=h:trim()local c4=CS.Screen.GetSize()if h:find("px")then h=tonumber(h:sub(0,#h-2))elseif h:find("%",1,true)and d5~=nil then h=c4[d5]*tonumber(h:sub(0,#h-1))/100 elseif h:find("s")and d5~=nil then h=h:sub(2)if h==""then h=0 end;h=c4[d5]+tonumber(h)elseif h:find("u")then if c2==nil then error("GUI.ToPixel(value, camera) : Can't convert the value '"..h.."' from pixels to scene units because no camera component has been passed as argument.")end;h=tonumber(h:sub(0,#h-1))/c2:GetPixelsToUnits()else h=tonumber(h)end end;return h end;local function d6(aW,aF)local d7=aW:GetInAncestors(function(bt)if bt.camera~=nil then return true end end)if d7==nil and aF~=nil then error(aF..": The "..tostring(aW).." isn't a child of a game object with a camera component and no camera game object is passed via the 'params' argument.")end;return d7 end;GUI.Hud={}GUI.Hud.__index=GUI.Hud;function GUI.Hud.CreateOriginGO(aW)if aW.camera==nil then error("GUI.Hud.CreateOriginGO(): Provided game object "..tostring(aW).." has no camera component.")end;local c6=aW.camera:GetPixelsToUnits()local c4=CS.Screen.GetSize()local d8=CS.CreateGameObject("Hud Origin for camera "..aW:GetName(),aW)d8.transform:SetLocalPosition(Vector3:New(-c4.x*c6/2,c4.y*c6/2,0))aW.hudOriginGO=d8 end;function GUI.Hud.ToHudPosition()error("GUI.Hud.ToHudPosition() is deprecated since v1.5.0. Use Camera.WorldToScreenPoint() or Camera.Project() instead.")end;function Vector2.ToPixel(cc,c2)return Vector2.New(GUI.ToPixel(cc.x,"x",c2),GUI.ToPixel(cc.y,"y",c2))end;function GUI.Hud.New(aW,bB)local d9=setmetatable({},GUI.Hud)d9.gameObject=aW;aW.hud=d9;d9.id=Daneel.Utilities.GetId()bB=bB or{}d9.cameraGO=bB.cameraGO or d6(aW,"GUI.Hud.New()")if d9.cameraGO.hudOriginGO==nil then GUI.Hud.CreateOriginGO(d9.cameraGO)end;d9:Set(table.merge(GUI.Config.hud,bB))return d9 end;function GUI.Hud.SetPosition(d9,bL)bL=bL:ToPixel(d9.cameraGO.camera)local da=d9.cameraGO.hudOriginGO.transform:GetPosition()+Vector3:New(bL.x*d9.cameraGO.camera:GetPixelsToUnits(),-bL.y*d9.cameraGO.camera:GetPixelsToUnits(),0)da.z=d9.gameObject.transform:GetPosition().z;d9.gameObject.transform:SetPosition(da)end;function GUI.Hud.GetPosition(d9)local bL=d9.gameObject.transform:GetPosition()-d9.cameraGO.hudOriginGO.transform:GetPosition()bL=bL/d9.cameraGO.camera:GetPixelsToUnits()return Vector2.New(math.round(bL.x),math.round(-bL.y))end;function GUI.Hud.SetLocalPosition(d9,bL)bL=bL:ToPixel(d9.cameraGO.camera)local bK=d9.gameObject.parent or d9.cameraGO.hudOriginGO;local da=bK.transform:GetPosition()+Vector3:New(bL.x*d9.cameraGO.camera:GetPixelsToUnits(),-bL.y*d9.cameraGO.camera:GetPixelsToUnits(),0)da.z=d9.gameObject.transform:GetPosition().z;d9.gameObject.transform:SetPosition(da)end;function GUI.Hud.GetLocalPosition(d9)local bK=d9.gameObject.parent or d9.cameraGO.hudOriginGO;local bL=d9.gameObject.transform:GetPosition()-bK.transform:GetPosition()bL=bL/d9.cameraGO.camera:GetPixelsToUnits()return Vector2.New(math.round(bL.x),math.round(-bL.y))end;function GUI.Hud.SetLayer(d9,db)local dc=d9.cameraGO.hudOriginGO.transform:GetPosition().z;local dd=d9.gameObject.transform:GetPosition()d9.gameObject.transform:SetPosition(Vector3:New(dd.x,dd.y,dc-db))end;function GUI.Hud.GetLayer(d9)local dc=d9.cameraGO.hudOriginGO.transform:GetPosition().z;return math.round(dc-d9.gameObject.transform:GetPosition().z,1)end;function GUI.Hud.SetLocalLayer(d9,db)local bK=d9.gameObject.parent or d9.cameraGO.hudOriginGO;local dc=bK.transform:GetPosition().z;local dd=d9.gameObject.transform:GetPosition()d9.gameObject.transform:SetPosition(Vector3:New(dd.x,dd.y,dc-db))end;function GUI.Hud.GetLocalLayer(d9)local bK=d9.gameObject.parent or d9.cameraGO.hudOriginGO;local dc=bK.transform:GetPosition().z;return math.round(dc-d9.gameObject.transform:GetPosition().z,1)end;local de={"hud","Hud"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["GUI.Hud.CreateOriginGO"]={d3},["GUI.Hud.New"]={d3,d4},["GUI.Hud.SetPosition"]={de,{"position",bu}},["GUI.Hud.GetPosition"]={de},["GUI.Hud.SetLocalPosition"]={de,{"position",bu}},["GUI.Hud.GetLocalPosition"]={de},["GUI.Hud.SetLayer"]={de,{"layer",aw}},["GUI.Hud.GetLayer"]={de},["GUI.Hud.SetLocalLayer"]={de,{"layer",aw}},["GUI.Hud.GetLocalLayer"]={de}})GUI.Toggle={}GUI.Toggle.__index=GUI.Toggle;function GUI.Toggle.New(aW,bB)if Daneel.modules.MouseInput==nil then error("GUI.Toggle.New(): The 'Mouse Input' module is missing from your project. It is required for the player to interact with the GUI.Toggle, GUI.Input and GUI.Slider components.")end;local df=table.copy(GUI.Config.toggle)df.defaultText=df.text;df.text=nil;df.gameObject=aW;df.id=Daneel.Utilities.GetId()setmetatable(df,GUI.Toggle)if bB~=nil then df:Set(bB)end;aW.toggle=df;aW:AddTag("guiComponent")aW.OnNewComponent=function(bn)if bn==nil then return end;local aK=getmetatable(bn)if aK==TextRenderer then local aO=bn:GetText()if aO==nil then aO=df.defaultText end;df:SetText(aO)elseif aK==ModelRenderer and df.checkedModel~=nil then if df.isChecked and df.checkedModel~=nil then bn:SetModel(df.checkedModel)elseif not df.isChecked and df.uncheckedModel~=nil then bn:SetModel(df.uncheckedModel)end end end;aW.OnClick=function()if not(df.group~=nil and df.isChecked)then df:Check(not df.isChecked)end end;if aW.textRenderer~=nil and aW.textRenderer:GetText()~=nil then df:SetText(aW.textRenderer:GetText())end;if aW.modelRenderer~=nil then if df.isChecked and df.checkedModel~=nil then df.gameObject.modelRenderer:SetModel(df.checkedModel)elseif not df.isChecked and df.uncheckedModel~=nil then df.gameObject.modelRenderer:SetModel(df.uncheckedModel)end end;df:Check(df.isChecked,true)return df end;function GUI.Toggle.SetText(df,aO)if df.gameObject.textRenderer~=nil then if df.isChecked==true then aO=Daneel.Utilities.ReplaceInString(df.checkedMark,{text=aO})else aO=Daneel.Utilities.ReplaceInString(df.uncheckedMark,{text=aO})end;df.gameObject.textRenderer:SetText(aO)else if Daneel.Config.debug.enableDebug then print("WARNING: GUI.Toggle.SetText(toggle, text): Can't set the toggle's text because no TextRenderer component has been found on the gameObject '"..tostring(df.gameObject).."'. Waiting for a TextRenderer to be added.")end;df.defaultText=aO end end;function GUI.Toggle.GetText(df)local aO=nil;if df.gameObject.textRenderer~=nil then aO=df.gameObject.textRenderer:GetText()if aO==nil then aO=df.defaultText end;local dg=df.checkedMark;if not df.isChecked then dg=df.uncheckedMark end;local dh,di=dg:find(":text")if dh~=nil and di~=nil then local dj=dg:sub(1,dh-1)local dk=dg:sub(di+1)aO=aO:gsub(dj,""):gsub(dk,"")end elseif Daneel.Config.debug.enableDebug then print("WARNING: GUI.Toggle.GetText(toggle): Can't get the toggle's text because no TextRenderer component has been found on the gameObject '"..tostring(df.gameObject).."'. Returning nil.")end;return aO end;function GUI.Toggle.Check(df,dl,dm)if dl==nil then dl=true end;if dm==true or df.isChecked~=dl then local aO=nil;if df.gameObject.textRenderer~=nil then aO=df:GetText()end;df.isChecked=dl;if df.gameObject.textRenderer~=nil then df:SetText(aO)end;if df.gameObject.modelRenderer~=nil then if dl==true and df.checkedModel~=nil then df.gameObject.modelRenderer:SetModel(df.checkedModel)elseif dl==false and df.uncheckedModel~=nil then df.gameObject.modelRenderer:SetModel(df.uncheckedModel)end end;Daneel.Event.Fire(df,"OnUpdate",df)if df.Group~=nil and dl==true then local cm=GameObject.GetWithTag(df.Group)for p,aW in ipairs(cm)do if aW~=df.gameObject then aW.toggle:Check(false,true)end end end end end;function GUI.Toggle.SetGroup(df,dn)if dn==nil and df.Group~=nil then df.gameObject:RemoveTag(df.Group)else if df.Group~=nil then df.gameObject:RemoveTag(df.Group)end;df:Check(false)df.Group=dn;df.gameObject:AddTag(df.Group)end end;function GUI.Toggle.GetGroup(df)return df.Group end;function GUI.Toggle.Set(df,bB)local dn=bB.group;bB.group=nil;local dp=bB.isChecked;bB.isChecked=nil;for G,h in pairs(bB)do df[G]=h end;if dn~=nil then df:SetGroup(dn)end;if dp~=nil then df:Check(dp)end end;local dq={"toggle","Toggle"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["GUI.Toggle.New"]={d3,d4},["GUI.Toggle.Set"]={dq,bw},["GUI.Toggle.SetText"]={dq,{"text",n}},["GUI.Toggle.GetText"]={dq},["GUI.Toggle.Check"]={dq,{"state",defaultValue=true},{"forceUpdate",defaultValue=false}},["GUI.Toggle.SetGroup"]={dq,{"group",n,isOptional=true}},["GUI.Toggle.GetGroup"]={dq}})GUI.ProgressBar={}GUI.ProgressBar.__index=GUI.ProgressBar;function GUI.ProgressBar.New(aW,bB)local dr=table.copy(GUI.Config.progressBar)dr.gameObject=aW;dr.id=Daneel.Utilities.GetId()dr.value=nil;setmetatable(dr,GUI.ProgressBar)bB=bB or{}if bB.value==nil then bB.value=GUI.Config.progressBar.value end;dr.cameraGO=bB.cameraGO or d6(aW)dr:Set(bB)aW.progressBar=dr;return dr end;function GUI.ProgressBar.SetValue(dr,h)local aF="GUI.ProgressBar.SetValue(progressBar, value) : "local ds=dr.minValue;local dt=dr.maxValue;local du=nil;if type(h)=="string"then if h:endswith("%")then du=tonumber(h:sub(1,#h-1))/100;local dv=du;du=math.clamp(du,0.0,1.0)if du~=dv and Daneel.Config.debug.enableDebug then print(aF.."WARNING : value in percentage with value '"..h.."' is below 0% or above 100%.")end;h=(dt-ds)*du+ds else h=tonumber(h)end end;local dw=h;h=math.clamp(h,ds,dt)dr.minLength=GUI.ToSceneUnit(dr.minLength,dr.cameraGO)dr.maxLength=GUI.ToSceneUnit(dr.maxLength,dr.cameraGO)local dx=dr:GetValue()if h~=dx then if h~=dw and Daneel.Config.debug.enableDebug then print(aF.." WARNING : value with value '"..dw.."' is out of its boundaries : min='"..ds.."', max='"..dt.."'")end;local dy=dt-ds;du=(h-ds)/dy;dr.height=GUI.ToSceneUnit(dr.height,dr.cameraGO)local dz=(dr.maxLength-dr.minLength)*du+dr.minLength;local dA=dr.gameObject.transform:GetLocalScale()dr.gameObject.transform:SetLocalScale(Vector3:New(dz,dr.height,dA.z))Daneel.Event.Fire(dr,"OnUpdate",dr)end end;GUI.ProgressBar.SetProgress=GUI.ProgressBar.SetValue;function GUI.ProgressBar.UpdateValue(dr,h,dB)if h==dr._value then return end;dr._value=h;local ds=dr.minValue;local dt=dr.maxValue;local dC=dr.minLength;local du=nil;if type(h)=="string"then local I=h;h=tonumber(h)if h==nil then du=tonumber(I:sub(1,#I-1))/100 end end;if du==nil then local dy=dt-ds;du=(h-ds)/dy end;du=math.clamp(du,0.0,1.0)local dz=(dr.maxLength-dC)*du+dC;local dA=dr.gameObject.transform:GetLocalScale()dr.gameObject.transform:SetLocalScale(Vector3:New(dz,dr.height,dA.z))if dB==true then Daneel.Event.Fire(dr,"OnUpdate",dr)end end;GUI.ProgressBar.UpdateProgress=GUI.ProgressBar.UpdateValue;function GUI.ProgressBar.GetValue(dr,dD)local bJ=math.round(dr.gameObject.transform:GetLocalScale().x,2)local dy=dr.maxLength-dr.minLength;local h=(bJ-dr.minLength)/dy;if dD==true then h=h*100 else h=(dr.maxValue-dr.minValue)*h+dr.minValue end;return h end;GUI.ProgressBar.GetProgress=GUI.ProgressBar.GetValue;function GUI.ProgressBar.SetHeight(dr,dE)local dA=dr.gameObject.transform:GetLocalScale()local dE=GUI.ToSceneUnit(dE,dr.cameraGO)dr.gameObject.transform:SetLocalScale(Vector3:New(dA.x,dE,dA.z))end;function GUI.ProgressBar.GetHeight(dr)return dr.gameObject.transform:GetLocalScale().y end;function GUI.ProgressBar.Set(dr,bB)local h=bB.value;bB.value=nil;if h==nil then h=dr:GetValue()end;for G,h in pairs(bB)do dr[G]=h end;dr:SetValue(h)end;local dF={"progressBar","ProgressBar"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["GUI.ProgressBar.New"]={d3,d4},["GUI.ProgressBar.Set"]={dF,bw},["GUI.ProgressBar.SetValue"]={dF,{"value",{n,aw}}},["GUI.ProgressBar.GetValue"]={dF,{"getAsPercentage",defaultValue=false}},["GUI.ProgressBar.SetHeight"]={dF,{"height",{n,aw}}},["GUI.ProgressBar.GetHeight"]={dF}})GUI.Slider={}GUI.Slider.__index=GUI.Slider;function GUI.Slider.New(aW,bB)if Daneel.modules.MouseInput==nil then error("GUI.Slider.New(): The 'Mouse Input' module is missing from your project. It is required for the player to interact with the GUI.Toggle, GUI.Input and GUI.Slider components.")end;local dG=table.copy(GUI.Config.slider)dG.gameObject=aW;dG.id=Daneel.Utilities.GetId()dG.value=nil;dG.parent=dG.gameObject:GetParent()if dG.parent==nil then local bt=CS.CreateGameObject("SliderParent")bt.transform:SetPosition(dG.gameObject.transform:GetPosition())dG.gameObject:SetParent(bt)end;setmetatable(dG,GUI.Slider)aW.slider=dG;aW:AddTag("guiComponent")aW.OnDrag=function()local dH=CraftStudio.Input.GetMouseDelta()local dI=Vector3:New(dH.x,0,0)if dG.axis=="y"then dI=Vector3:New(0,-dH.y,0,0)end;aW.transform:Move(dI*dG.cameraGO.camera:GetPixelsToUnits())local dJ=aW.transform:GetPosition()local dK=dG.parent.transform:GetPosition()if dG.axis=="x"and dJ.x<dK.x then dG:SetValue(dG.minValue)elseif dG.axis=="y"and dJ.y<dK.y then dG:SetValue(dG.minValue)elseif dG:GetValue()>dG.maxValue then dG:SetValue(dG.maxValue)else Daneel.Event.Fire(dG,"OnUpdate",dG)end end;bB=bB or{}dG.cameraGO=bB.cameraGO or d6(aW,"GUI.Slider.New()")if bB.value==nil then bB.value=GUI.Config.slider.value end;dG:Set(bB)return dG end;function GUI.Slider.SetValue(dG,h)local aF="GUI.Slider.SetValue( slider, value ) : "local dt=dG.maxValue;local ds=dG.minValue;local dL=nil;if type(h)=="string"then if h:endswith("%")then dL=tonumber(h:sub(1,#h-1))/100;h=(dt-ds)*dL+ds else h=tonumber(h)end end;local dw=h;h=math.clamp(h,ds,dt)if h~=dw and Daneel.Config.debug.enableDebug then print(aF.."WARNING : Argument 'value' with value '"..dw.."' is out of its boundaries : min='"..ds.."', max='"..dt.."'")end;local dy=dt-ds;dL=(h-ds)/dy;dG.length=GUI.ToSceneUnit(dG.length,dG.cameraGO)local dM=-Vector3:Left()if dG.axis=="y"then dM=Vector3:Up()end;local bH=Vector3.Rotate(dM,dG.gameObject.transform:GetOrientation())local da=dG.parent.transform:GetPosition()+bH*dG.length*dL;dG.gameObject.transform:SetPosition(da)Daneel.Event.Fire(dG,"OnUpdate",dG)end;function GUI.Slider.GetValue(dG,dD)local dL=Vector3.Distance(dG.parent.transform:GetPosition(),dG.gameObject.transform:GetPosition())/dG.length;local h=dL*100;if dD~=true then h=(dG.maxValue-dG.minValue)*dL+dG.minValue end;return h end;function GUI.Slider.Set(dG,bB)local h=bB.value;bB.value=nil;if h==nil then h=dG:GetValue()end;for G,h in pairs(bB)do dG[G]=h end;dG:SetValue(h)end;GUI.Input={}GUI.Input.__index=GUI.Input;function GUI.Input.New(aW,bB)if Daneel.modules.MouseInput==nil then error("GUI.Input.New(): The 'Mouse Input' module is missing from your project. It is required for the player to interact with the GUI.Toggle, GUI.Input and GUI.Slider components.")end;bB=bB or{}local dN=table.merge(GUI.Config.input,bB)dN.gameObject=aW;dN.id=Daneel.Utilities.GetId()setmetatable(dN,GUI.Input)if dN.OnTextEntered==nil then dN.OnTextEntered=function(z)if dN.isFocused then local dO=string.byte(z)if dO==8 then local aO=aW.textRenderer:GetText()dN:Update(aO:sub(1,#aO-1),true)elseif dO>=32 and dO<=127 then if dN.characterRange~=nil and dN.characterRange:find(z,1,true)==nil then return end;dN:Update(z)end end end end;local dP=aW:GetChild("Cursor")if dP~=nil then dN.cursorGO=dP;dP.tweener=Tween.Timer(dN.cursorBlinkInterval,function(dQ)if dQ.gameObject==nil or dQ.gameObject.inner==nil then dQ:Destroy()return end;local dR=1;if dQ.gameObject.modelRenderer:GetOpacity()==1 then dR=0 end;dQ.gameObject.modelRenderer:SetOpacity(dR)end,true)dP.tweener.isPaused=true;dP.tweener.gameObject=dP end;local dS=dN.isFocused;dN.isFocused=nil;dN:Focus(dS)aW.input=dN;aW:AddTag("guiComponent")aW:AddTag("gui_input")local dT=aW:GetChild("Background")if dT~=nil then dN.backgroundGO=dT;if dN.focusOnBackgroundClick then dT:AddTag("guiComponent")end end;return dN end;GUI.Input.Module={}Daneel.modules.GUIInput=GUI.Input.Module;function GUI.Input.Module.Update()if CS.Input.WasButtonJustReleased("LeftMouse")then local dU=GameObject.GetWithTag("gui_input")local dV=nil;for p,dW in pairs(dU)do local dN=dW.input;local dX=dW.isMouseOver;if dX~=true and dN.focusOnBackgroundClick and dN.backgroundGO~=nil then dX=dN.backgroundGO.isMouseOver end;if dX==true then dV=dN else dN:Focus(false)end end;if dV~=nil then dV:Focus(true)end end;if CS.Input.WasButtonJustReleased("ValidateInput")then local dU=GameObject.GetWithTag("gui_input")for p,dW in pairs(dU)do local dN=dW.input;if dN.isFocused then Daneel.Event.Fire(dN,"OnValidate",dN)break end end end end;function GUI.Input.Focus(dN,dY)if dY==nil then dY=true end;if dN.isFocused~=dY then dN.isFocused=dY;local aO=string.trim(dN.gameObject.textRenderer:GetText())if dY==true then CS.Input.OnTextEntered(dN.OnTextEntered)if aO==dN.defaultValue then dN.gameObject.textRenderer:SetText("")end else CS.Input.OnTextEntered(nil)if dN.defaultValue~=nil and dN.defaultValue~=""and aO==""then dN.gameObject.textRenderer:SetText(dN.defaultValue)end end;Daneel.Event.Fire(dN,"OnFocus",dN)dN:UpdateCursor()end end;function GUI.Input.UpdateCursor(dN)if dN.cursorGO~=nil then local bZ=dN.gameObject.textRenderer:GetAlignment()if bZ~=TextRenderer.Alignment.Right then local K=dN.gameObject.textRenderer:GetTextWidth()if bZ==TextRenderer.Alignment.Center then K=K/2 end;dN.cursorGO.transform:SetLocalPosition(Vector3:New(K,0,0))end;local dR=0;if dN.isFocused then dR=1 end;dN.cursorGO.modelRenderer:SetOpacity(dR)dN.cursorGO.tweener.isPaused=not dN.isFocused;Daneel.Event.Fire(dN.cursorGO,"OnUpdate",dN)end end;function GUI.Input.Update(dN,aO,dZ)local d_=dN.gameObject.textRenderer:GetText()if not dZ then aO=d_..aO end;if#aO>dN.maxLength then aO=aO:sub(1,dN.maxLength)end;if d_~=aO then dN.gameObject.textRenderer:SetText(aO)Daneel.Event.Fire(dN,"OnUpdate",dN)dN:UpdateCursor()end end;local e0={"slider","Slider"}local e1={"input","Input"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["GUI.Slider.New"]={d3,d4},["GUI.Slider.Set"]={e0,bw},["GUI.Slider.SetValue"]={e0,{"value",{n,aw}}},["GUI.Slider.GetValue"]={e0,{"getAsPercentage",defaultValue=false}},["GUI.Input.New"]={d3,d4},["GUI.Input.Focus"]={e1,{"focus",defaultValue=true}},["GUI.Input.UpdateCursor"]={e1},["GUI.Input.Update"]={e1,{"text",n},{"replaceText",defaultValue=false}}})GUI.TextArea={}GUI.TextArea.__index=GUI.TextArea;function GUI.TextArea.New(aW,bB)local e2={}e2.gameObject=aW;aW.textArea=e2;e2.id=Daneel.Utilities.GetId()e2.lineGOs={}setmetatable(e2,GUI.TextArea)e2.textRuler=aW.textRenderer;if e2.textRuler==nil then e2.textRuler=aW:CreateComponent("TextRenderer")end;e2.textRuler:SetText("")bB=bB or{}e2.cameraGO=bB.cameraGO or d6(aW)e2:Set(table.merge(GUI.Config.textArea,bB))return e2 end;function GUI.TextArea.Set(e2,bB)local e3=e2.lineGOs;e2.lineGOs={}local aO=bB.text;bB.text=nil;for G,h in pairs(bB)do e2[G]=h end;e2.lineGOs=e3;if aO==nil then aO=e2.Text end;e2:SetText(aO)end;function GUI.TextArea.SetText(e2,aO)e2.Text=aO;local e4={aO}if e2.newLine~=""then e4=string.split(aO,e2.NewLine)end;local e5=e2.gameObject.transform:GetLocalScale()local e6=e2.AreaWidth;if e6~=nil and e6>0 then local e7=table.copy(e4)e4={}for p=1,#e7 do local e8=e7[p]if e2.textRuler:GetTextWidth(e8)*e5.x>e6 then local e9=""for a5=1,#e8 do local z=e8:sub(a5,a5)e9=e9 ..z;if e2.textRuler:GetTextWidth(e9)*e5.x>e6 then if z==" "then table.insert(e4,e9:sub(1,#e9-1))e9=""else local ea=""for Z=#e9,1,-1 do local eb=e9:sub(Z,Z)if eb==" "then break else ea=eb..ea end end;table.insert(e4,e9:sub(1,#e9-#ea))e9=ea end;if not e2.WordWrap then e9=nil;break end end end;if e9~=nil then table.insert(e4,e9)end else table.insert(e4,e8)end end end;if type(e2.linesFilter)=="function"then e4=e2.linesFilter(e2,e4)or e4 end;local ec=#e4;local e3=e2.lineGOs;local ed=#e3;local ee=e2.LineHeight/e5.y;local aW=e2.gameObject;local ef={font=e2.Font,alignment=e2.Alignment,opacity=e2.Opacity}local eg=-ee/2;if e2.VerticalAlignment=="middle"then eg=ee*ec/2-ee/2 elseif e2.VerticalAlignment=="bottom"then eg=ee*ec-ee/2 end;for p=1,ec do local e8=e4[p]ef.text=e8;if e3[p]~=nil then e3[p].transform:SetLocalPosition(Vector3:New(0,eg,0))e3[p].textRenderer:Set(ef)else local eh=CS.CreateGameObject("TextArea"..e2.id.."-Line"..p,aW)eh.transform:SetLocalPosition(Vector3:New(0,eg,0))eh.transform:SetLocalScale(Vector3:New(1))eh:CreateComponent("TextRenderer")eh.textRenderer:Set(ef)table.insert(e3,eh)end;eg=eg-ee end;if ec<ed then for p=ec+1,ed do e3[p].textRenderer:SetText("")end end;Daneel.Event.Fire(e2,"OnUpdate",e2)end;function GUI.TextArea.GetText(e2)return e2.Text end;function GUI.TextArea.AddLine(e2,e8,ei)local aO=e2.Text;if ei==true then aO=e8 ..e2.NewLine..aO else if aO~=""and not string.endswith(aO,e2.NewLine)then e8=e2.NewLine..e8 end;aO=aO..e8 end;e2:SetText(aO)end;function GUI.TextArea.SetAreaWidth(e2,e6)e6=math.clamp(GUI.ToSceneUnit(e6,e2.cameraGO),0,999)if e2.AreaWidth~=e6 then e2.AreaWidth=e6;if#e2.lineGOs>0 then e2:SetText(e2.Text)end end end;function GUI.TextArea.GetAreaWidth(e2)return e2.AreaWidth end;function GUI.TextArea.SetWordWrap(e2,ej)if e2.WordWrap~=ej then e2.WordWrap=ej;if#e2.lineGOs>0 then e2:SetText(e2.Text)end end end;function GUI.TextArea.GetWordWrap(e2)return e2.WordWrap end;function GUI.TextArea.SetNewLine(e2,e9)if e2.NewLine~=e9 then e2.NewLine=e9;if#e2.lineGOs>0 then e2:SetText(e2.Text)end end end;function GUI.TextArea.GetNewLine(e2)return e2.NewLine end;function GUI.TextArea.SetLineHeight(e2,ee)local ee=GUI.ToSceneUnit(ee,e2.cameraGO)if e2.LineHeight~=ee then e2.LineHeight=ee;if#e2.lineGOs>0 then e2:SetText(e2.Text)end end end;function GUI.TextArea.GetLineHeight(e2)return e2.LineHeight end;function GUI.TextArea.SetVerticalAlignment(e2,ek)local aF="GUI.TextArea.SetVerticalAlignment( textArea, verticalAlignment ) : "ek=Daneel.Debug.CheckArgValue(ek,"verticalAlignment",{"top","middle","bottom"},aF,GUI.Config.textArea.verticalAlignment)ek=string.trim(ek:lower())if e2.VerticalAlignment~=ek then e2.VerticalAlignment=ek;if#e2.lineGOs>0 then e2:SetText(e2.Text)end end end;function GUI.TextArea.GetVerticalAlignment(e2)return e2.VerticalAlignment end;function GUI.TextArea.SetFont(e2,bY)e2.textRuler:SetFont(bY)bY=e2.textRuler:GetFont()if e2.Font~=bY then e2.Font=bY;if#e2.lineGOs>0 then for p=1,#e2.lineGOs do e2.lineGOs[p].textRenderer:SetFont(e2.Font)end;e2:SetText(e2.Text)end end end;function GUI.TextArea.GetFont(e2)return e2.Font end;function GUI.TextArea.SetAlignment(e2,bZ)e2.textRuler:SetAlignment(bZ)bZ=e2.textRuler:GetAlignment()if e2.Alignment~=bZ then e2.Alignment=bZ;for p=1,#e2.lineGOs do e2.lineGOs[p].textRenderer:SetAlignment(e2.Alignment)end end end;function GUI.TextArea.GetAlignment(e2)return e2.Alignment end;function GUI.TextArea.SetOpacity(e2,dR)if e2.Opacity~=dR then e2.Opacity=dR;for p=1,#e2.lineGOs do e2.lineGOs[p].textRenderer:SetOpacity(dR)end end end;function GUI.TextArea.GetOpacity(e2)return e2.Opacity end;local el={"textArea","TextArea"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["GUI.TextArea.New"]={{"gameObject",bt},{"params",o,isOptional=true}},["GUI.TextArea.Set"]={el,bw},["GUI.TextArea.SetText"]={el,{"text",n}},["GUI.TextArea.GetText"]={el},["GUI.TextArea.AddLine"]={el,{"line",n},{"prepend",defaultValue=false}},["GUI.TextArea.SetAreaWidth"]={el,{"areaWidth",{n,aw},defaultValue=0}},["GUI.TextArea.GetAreaWidth"]={el},["GUI.TextArea.SetWordWrap"]={el,{"wordWrap",defaultValue=false}},["GUI.TextArea.GetWordWrap"]={el},["GUI.TextArea.SetNewLine"]={el,{"newLine",n}},["GUI.TextArea.GetNewLine"]={el},["GUI.TextArea.SetLineHeight"]={el,{"lineHeight",{n,aw}}},["GUI.TextArea.GetLineHeight"]={el},["GUI.TextArea.SetVerticalAlignment"]={el,{"verticalAlignment",n}},["GUI.TextArea.GetVerticalAlignment"]={el},["GUI.TextArea.SetFont"]={el,{"font",{n,"Font"}}},["GUI.TextArea.GetFont"]={el},["GUI.TextArea.SetAlignment"]={el,{"alignment",{n,"userdata",aw}}},["GUI.TextArea.GetAlignment"]={el},["GUI.TextArea.SetOpacity"]={el,{"opacity",aw}},["GUI.TextArea.GetOpacity"]={el}})Daneel.modules.GUI=GUI;function GUI.DefaultConfig()local bi={cameraName="HUD Camera",cameraGO=nil,originGO=nil,hud={},toggle={isChecked=false,text="Toggle",checkedMark=":text",uncheckedMark=":text",checkedModel=nil,uncheckedModel=nil},progressBar={height=1,minValue=0,maxValue=100,minLength=0,maxLength=5,value="100%"},slider={minValue=0,maxValue=100,length=5,axis="x",value="0%",OnTextEntered=nil},input={isFocused=false,maxLength=9999,defaultValue=nil,characterRange=nil,focusOnBackgroundClick=true,cursorBlinkInterval=0.5},textArea={areaWidth=0,wordWrap=false,newLine="<br>",lineHeight=1,verticalAlignment="top",font=nil,text="",alignment=nil,opacity=nil},componentObjects={Hud=GUI.Hud,Toggle=GUI.Toggle,ProgressBar=GUI.ProgressBar,Slider=GUI.Slider,Input=GUI.Input,TextArea=GUI.TextArea},componentTypes={},propertiesByComponentName={hud={"position","localPosition","layer","localLayer"},progressBar={"value","height"},slider={"value"},textArea={"text","areaWidth","lineHeight","opacity"}}}return bi end;GUI.Config=GUI.DefaultConfig()function GUI.Load()if Daneel.modules.Tween then table.mergein(Tween.Config.propertiesByComponentName,GUI.Config.propertiesByComponentName)end end;Draw={}Daneel.modules.Draw=Draw;local em={}local n="string"local d="boolean"local aw="number"local o="table"local _="Vector3"local d3={"gameObject","GameObject"}local bw={"params",o,defaultValue={}}local en={"line","LineRenderer"}local eo={"circle","CircleRenderer"}local ep={"draw",d,defaultValue=true}Draw.LineRenderer={}em["Draw.LineRenderer.New"]={d3,bw}function Draw.LineRenderer.New(aW,bB)local e8={origin=aW.transform:GetPosition(),_direction=Vector3:Left(),_length=1,_width=1,gameObject=aW}e8._endPosition=e8.origin;aW.lineRenderer=e8;setmetatable(e8,Draw.LineRenderer)bB=table.merge(Draw.Config.lineRenderer,bB)if bB.endPosition~=nil then bB.length=nil;bB.direction=nil end;e8:Set(bB)return e8 end;em["Draw.LineRenderer.Set"]={en,bw}function Draw.LineRenderer.Set(e8,bB)if bB.endPosition then if bB.length or bB.direction then if Daneel.Config.debug.enableDebug then local aO="Draw.LineRenderer.Set( line, params ) : The 'endPosition' property is set with value "..tostring(bB.endPosition)if bB.length then aO=aO.." The 'length' property with value '"..tostring(bB.length).."' has been ignored."end;if bB.direction then aO=aO.." The 'direction' property with value '"..tostring(bB.direction).."' has been ignored."end;print(aO)end;bB.length=nil;bB.direction=nil end end;local draw=false;for G,h in pairs(bB)do local ar="Set"..string.ucfirst(G)if Draw.LineRenderer[ar]~=nil then draw=true;if ar=="SetDirection"then Draw.LineRenderer[ar](e8,h,nil,false)else Draw.LineRenderer[ar](e8,h,false)end else e8[G]=h end end;if draw then e8:Draw()end end;em["Draw.LineRenderer.Draw"]={en}function Draw.LineRenderer.Draw(e8)e8.gameObject.transform:LookAt(e8._endPosition)e8.gameObject.transform:SetLocalScale(Vector3:New(e8._width,e8._width,e8._length))Daneel.Event.Fire(e8,"OnDraw",e8)end;em["Draw.LineRenderer.SetEndPosition"]={en,{"endPosition",_},ep}function Draw.LineRenderer.SetEndPosition(e8,eq,draw)e8._endPosition=eq;e8._direction=e8._endPosition-e8.origin;e8._length=e8._direction:Length()if draw==nil or draw then e8:Draw()end end;em["Draw.LineRenderer.GetEndPosition"]={en}function Draw.LineRenderer.GetEndPosition(e8)return e8._endPosition end;em["Draw.LineRenderer.SetLength"]={en,{"length",aw},ep}function Draw.LineRenderer.SetLength(e8,K,draw)e8._length=K;e8._endPosition=e8.origin+e8._direction*K;if draw==nil or draw then e8:Draw()end end;em["Draw.LineRenderer.GetLength"]={en}function Draw.LineRenderer.GetLength(e8)return e8._length end;em["Draw.LineRenderer.SetWidth"]={en,{"direction",_},{"useDirectionAsLength",d,defaultValue=false},ep}function Draw.LineRenderer.SetDirection(e8,dM,er,draw)e8._direction=dM:Normalized()if er then e8._length=dM:Length()end;e8._endPosition=e8.origin+e8._direction*e8._length;if draw==nil or draw then e8:Draw()end end;em["Draw.LineRenderer.GetDirection"]={en}function Draw.LineRenderer.GetDirection(e8)return e8._direction end;em["Draw.LineRenderer.SetWidth"]={en,{"width",aw},ep}function Draw.LineRenderer.SetWidth(e8,c0,draw)e8._width=c0;if draw==nil or draw then e8:Draw()end end;em["Draw.LineRenderer.GetWidth"]={en}function Draw.LineRenderer.GetWidth(e8)return e8._width end;Draw.CircleRenderer={}em["Draw.CircleRenderer.New"]={d3,bw}function Draw.CircleRenderer.New(aW,bB)local es={gameObject=aW,origin=aW.transform:GetPosition(),segments={},_segmentCount=6,_radius=1,_width=1,_model=nil}es._endPosition=es.origin;aW.circleRenderer=es;if bB.model==nil and aW.modelRenderer~=nil then bB.model=aW.modelRenderer:GetModel()aW.modelRenderer:SetModel(nil)end;setmetatable(es,Draw.CircleRenderer)es:Set(table.merge(Draw.Config.circleRenderer,bB))return es end;em["Draw.CircleRenderer.Set"]={eo,bw}function Draw.CircleRenderer.Set(es,bB)local draw=false;for G,h in pairs(bB)do local ar="Set"..string.ucfirst(G)if Draw.CircleRenderer[ar]~=nil then draw=true;Draw.CircleRenderer[ar](es,h,false)else es[G]=h end end;if draw then es:Draw()end end;em["Draw.CircleRenderer.Draw"]={eo}function Draw.CircleRenderer.Draw(es)local eg=2*math.pi/es._segmentCount;local g=-eg;local et=es:GetId()for p=1,es._segmentCount do g=g+eg;local eu=Vector3:New(es._radius*math.cos(g),es._radius*math.sin(g),0)if es.segments[p]==nil then local ev=CS.CreateGameObject("Circle "..et.." Segment "..p,es.gameObject)ev:CreateComponent("ModelRenderer")if es._model~=nil then ev.modelRenderer:SetModel(es._model)end;table.insert(es.segments,p,ev)end;es.segments[p].transform:SetLocalPosition(eu)end;while#es.segments>es._segmentCount do table.remove(es.segments):Destroy()end;local ew=es.segments[1].transform:GetPosition()local ex=Vector3.Distance(ew,es.segments[2].transform:GetPosition())for p,ey in ipairs(es.segments)do if es.segments[p+1]~=nil then ey.transform:LookAt(es.segments[p+1].transform:GetPosition())else ey.transform:LookAt(ew)end;ey.transform:SetLocalScale(Vector3:New(es._width,es._width,ex))end;Daneel.Event.Fire(es,"OnDraw",es)end;em["Draw.CircleRenderer.SetRadius"]={eo,{"radius",aw},ep}function Draw.CircleRenderer.SetRadius(es,ez,draw)es._radius=ez;if draw==nil or draw then es:Draw()end end;em["Draw.CircleRenderer.GetRadius"]={eo}function Draw.CircleRenderer.GetRadius(es)return es._radius end;em["Draw.CircleRenderer.SetSegmentCount"]={eo,{"count",aw},ep}function Draw.CircleRenderer.SetSegmentCount(es,eA,draw)if eA<3 then eA=3 end;if es._segmentCount~=eA then es._segmentCount=eA;if draw==nil or draw then es:Draw()end end end;em["Draw.CircleRenderer.GetSegmentCount"]={eo}function Draw.CircleRenderer.GetSegmentCount(es)return es._segmentCount end;em["Draw.CircleRenderer.SetWidth"]={eo,{"width",aw}}function Draw.CircleRenderer.SetWidth(es,c0)if es._width~=c0 then es._width=c0;if#es.segments>0 and draw then local eB=Vector3:New(es._width,es._width,es.segments[1].transform:GetLocalScale().z)for p,e8 in pairs(es.segments)do e8.transform:SetLocalScale(eB)end end end end;em["Draw.CircleRenderer.GetWidth"]={eo}function Draw.CircleRenderer.GetWidth(es)return es._width end;em["Draw.CircleRenderer.SetModel"]={eo,{"model",{"string","Model"},isOptional=true}}function Draw.CircleRenderer.SetModel(es,bO)if es._model~=bO then if type(bO)=="sting"and es._model~=nil and es._model:GetPath()==bO then return end;if bO~=nil then es._model=Asset.Get(bO,"Model",true)else es._model=nil end;for p,e8 in pairs(es.segments)do e8.modelRenderer:SetModel(es._model)end end end;em["Draw.CircleRenderer.GetModel"]={eo}function Draw.CircleRenderer.GetModel(es)return es._model end;em["Draw.CircleRenderer.SetOpacity"]={eo,{"opacity","number"}}function Draw.CircleRenderer.SetOpacity(es,dR)for p=1,#cicle.segments do es.segments[p].modelRenderer:SetOpacity(dR)end end;em["Draw.CircleRenderer.GetOpacity"]={eo}function Draw.CircleRenderer.GetOpacity(es)if es.segments[1]~=nil then return es.segments[1].modelRenderer:GetOpacity()end;return nil end;table.mergein(Daneel.Debug.functionArgumentsInfo,em)function Draw.DefaultConfig()local bi={lineRenderer={direction=Vector3:Left(),length=2,width=0.1},circleRenderer={segmentCount=6,radius=1,width=1,model=nil},componentObjects={LineRenderer=Draw.LineRenderer,CircleRenderer=Draw.CircleRenderer},propertiesByComponentName={lineRenderer={"length","endPosition","direction","width"},circleRenderer={"radius","segmentCount","direction","width","opacity"}}}return bi end;Draw.Config=Draw.DefaultConfig()function Draw.Load()if Daneel.modules.Tween then table.mergein(Tween.Config.propertiesByComponentName,Draw.Config.propertiesByComponentName)end end;Color={}ColorMT={__call=function(am,...)return am.New(...)end,__index=function(au,G)local eC=Color.colorsByName[G:lower()]if eC~=nil then return Color.New(eC)end end}setmetatable(Color,ColorMT)function Color.__index(eD,G)local eE={"r","g","b"}G=eE[G]or G;return Color[G]or eD["_"..G]or rawget(eD,G)end;function Color.__newindex(eD,G,h)local eE={"r","g","b"}G=eE[G]or G;if G=="r"or G=="g"or G=="b"then eD["_"..G]=math.round(math.clamp(tonumber(h),0,255),0)else rawset(eD,G,h)end end;function Color.__tostring(eD)local n="Color: { r="..eD._r..", g="..eD._g..", b="..eD._b..", hex="..eD:GetHex()local aY=eD:GetName()if aY~=nil then n=n..", name='"..aY.."'"end;return n.." }"end;function Color.New(q,eF,d)local eD=setmetatable({},Color)if type(q)=="string"and eF==nil then local eG=Color[q]if eG~=nil then return eG else eD:SetHex(q)end else if type(q)=="table"then if q.r~=nil then eF=q.g;d=q.b;q=q.r elseif q.x~=nil then eF=q.y;d=q.z;q=q.x elseif#q==3 then eF=q[2]d=q[3]q=q[1]end end;eD.r=q or 0;eD.g=eF or eD._r;eD.b=d or eD._g end;return eD end;Color.colorsByName={red={255,0,0},green={0,255,0},blue={0,0,255},yellow={255,255,0},cyan={0,255,255},magenta={255,0,255},white={255,255,255},black={0,0,0},gray={50,50,50},grey={50,50,50}}for aY,eC in pairs(Color.colorsByName)do Color.colorsByName[aY]=Color.New(eC)end;function Color.GetName(eD)for aY,eC in pairs(Color.colorsByName)do if type(eC)=="string"then eC={Color.HexToRGB(eC)}end;if eD._r==eC[1]and eD._g==eC[2]and eD._b==eC[3]then return aY end end end;function Color.ToArray(eD)return{eD._r,eD._g,eD._b}end;function Color.ToRGB(eD)return{r=eD._r,g=eD._g,b=eD._b}end;function Color.ToVector3(eD)return Vector3:New(eD._r,eD._g,eD._b)end;function Color.ToString(eD)return eD._r.." "..eD._g.." "..eD._b end;function string.tocolor(eH)local eD=Color.New(0)local eE={"b","g","r"}for w in string.gmatch(eH,"[0-9]+")do eD[table.remove(eE)]=tonumber(w)end;return eD end;function Color.RGBToHex(q,eF,d)local eC=Color.New(q,eF,d):ToArray()local eI=""for G=1,3 do local h=eC[G]local eJ=''while h>0 do local ad=math.fmod(h,16)+1;h=math.floor(h/16)eJ=string.sub('0123456789ABCDEF',ad,ad)..eJ end;if string.len(eJ)==0 then eJ='00'elseif string.len(eJ)==1 then eJ='0'..eJ end;eI=eI..eJ end;return eI end;function Color.GetHex(eD)return Color.RGBToHex(eD)end;function Color.HexToRGB(eJ)eJ=eJ:gsub("#",""):gsub("0x",""):gsub("0X","")return tonumber("0x"..eJ:sub(1,2)),tonumber("0x"..eJ:sub(3,4)),tonumber("0x"..eJ:sub(5,6))end;function Color.SetHex(eD,eJ)local eK={Color.HexToRGB(eJ)}for p=1,3 do eD[p]=eK[p]end end;function Color.GetHSV(eD)local q,eF,d=eD._r/255,eD._g/255,eD._b/255;local m,l=math.max(q,eF,d),math.min(q,eF,d)local eL,n,_;_=m;local eM=m-l;if m==0 then n=0 else n=eM/m end;if m==l then eL=0 else if m==q then eL=(eF-d)/eM;if eF<d then eL=eL+6 end elseif m==eF then eL=(d-q)/eM+2 elseif m==d then eL=(q-eF)/eM+4 end;eL=eL/6 end;return eL,n,_ end;function Color.__eq(c,d)return c._r==d._r and c._g==d._g and c._b==d._b end;function Color.__add(c,d)return Color.New(c._r+d._r,c._g+d._g,c._b+d._b)end;function Color.__sub(c,d)return Color.New(c._r-d._r,c._g-d._g,c._b-d._b)end;function Color.__mul(c,d)local eD=Color.New(0)if type(c)=="table"and type(d)=="number"then eD.r=c._r*d;eD.g=c._g*d;eD.b=c._b*d elseif type(c)=="number"and type(d)=="table"then eD.r=c*d._r;eD.g=c*d._g;eD.b=c*d._b elseif type(c)=="table"and type(d)=="table"then eD.r=c._r*d._r;eD.g=c._g*d._g;eD.b=c._b*d._b end;return eD end;function Color.__div(c,d)local eD=Color.New(0)if type(c)=="table"and type(d)=="number"then eD.r=c._r/d;eD.g=c._g/d;eD.b=c._b/d elseif type(c)=="number"and type(d)=="table"then eD.r=c/d._r;eD.g=c/d._g;eD.b=c/d._b elseif type(c)=="table"and type(d)=="table"then eD.r=c._r/d._r;eD.g=c._g/d._g;eD.b=c._b/d._b end;return eD end;function Color._resolve(eN)local eO=Color.New(0)local eP=Color.New(0)for cf,h in pairs(eN:ToRGB())do if h~=255 and h>=127.5 then eO[cf]=255;eP[cf]=0 elseif h~=0 and h<127.5 then eO[cf]=0;eP[cf]=255 else eO[cf]=h;eP[cf]=h end end;if eP==eO then eP=nil end;local eQ=eO;local eR=0;if eP~=nil then eR=Color._getFrontOpacity(eO,eP,eN)eQ=Color.New((eP:ToVector3()-eO:ToVector3())*eR+eO:ToVector3())if eQ~=eN then print("Color._resolve(): Sorry, can't resolve target color [1], getting [2] instead",eN,eQ)end end;return eO,eP,eR,eQ end;function Color._getFrontOpacity(eO,eP,eN)local cf=nil;local eE={"r","g","b"}for p=1,3 do local eS=eE[p]if eP[eS]~=eO[eS]then cf=eS;break end end;if cf~=nil then return math.round((eN[cf]-eO[cf])/eP[cf]-eO[cf],3)else print("Color._getFrontOpacity(): can't calculate opacity because no suitable component was found",eO,eP,eN)return 1 end end;Color.colorAssetsFolder="Colors/"function Color._getAsset(eD,bo,eT)if not string.endswith(Color.colorAssetsFolder,"/")then Color.colorAssetsFolder=Color.colorAssetsFolder.."/"end;eT=eT or Color.colorAssetsFolder;local aY=eD:GetName()if aY==nil then if Daneel.Config.debug.enableDebug==true then print("Color._getAsset(): Can't find the name of the provided color",eD,"It must be set in the Color.colorsByName table.")end;return nil end;local bC=eT..aY;local bq=CS.FindAsset(bC,bo)if bq==nil then bC=eT..string.ucfirst(aY)bq=CS.FindAsset(bC,bo)end;if bq==nil and Daneel.Config.debug.enableDebug==true then print("Color._getAsset(): Could not find asset of type '"..bo.."' at path '"..bC.."' for ",eD)end;return bq end;function Color._setColor(cU,eD)local eU,bo,eV,eW;local aK=getmetatable(cU)if aK==ModelRenderer then eU="ModelRenderer"bo="Model"eV=ModelRenderer.SetModel;eW=ModelRenderer.GetModel elseif aK==TextRenderer then eU="TextRenderer"bo="Font"eV=TextRenderer.SetFont;eW=TextRenderer.GetFont end;local eO,eP,eR=eD:_resolve()local aW=cU.gameObject;local eX=aW.frontColorRenderer;local eT=nil;local eY=eW(cU)if eY~=nil then eT=eY:GetPath():gsub(eY.name,"")end;local eZ=eO:_getAsset(bo,eT)if eY~=eZ then eV(cU,eZ)end;if eX==nil and eP~=nil then eX=aW:CreateComponent(eU)aW[string.lcfirst(eU)]=cU;aW.frontColorRenderer=eX;if eU=="TextRenderer"then eX:SetAlignment(cU:GetAlignment())end end;if eX~=nil then if eP~=nil then local eZ=eP:_getAsset(bo,eT)local eY=eW(eX)if eY~=eZ then eV(eX,eZ)end end;eX.Fo=eR;eX:SetOpacity(eR*cU:GetOpacity())end end;function ModelRenderer.SetColor(bM,eD)Color._setColor(bM,eD)end;function TextRenderer.SetColor(bW,eD)Color._setColor(bW,eD)end;local e_=TextRenderer.SetText;function TextRenderer.SetText(bW,aO)e_(bW,aO)local eX=bW.gameObject.frontColorRenderer;if eX~=nil then e_(eX,aO)end end;local f0=TextRenderer.SetAlignment;function TextRenderer.SetAlignment(bW,bZ)f0(bW,bZ)local eX=bW.gameObject.frontColorRenderer;if eX~=nil then f0(eX,bZ)end end;function Color._setOpacity(cU,dR)cU:oSetOpacity(dR)local eX=cU.gameObject.frontColorRenderer;if eX~=nil and cU~=eX then local eR=eX.Fo or 1;eX:oSetOpacity(eR*dR)end end;ModelRenderer.oSetOpacity=ModelRenderer.SetOpacity;ModelRenderer.SetOpacity=Color._setOpacity;TextRenderer.oSetOpacity=TextRenderer.SetOpacity;TextRenderer.SetOpacity=Color._setOpacity;function Color._getColor(cU)local eU,eW;local aK=getmetatable(cU)if aK==ModelRenderer then eU="ModelRenderer"eW=ModelRenderer.GetModel elseif aK==TextRenderer then eU="TextRenderer"eW=TextRenderer.GetFont end;local eO,eP,eQ;local bq=eW(cU)if bq~=nil then eO=Color[bq:GetName()]end;local eX=cU.gameObject.frontColorRenderer;local eR=1;if eX~=nil and eO~=nil then eR=eX.Fo or 1;local bq=eW(eX)if bq~=nil then eP=Color[bq:GetName()]end end;if eO~=nil then if eP~=nil then eQ=Color.New((eP:ToVector3()-eO:ToVector3())*eR+eO:ToVector3())else eQ=eO end end;return eQ end;function ModelRenderer.GetColor(bM)return Color._getColor(bM)end;function TextRenderer.GetColor(bW)return Color._getColor(bW)end;Color.Pattern={DesaturedPlainColor=1,DeValuedPlainColor=2,Any0255=3,["21128"]=4,["0128"]=5}Color.PatternsById={}for aY,av in pairs(Color.Pattern)do Color.PatternsById[av]=aY end;function Color.GetRandom(k)k=k or math.random(#Color.PatternsById)local f1=table.copy(Color.colorsByName)f1.grey=nil;f1.gray=nil;f1.black=nil;f1=table.getvalues(f1)local eD=Color.New(0)if k==1 then local f2=Color.New(f1[math.random(#f1)])eD=f2+Color.New(math.random(0,255))elseif k==2 then local f2=Color.New(f1[math.random(#f1)])eD=f2-Color.New(math.random(0,255))elseif k==3 then local W={0,255,math.random(0,255)}for p=1,3 do eD[p]=table.remove(W,math.random(#W))end elseif k==4 then local l=math.random(0,128)local m=255-l;local f3=l;if math.random(2)==1 then f3=m end;local W={l,m,f3}for p=1,3 do eD[p]=table.remove(W,math.random(#W))end elseif k==5 then local l=math.random(0,128)local m=255-l;local f3=0;if math.random(2)==1 then f3=255 end;local W={l,m,f3}for p=1,3 do eD[p]=table.remove(W,math.random(#W))end end;return eD end;Tween={}local function f4(dQ)if dQ.target~=nil then Daneel.Debug.StackTrace.BeginFunction("GetTweenerProperty",dQ)local h=nil;h=dQ.target[dQ.property]if h==nil then local b4="Get"..string.ucfirst(dQ.property)if dQ.target[b4]~=nil then h=dQ.target[b4](dQ.target)end end;Daneel.Debug.StackTrace.EndFunction()return h end end;local function f5(dQ,h)if dQ.target~=nil then Daneel.Debug.StackTrace.BeginFunction("SetTweenerProperty",dQ,h)if dQ.valueType=="string"then if type(h)=="number"and h>=#dQ.stringValue+1 then local f6=dQ.startStringValue..dQ.endStringValue:sub(1,h)if f6~=dQ.stringValue then dQ.stringValue=f6;h=f6 else return end else return end end;if dQ.target[dQ.property]==nil then local b4="Set"..string.ucfirst(dQ.property)if dQ.target[b4]~=nil then dQ.target[b4](dQ.target,dQ.property)end else dQ.target[dQ.property]=h end;Daneel.Debug.StackTrace.EndFunction()end end;Tween.Tweener={tweeners={}}Tween.Tweener.__index=Tween.Tweener;setmetatable(Tween.Tweener,{__call=function(am,...)return am.New(...)end})function Tween.Tweener.__tostring(dQ)return"Tweener: "..dQ.id end;function Tween.Tweener.New(f7,a0,f8,f9,fa,bB)Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.New",f7,a0,f8,f9,bB)local aF="Tween.Tweener.New(target, property, endValue, duration[, params]) : "local dQ=table.copy(Tween.Config.tweener)setmetatable(dQ,Tween.Tweener)dQ.id=Daneel.Utilities.GetId()local fb=type(f7)local aK=nil;if fb=="table"then aK=getmetatable(f7)end;if fb=="number"or fb=="string"or aK==Vector2 or aK==Vector3 then bB=fa;fa=f9;f9=f8;f8=a0;local fc=f7;aF="Tween.Tweener.New(startValue, endValue, duration[, onCompleteCallback, params]) : "Daneel.Debug.CheckArgType(f9,"duration","number",aF)if type(fa)=="table"then bB=fa;fa=nil end;Daneel.Debug.CheckOptionalArgType(fa,"onCompleteCallback","function",aF)Daneel.Debug.CheckOptionalArgType(bB,"params","table",aF)dQ.startValue=fc;dQ.endValue=f8;dQ.duration=f9;if fa~=nil then dQ.OnComplete=fa end;if bB~=nil then dQ:Set(bB)end elseif a0==nil then Daneel.Debug.CheckArgType(f7,"params","table",aF)aF="Tween.Tweener.New(params) : "dQ:Set(f7)else Daneel.Debug.CheckArgType(f7,"target","table",aF)Daneel.Debug.CheckArgType(a0,"property","string",aF)Daneel.Debug.CheckArgType(f9,"duration","number",aF)if type(fa)=="table"then bB=fa;fa=nil end;Daneel.Debug.CheckOptionalArgType(fa,"onCompleteCallback","function",aF)Daneel.Debug.CheckOptionalArgType(bB,"params","table",aF)dQ.target=f7;dQ.property=a0;dQ.endValue=f8;dQ.duration=f9;if fa~=nil then dQ.OnComplete=fa end;if bB~=nil then dQ:Set(bB)end end;if dQ.endValue==nil then error("Tween.Tweener.New(): 'endValue' property is nil for tweener: "..tostring(dQ))end;if dQ.startValue==nil then dQ.startValue=f4(dQ)end;if dQ.target~=nil then dQ.gameObject=dQ.target.gameObject end;dQ.valueType=Daneel.Debug.GetType(dQ.startValue)if dQ.valueType=="string"then dQ.startStringValue=dQ.startValue;dQ.stringValue=dQ.startStringValue;dQ.endStringValue=dQ.endValue;dQ.startValue=1;dQ.endValue=#dQ.endStringValue end;Tween.Tweener.tweeners[dQ.id]=dQ;Daneel.Debug.StackTrace.EndFunction()return dQ end;function Tween.Tweener.Set(dQ,bB)Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.Set",dQ,bB)local aF="Tween.Tweener.Set(tweener, params) : "Daneel.Debug.CheckArgType(dQ,"tweener","Tween.Tweener",aF)for G,h in pairs(bB)do dQ[G]=h end;Daneel.Debug.StackTrace.EndFunction()return dQ end;function Tween.Tweener.Play(dQ)if dQ.isEnabled==false then return end;Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.Play",dQ)local aF="Tween.Tweener.Play(tweener) : "Daneel.Debug.CheckArgType(dQ,"tweener","Tween.Tweener",aF)dQ.isPaused=false;Daneel.Event.Fire(dQ,"OnPlay",dQ)Daneel.Debug.StackTrace.EndFunction()end;function Tween.Tweener.Pause(dQ)if dQ.isEnabled==false then return end;Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.Pause",dQ)local aF="Tween.Tweener.Pause(tweener) : "Daneel.Debug.CheckArgType(dQ,"tweener","Tween.Tweener",aF)dQ.isPaused=true;Daneel.Event.Fire(dQ,"OnPause",dQ)Daneel.Debug.StackTrace.EndFunction()end;function Tween.Tweener.Restart(dQ)if dQ.isEnabled==false then return end;Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.Restart",dQ)local aF="Tween.Tweener.Restart(tweener) : "Daneel.Debug.CheckArgType(dQ,"tweener","Tween.Tweener",aF)dQ.elapsed=0;dQ.fullElapsed=0;dQ.elapsedDelay=0;dQ.completedLoops=0;dQ.isCompleted=false;dQ.hasStarted=false;local fc=dQ.startValue;if dQ.loopType=="yoyo"and dQ.completedLoops%2~=0 then fc=dQ.endValue end;if dQ.target~=nil then f5(dQ,fc)end;dQ.value=fc;Daneel.Debug.StackTrace.EndFunction()end;function Tween.Tweener.Complete(dQ)if dQ.isEnabled==false or dQ.loops==-1 then return end;Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.Complete",dQ)local aF="Tween.Tweener.Complete( tweener ) : "Daneel.Debug.CheckArgType(dQ,"tweener","Tween.Tweener",aF)dQ.isCompleted=true;local f8=dQ.endValue;if dQ.loopType=="yoyo"then if dQ.loops%2==0 and dQ.completedLoops%2==0 then f8=dQ.startValue elseif dQ.loops%2~=0 and dQ.completedLoops%2~=0 then f8=dQ.startValue end end;if dQ.target~=nil then f5(dQ,f8)end;dQ.value=f8;Daneel.Event.Fire(dQ,"OnComplete",dQ)if dQ.destroyOnComplete then dQ:Destroy()end;Daneel.Debug.StackTrace.EndFunction()end;local function fd(aW)return aW.isDestroyed==true or aW.inner==nil end;function Tween.Tweener.IsTargetDestroyed(dQ)if dQ.target~=nil then if dQ.target.isDestroyed then return true end;if dQ.target.gameObject~=nil and fd(dQ.target.gameObject)then return true end end;if dQ.gameObject~=nil and fd(dQ.gameObject)then return true end;return false end;function Tween.Tweener.Destroy(dQ)Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.Destroy",dQ)local aF="Tween.Tweener.Destroy( tweener ) : "Daneel.Debug.CheckArgType(dQ,"tweener","Tween.Tweener",aF)dQ.isEnabled=false;dQ.isPaused=true;dQ.target=nil;dQ.duration=0;Tween.Tweener.tweeners[dQ.id]=nil;CraftStudio.Destroy(dQ)Daneel.Debug.StackTrace.EndFunction()end;function Tween.Tweener.Update(dQ,fe)if dQ.isEnabled==false then return end;Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.Update",dQ,fe)local aF="Tween.Tweener.Update(tweener[, deltaDuration]) : "Daneel.Debug.CheckArgType(dQ,"tweener","Tween.Tweener",aF)Daneel.Debug.CheckArgType(fe,"deltaDuration","number",aF)if Tween.Ease[dQ.easeType]==nil then if Daneel.Config.debug.enableDebug then print("Tween.Tweener.Update() : Easing '"..tostring(dQ.easeType).."' for tweener ID '"..tween.id.."' does not exists. Setting it back for the default easing '"..Tween.Config.tweener.easeType.."'.")end;dQ.easeType=Tween.Config.tweener.easeType end;if fe~=nil then dQ.elapsed=dQ.elapsed+fe;dQ.fullElapsed=dQ.fullElapsed+fe end;local h=nil;if dQ.elapsed>dQ.duration then dQ.isCompleted=true;dQ.elapsed=dQ.duration;if dQ.isRelative==true then h=dQ.startValue+dQ.endValue else h=dQ.endValue end else if dQ.valueType=="Vector3"then h=Vector3:New(Tween.Ease[dQ.easeType](dQ.elapsed,dQ.startValue.x,dQ.diffValue.x,dQ.duration),Tween.Ease[dQ.easeType](dQ.elapsed,dQ.startValue.y,dQ.diffValue.y,dQ.duration),Tween.Ease[dQ.easeType](dQ.elapsed,dQ.startValue.z,dQ.diffValue.z,dQ.duration))elseif dQ.valueType=="Vector2"then h=Vector2.New(Tween.Ease[dQ.easeType](dQ.elapsed,dQ.startValue.x,dQ.diffValue.x,dQ.duration),Tween.Ease[dQ.easeType](dQ.elapsed,dQ.startValue.y,dQ.diffValue.y,dQ.duration))else h=Tween.Ease[dQ.easeType](dQ.elapsed,dQ.startValue,dQ.diffValue,dQ.duration)end end;if dQ.target~=nil then f5(dQ,h)end;dQ.value=h;Daneel.Event.Fire(dQ,"OnUpdate",dQ)Daneel.Debug.StackTrace.EndFunction()end;Tween.Timer={}Tween.Timer.__index=Tween.Tweener;setmetatable(Tween.Timer,{__call=function(am,...)return am.New(...)end})function Tween.Timer.New(f9,bh,ff,bB)Daneel.Debug.StackTrace.BeginFunction("Tween.Timer.New",f9,bh,ff,bB)local aF="Tween.Timer.New( duration, callback[, isInfiniteLoop, params] ) : "if type(ff)=="table"then bB=ff;aF="Tween.Timer.New( duration, callback[, params] ) : "end;Daneel.Debug.CheckArgType(f9,"duration","number",aF)Daneel.Debug.CheckArgType(bh,"callback",{"function","userdata"},aF)Daneel.Debug.CheckOptionalArgType(bB,"params","table",aF)local dQ=table.copy(Tween.Config.tweener)setmetatable(dQ,Tween.Tweener)dQ.id=Daneel.Utilities.GetId()dQ.startValue=f9;dQ.endValue=0;dQ.duration=f9;if ff==true then dQ.loops=-1;dQ.OnLoopComplete=bh else dQ.OnComplete=bh end;if bB~=nil then dQ:Set(bB)end;Tween.Tweener.tweeners[dQ.id]=dQ;Daneel.Debug.StackTrace.EndFunction()return dQ end;Daneel.modules.Tween=Tween;function Tween.DefaultConfig()local bi={tweener={isEnabled=true,isPaused=false,delay=0.0,duration=0.0,durationType="time",startValue=nil,endValue=0.0,loops=0,loopType="simple",easeType="linear",isRelative=false,destroyOnComplete=true,destroyOnSceneLoad=true,updateInterval=1,Id=-1,hasStarted=false,isCompleted=false,elapsed=0,fullElapsed=0,elapsedDelay=0,completedLoops=0,diffValue=0.0,value=0.0,frameCount=0},objects={["Tween.Tweener"]=Tween.Tweener},propertiesByComponentName={transform={"scale","localScale","position","localPosition","eulerAngles","localEulerAngles"},modelRenderer={"opacity"},mapRenderer={"opacity"},textRenderer={"text","opacity"},camera={"fov"}}}return bi end;Tween.Config=Tween.DefaultConfig()function Tween.Awake()local o={}for fg,fh in pairs(Tween.Config.propertiesByComponentName)do for p=1,#fh do local a0=fh[p]o[a0]=o[a0]or{}table.insert(o[a0],fg)end end;Tween.Config.componentNamesByProperty=o;for av,dQ in pairs(Tween.Tweener.tweeners)do if dQ.destroyOnSceneLoad then dQ:Destroy()end end end;function Tween.Update()for av,dQ in pairs(Tween.Tweener.tweeners)do if dQ:IsTargetDestroyed()then dQ:Destroy()end;if dQ.isEnabled==true and dQ.isPaused==false and dQ.isCompleted==false and dQ.duration>0 then dQ.frameCount=dQ.frameCount+1;if dQ.frameCount%dQ.updateInterval==0 then local fe=Daneel.Time.deltaTime*dQ.updateInterval;if dQ.durationType=="realTime"then fe=Daneel.Time.realDeltaTime*dQ.updateInterval elseif dQ.durationType=="frame"then fe=dQ.updateInterval end;if fe>0 then if dQ.elapsedDelay>=dQ.delay then if dQ.hasStarted==false then dQ.hasStarted=true;if dQ.startValue==nil then if dQ.target~=nil then dQ.startValue=f4(dQ)else error("Tween.Update() : startValue is nil but no target is set for tweener: "..tostring(dQ))end elseif dQ.target~=nil then f5(dQ,dQ.startValue)end;dQ.value=dQ.startValue;if dQ.isRelative==true then dQ.diffValue=dQ.endValue else dQ.diffValue=dQ.endValue-dQ.startValue end;Daneel.Event.Fire(dQ,"OnStart",dQ)end;dQ:Update(fe)else dQ.elapsedDelay=dQ.elapsedDelay+fe end;if dQ.isCompleted==true then dQ.completedLoops=dQ.completedLoops+1;if dQ.loops==-1 or dQ.completedLoops<dQ.loops then dQ.isCompleted=false;dQ.elapsed=0;if dQ.loopType:lower()=="yoyo"then local fc=dQ.startValue;if dQ.isRelative then dQ.startValue=dQ.value;dQ.endValue=-dQ.endValue;dQ.diffValue=dQ.endValue else dQ.startValue=dQ.endValue;dQ.endValue=fc;dQ.diffValue=-dQ.diffValue end elseif dQ.target~=nil then f5(dQ,dQ.startValue)end;dQ.value=dQ.startValue;Daneel.Event.Fire(dQ,"OnLoopComplete",dQ)else Daneel.Event.Fire(dQ,"OnComplete",dQ)if dQ.destroyOnComplete and dQ.Destroy~=nil then dQ:Destroy()end end end end end end end end;local function fi(aW,a0)local bn=nil;if(a0=="position"or a0=="localPosition")and GUI~=nil and GUI.Hud~=nil and aW.hud~=nil then bn=aW.hud elseif a0=="text"and GUI~=nil and GUI.TextArea~=nil and aW.textArea~=nil then bn=aW.textArea else local fj=Tween.Config.componentNamesByProperty[a0]if fj~=nil then for p=1,#fj do bn=aW[fj[p]]if bn~=nil then break end end end end;if bn==nil then error("Tween: resolveTarget(): Couldn't resolve the target for property '"..a0 .."' and gameObject: "..tostring(aW))end;return bn end;function GameObject.Animate(aW,a0,f8,f9,fa,bB)local bn=nil;if type(fa)=="table"and bB==nil then bB=fa;fa=nil end;if bB~=nil and bB.target~=nil then bn=bB.target else bn=fi(aW,a0)end;return Tween.Tweener.New(bn,a0,f8,f9,fa,bB)end;function GameObject.AnimateAndDestroy(aW,a0,f8,f9,bB)local bn=nil;if bB~=nil and bB.target~=nil then bn=bB.target else bn=fi(aW,a0)end;return Tween.Tweener.New(bn,a0,f8,f9,function()aW:Destroy()end,bB)end
-- Easing equations
-- From Emmanuel Oga's easing equations : https://github.com/EmmanuelOga/easing

--
-- Adapted from
-- Tweener's easing functions (Penner's Easing Equations)
-- and http://code.google.com/p/tweener/ (jstweener javascript version)
--

--[[
Disclaimer for Robert Penner's Easing Equations license:

TERMS OF USE - EASING EQUATIONS

Open source under the BSD License.

Copyright © 2001 Robert Penner
All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
* Neither the name of the author nor the names of contributors may be used to endorse or promote products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
]]

-- For all easing functions:
-- t = elapsed time
-- b = begin
-- c = change == ending - beginning
-- d = duration (total time)

local pow = math.pow
local sin = math.sin
local cos = math.cos
local pi = math.pi
local sqrt = math.sqrt
local abs = math.abs
local asin = math.asin

local function linear(t, b, c, d)
  return c * t / d + b
end

local function inQuad(t, b, c, d)
  t = t / d
  return c * pow(t, 2) + b
end

local function outQuad(t, b, c, d)
  t = t / d
  return -c * t * (t - 2) + b
end

local function inOutQuad(t, b, c, d)
  t = t / d * 2
  if t < 1 then
    return c / 2 * pow(t, 2) + b
  else
    return -c / 2 * ((t - 1) * (t - 3) - 1) + b
  end
end

local function outInQuad(t, b, c, d)
  if t < d / 2 then
    return outQuad (t * 2, b, c / 2, d)
  else
    return inQuad((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inCubic (t, b, c, d)
  t = t / d
  return c * pow(t, 3) + b
end

local function outCubic(t, b, c, d)
  t = t / d - 1
  return c * (pow(t, 3) + 1) + b
end

local function inOutCubic(t, b, c, d)
  t = t / d * 2
  if t < 1 then
    return c / 2 * t * t * t + b
  else
    t = t - 2
    return c / 2 * (t * t * t + 2) + b
  end
end

local function outInCubic(t, b, c, d)
  if t < d / 2 then
    return outCubic(t * 2, b, c / 2, d)
  else
    return inCubic((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inQuart(t, b, c, d)
  t = t / d
  return c * pow(t, 4) + b
end

local function outQuart(t, b, c, d)
  t = t / d - 1
  return -c * (pow(t, 4) - 1) + b
end

local function inOutQuart(t, b, c, d)
  t = t / d * 2
  if t < 1 then
    return c / 2 * pow(t, 4) + b
  else
    t = t - 2
    return -c / 2 * (pow(t, 4) - 2) + b
  end
end

local function outInQuart(t, b, c, d)
  if t < d / 2 then
    return outQuart(t * 2, b, c / 2, d)
  else
    return inQuart((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inQuint(t, b, c, d)
  t = t / d
  return c * pow(t, 5) + b
end

local function outQuint(t, b, c, d)
  t = t / d - 1
  return c * (pow(t, 5) + 1) + b
end

local function inOutQuint(t, b, c, d)
  t = t / d * 2
  if t < 1 then
    return c / 2 * pow(t, 5) + b
  else
    t = t - 2
    return c / 2 * (pow(t, 5) + 2) + b
  end
end

local function outInQuint(t, b, c, d)
  if t < d / 2 then
    return outQuint(t * 2, b, c / 2, d)
  else
    return inQuint((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inSine(t, b, c, d)
  return -c * cos(t / d * (pi / 2)) + c + b
end

local function outSine(t, b, c, d)
  return c * sin(t / d * (pi / 2)) + b
end

local function inOutSine(t, b, c, d)
  return -c / 2 * (cos(pi * t / d) - 1) + b
end

local function outInSine(t, b, c, d)
  if t < d / 2 then
    return outSine(t * 2, b, c / 2, d)
  else
    return inSine((t * 2) -d, b + c / 2, c / 2, d)
  end
end

local function inExpo(t, b, c, d)
  if t == 0 then
    return b
  else
    return c * pow(2, 10 * (t / d - 1)) + b - c * 0.001
  end
end

local function outExpo(t, b, c, d)
  if t == d then
    return b + c
  else
    return c * 1.001 * (-pow(2, -10 * t / d) + 1) + b
  end
end

local function inOutExpo(t, b, c, d)
  if t == 0 then return b end
  if t == d then return b + c end
  t = t / d * 2
  if t < 1 then
    return c / 2 * pow(2, 10 * (t - 1)) + b - c * 0.0005
  else
    t = t - 1
    return c / 2 * 1.0005 * (-pow(2, -10 * t) + 2) + b
  end
end

local function outInExpo(t, b, c, d)
  if t < d / 2 then
    return outExpo(t * 2, b, c / 2, d)
  else
    return inExpo((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inCirc(t, b, c, d)
  t = t / d
  return(-c * (sqrt(1 - pow(t, 2)) - 1) + b)
end

local function outCirc(t, b, c, d)
  t = t / d - 1
  return(c * sqrt(1 - pow(t, 2)) + b)
end

local function inOutCirc(t, b, c, d)
  t = t / d * 2
  if t < 1 then
    return -c / 2 * (sqrt(1 - t * t) - 1) + b
  else
    t = t - 2
    return c / 2 * (sqrt(1 - t * t) + 1) + b
  end
end

local function outInCirc(t, b, c, d)
  if t < d / 2 then
    return outCirc(t * 2, b, c / 2, d)
  else
    return inCirc((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inElastic(t, b, c, d, a, p)
  if t == 0 then return b end

  t = t / d

  if t == 1 then return b + c end

  if not p then p = d * 0.3 end

  local s

  if not a or a < abs(c) then
    a = c
    s = p / 4
  else
    s = p / (2 * pi) * asin(c/a)
  end

  t = t - 1

  return -(a * pow(2, 10 * t) * sin((t * d - s) * (2 * pi) / p)) + b
end

-- a: amplitud
-- p: period
local function outElastic(t, b, c, d, a, p)
  if t == 0 then return b end

  t = t / d

  if t == 1 then return b + c end

  if not p then p = d * 0.3 end

  local s

  if not a or a < abs(c) then
    a = c
    s = p / 4
  else
    s = p / (2 * pi) * asin(c/a)
  end

  return a * pow(2, -10 * t) * sin((t * d - s) * (2 * pi) / p) + c + b
end

-- p = period
-- a = amplitud
local function inOutElastic(t, b, c, d, a, p)
  if t == 0 then return b end

  t = t / d * 2

  if t == 2 then return b + c end

  if not p then p = d * (0.3 * 1.5) end
  if not a then a = 0 end

  if not a or a < abs(c) then
    a = c
    s = p / 4
  else
    s = p / (2 * pi) * asin(c / a)
  end

  if t < 1 then
    t = t - 1
    return -0.5 * (a * pow(2, 10 * t) * sin((t * d - s) * (2 * pi) / p)) + b
  else
    t = t - 1
    return a * pow(2, -10 * t) * sin((t * d - s) * (2 * pi) / p ) * 0.5 + c + b
  end
end

-- a: amplitud
-- p: period
local function outInElastic(t, b, c, d, a, p)
  if t < d / 2 then
    return outElastic(t * 2, b, c / 2, d, a, p)
  else
    return inElastic((t * 2) - d, b + c / 2, c / 2, d, a, p)
  end
end

local function inBack(t, b, c, d, s)
  if not s then s = 1.70158 end
  t = t / d
  return c * t * t * ((s + 1) * t - s) + b
end

local function outBack(t, b, c, d, s)
  if not s then s = 1.70158 end
  t = t / d - 1
  return c * (t * t * ((s + 1) * t + s) + 1) + b
end

local function inOutBack(t, b, c, d, s)
  if not s then s = 1.70158 end
  s = s * 1.525
  t = t / d * 2
  if t < 1 then
    return c / 2 * (t * t * ((s + 1) * t - s)) + b
  else
    t = t - 2
    return c / 2 * (t * t * ((s + 1) * t + s) + 2) + b
  end
end

local function outInBack(t, b, c, d, s)
  if t < d / 2 then
    return outBack(t * 2, b, c / 2, d, s)
  else
    return inBack((t * 2) - d, b + c / 2, c / 2, d, s)
  end
end

local function outBounce(t, b, c, d)
  t = t / d
  if t < 1 / 2.75 then
    return c * (7.5625 * t * t) + b
  elseif t < 2 / 2.75 then
    t = t - (1.5 / 2.75)
    return c * (7.5625 * t * t + 0.75) + b
  elseif t < 2.5 / 2.75 then
    t = t - (2.25 / 2.75)
    return c * (7.5625 * t * t + 0.9375) + b
  else
    t = t - (2.625 / 2.75)
    return c * (7.5625 * t * t + 0.984375) + b
  end
end

local function inBounce(t, b, c, d)
  return c - outBounce(d - t, 0, c, d) + b
end

local function inOutBounce(t, b, c, d)
  if t < d / 2 then
    return inBounce(t * 2, 0, c, d) * 0.5 + b
  else
    return outBounce(t * 2 - d, 0, c, d) * 0.5 + c * .5 + b
  end
end

local function outInBounce(t, b, c, d)
  if t < d / 2 then
    return outBounce(t * 2, b, c / 2, d)
  else
    return inBounce((t * 2) - d, b + c / 2, c / 2, d)
  end
end

-- Modifications for Daneel : replaced 'return {' by 'Tween.Ease = {'
Tween.Ease = {
  linear = linear,
  inQuad = inQuad,
  outQuad = outQuad,
  inOutQuad = inOutQuad,
  outInQuad = outInQuad,
  inCubic = inCubic ,
  outCubic = outCubic,
  inOutCubic = inOutCubic,
  outInCubic = outInCubic,
  inQuart = inQuart,
  outQuart = outQuart,
  inOutQuart = inOutQuart,
  outInQuart = outInQuart,
  inQuint = inQuint,
  outQuint = outQuint,
  inOutQuint = inOutQuint,
  outInQuint = outInQuint,
  inSine = inSine,
  outSine = outSine,
  inOutSine = inOutSine,
  outInSine = outInSine,
  inExpo = inExpo,
  outExpo = outExpo,
  inOutExpo = inOutExpo,
  outInExpo = outInExpo,
  inCirc = inCirc,
  outCirc = outCirc,
  inOutCirc = inOutCirc,
  outInCirc = outInCirc,
  inElastic = inElastic,
  outElastic = outElastic,
  inOutElastic = inOutElastic,
  outInElastic = outInElastic,
  inBack = inBack,
  outBack = outBack,
  inOutBack = inOutBack,
  outInBack = outInBack,
  inBounce = inBounce,
  outBounce = outBounce,
  inOutBounce = inOutBounce,
  outInBounce = outInBounce,
}

