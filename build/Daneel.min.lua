-- Generated on Fri Dec 05 2014 17:05:29 GMT+0100 (Paris, Madrid)
function math.isinteger(a)local b=false;if type(a)=="number"then b=a==math.floor(a)end;return b end;function math.lerp(c,d,e,f)if f=="smooth"then e=e*2;if e<1 then e=0.5*e*e*e else e=e-2;e=0.5*e*e*e+2 end elseif f=="smooth in"then e=e*e*e elseif f=="smooth out"then e=e-1;e=e*e*e+1 end;return c+(d-c)*e end;function math.warpangle(g)if g>180 then g=g-360 elseif g<-180 then g=g+360 end;return g end;function math.round(h,i)if i~=nil then h=math.floor(h*10^i+0.5)/10^i else h=math.floor(h+0.5)end;return h end;function math.truncate(h,i)if i~=nil then h=math.floor(h*10^i)/10^i else h=math.floor(h)end;return h end;function tonumber2(j)local a=tonumber(j)if a==nil then j=tostring(j)local k="(%d+)"if j:find(".",1,true)then k="(%d+%.%d+)"end;a=j:match(j:gsub(k,"(%1)"))a=tonumber(a)end;return a end;function math.clamp(h,l,m)h=math.max(h,l)h=math.min(h,m)return h end;function string.totable(n)local o={}for p=1,#n do table.insert(o,n:sub(p,p))end;return o end;function string.ucfirst(n)local q=n:gsub("^%l",string.upper)return q end;function string.lcfirst(n)local q=n:gsub("^%u",string.lower)return q end;function string.split(n,r,s)local t={}if s==true then local u,v=n:find(r)if u~=nil then local k=r;r=n:sub(u,v)if string.startswith(n,r)then n=n:sub(#r+1,#n)end;if not n:endswith(r)then n=n..r end;for w in n:gmatch("(.-)"..k)do table.insert(t,w)end end else if n:find(r,1,true)~=nil then if string.startswith(n,r)then n=n:sub(#r+1,#n)end;if not n:endswith(r)then n=n..r end;local x=""local y=string.totable(n)local p=1;while p<=#y do local z=y[p]if z==r or n:sub(p,p-1+#r)==r then table.insert(t,x)x=""p=p+#r else x=x..z;p=p+1 end end;if#x>0 then table.insert(t,x)end end end;if#t==0 then t={n}end;return t end;function string.startswith(n,x)local q=n:sub(1,#x)==x;return q end;function string.endswith(n,x)local q=n:sub(#n-#x+1,#n)==x;return q end;function string.trimstart(n)local q=n:gsub("^%s+","")return q end;function string.trimend(n)local q=n:gsub("%s+$","")return q end;function string.trim(n)local q=n:gsub("^%s+",""):gsub("%s+$","")return q end;function string.reverse(n)local A=""for p=#n,1,-1 do A=A..n:sub(p,p)end;return A end;function string.fixcase(n,B)if type(B)=="string"then B={B}end;local C=n:lower()for p=1,#B do local D=B[p]if C==D:lower()then return D end end;return n end;function table.copy(o,E)E=E or false;local F={}if table.isarray(o)then for G,h in ipairs(o)do if type(h)=="table"and E==true then h=table.copy(h,E)end;table.insert(F,h)end else for G,h in pairs(o)do if type(h)=="table"and E==true then h=table.copy(h,E)end;F[G]=h end end;return F end;function table.containsvalue(o,h,H)if h==nil then return false end;if H==true and type(h)=='string'then h=h:lower()end;for G,I in pairs(o)do if H==true and type(I)=="string"then I=I:lower()end;if h==I then return true end end;return false end;function table.getlength(o,J)local K=0;if J~=nil then J=J:lower()end;for G,h in pairs(o)do if J==nil or type(G)==J then K=K+1 end end;return K end;function table.print(o)if o==nil then print("table.print( t ) : Provided table is nil.")return end;print("~~~~~ table.print("..tostring(o)..") ~~~~~ Start ~~~~~")local L=pairs;if table.getlength(o)==0 then print("Table is empty.")elseif table.isarray(o)then L=ipairs end;for G,h in L(o)do if type(G)=="string"then G='"'..G..'"'end;if type(h)=="string"then h='"'..h..'"'end;print(G,h)end;print("~~~~~ table.print("..tostring(o)..") ~~~~~ End ~~~~~")end;local M={}local N=nil;function table.printr(o,O)O=O or""if o==nil then print(O.."table.printr( t ) : Provided table is nil.")return end;if O==""then print("~~~~~ table.printr("..tostring(o)..") ~~~~~ Start ~~~~~")if N==nil then N=o end end;local L=pairs;if table.getlength(o)==0 then print(O,"Table is empty.")elseif table.isarray(o)then L=ipairs end;for G,h in L(o)do if type(G)=="string"then G='"'..G..'"'end;if type(h)=="string"then h='"'..h..'"'end;if type(h)=="table"and getmetatable(h)==nil then local P=M[h]if h==N then print(O..tostring(G),"Table currently being printed: "..tostring(h))elseif P~=nil then print(O..tostring(G),"Already printed table with key "..P..": "..tostring(h))else M[h]=G;print(O..tostring(G),h)table.printr(h,O.."| - - - ")end else print(O..tostring(G),h)end end;if O==""then print("~~~~~ table.printr("..tostring(o)..") ~~~~~ End ~~~~~")M={}N=nil end end;function table.merge(...)return table.mergein({},...)end;function table.mergein(...)local Q={...}local E=false;if#Q>0 and type(Q[#Q])~="table"then E=table.remove(Q)end;local R=table.remove(Q,1)if R==nil then local S="table.mergein(): No table where passed as argument."if#Q>0 then table.print(Q)S="table.mergein(): First argument is nil. Other arguments are shown above."end;error(S)end;for p,o in ipairs(Q)do local T=type(o)if T=="table"then if table.isarray(o)then for G,h in ipairs(o)do table.insert(R,h)end else for G,h in pairs(o)do if R[G]~=nil and E and type(h)=="table"and getmetatable(h)==nil then h=table.merge(R[G],h,true)end;R[G]=h end end end end;return R end;function table.havesamecontent(U,V)if table.getlength(U)~=table.getlength(V)then return false end;for G,h in pairs(U)do if U[G]~=V[G]then return false end end;return true end;function table.combine(W,X)if#W~=#X then print("table.combine( keys, values ) : WARNING : Arguments 'keys' and 'values' have different length :",#W,#X)end;local F={}for p,G in pairs(W)do F[G]=X[p]end;return F end;function table.removevalue(o,h,Y)if h==nil then return 0 end;local Z=0;for G,I in pairs(o)do if I==h then if math.isinteger(G)then table.remove(o,G)else o[G]=nil end;Z=Z+1;if Y~=nil and Z==Y then break end end end;return Z end;function table.getkeys(o)local W={}for G,h in pairs(o)do table.insert(W,G)end;return W end;function table.getvalues(o)local X={}for G,h in pairs(o)do table.insert(X,h)end;return X end;function table.getkey(o,h)local G=nil;for _,a0 in pairs(o)do if h==a0 then G=_ end end;return G end;function table.sortby(o,a1,a2)if a2==nil or not(a2=="asc"or a2=="desc")then a2="asc"end;local a3={}local a4={}for p=1,#o do local a5=o[p][a1]if a4[a5]==nil then table.insert(a3,a5)a4[a5]={}end;table.insert(a4[a5],o[p])end;if a2=="desc"then table.sort(a3,function(c,d)return c>d end)else table.sort(a3)end;o={}for p=1,#a3 do for a6,a7 in pairs(a4[a3[p]])do table.insert(o,a7)end end;return o end;function table.getvalue(o,W)W=string.split(W,".")local h=o;if h==_G then local a8=false;for G,h in pairs(_G)do if G==W[1]then a8=true;break end end;if not a8 then return nil end end;for p,G in ipairs(W)do if h[G]==nil then h=nil;break else h=h[G]end end;return h end;function table.setvalue(o,W,h)if W:find(".",1,true)==nil then o[W]=h else W=string.split(W,".")for p,G in ipairs(W)do if p==#W then o[G]=h else local a9=o[G]if a9==nil then a9={}o[G]=a9 end;o=a9 end end end end;function table.isarray(o,aa)local ab=0;for _,a0 in pairs(o)do ab=ab+1;if type(_)~="number"or not math.isinteger(_)then return false end end;if aa==nil or aa==true then return ab==#o end;return true end;function table.reverse(o)local F={}for p=1,#o do table.insert(F,1,o[p])end;return F end;function table.shift(o,ac)local G=nil;local h=nil;if table.isarray(o)then if#o>0 then G=1;h=table.remove(o,1)end else for _,a0 in pairs(o)do G=_;h=a0;break end;if G~=nil then o[G]=nil end end;if ac==true then return G,h else return h end end;function table.reindex(o)if not table.isarray(o,false)then print("table.reindex( table ) : Provided table '"..tostring(o).."' is not an array.")end;local ad=1;for p,a0 in pairs(o)do if type(p)=="number"and p>ad then ad=p end end;local F={}for p=1,ad do if o[p]~=nil then table.insert(F,o[p])end end;return F end;function table.insertonce(o,ae,h)if h==nil then h=ae;ae=nil end;for G,I in pairs(o)do if h==I then return false end end;if ae==nil then table.insert(o,h)else table.insert(o,ae,h)end;return true end;Daneel={}Daneel.modules={moduleNames={}}setmetatable(Daneel.modules,{__newindex=function(af,ag,ah)table.insert(Daneel.modules.moduleNames,ag)rawset(Daneel.modules,ag,ah)end})function string.split(n,r,s)local t={}if s then local u,v=n:find(r)if u~=nil then local k=r;r=n:sub(u,v)if string.startswith(n,r)then n=n:sub(#r+1,#n)end;if not n:endswith(r)then n=n..r end;if CS.IsWebPlayer then for w in n:gmatch("([^"..k.."]+)"..k)do table.insert(t,w)end else for w in n:gmatch("(.-)"..k)do table.insert(t,w)end end end else if n:find(r,1,true)~=nil then if string.startswith(n,r)then n=n:sub(#r+1,#n)end;if not n:endswith(r)then n=n..r end;local x=""local y=string.totable(n)local p=1;while p<=#y do local z=y[p]if z==r or n:sub(p,p-1+#r)==r then table.insert(t,x)x=""p=p+#r else x=x..z;p=p+1 end end;if#x>0 then table.insert(t,x)end end end;if#t==0 then t={n}end;return t end;function table.print(o)if o==nil then print("table.print( t ) : Provided table is nil.")return end;local ai=tostring(o)local aj=Daneel.Debug.ToRawString(o)if ai~=aj then ai=ai.." / "..aj end;print("~~~~~ table.print("..ai..") ~~~~~ Start ~~~~~")local L=pairs;if table.getlength(o)==0 then print("Table is empty.")elseif table.isarray(o)then L=ipairs end;for G,h in L(o)do print(G,h)end;print("~~~~~ table.print("..ai..") ~~~~~ End ~~~~~")end;function table.getlength(o,J)local K=0;if J~=nil then J=J:lower()end;for G,h in pairs(o)do if J==nil or type(G)==J or Daneel.Debug.GetType(G):lower()==J then K=K+1 end end;return K end;Daneel.Utilities={}Daneel.Utilities.CaseProof=string.fixcase;function Daneel.Utilities.ReplaceInString(string,ak)for al,am in pairs(ak)do string=string:gsub(":"..al,am)end;return string end;function Daneel.Utilities.AllowDynamicGettersAndSetters(an,ao)function an.__index(ap,G)local aq=G;if type(G)=="string"then aq=string.ucfirst(G)end;if G==aq then if an[G]~=nil then return an[G]end;if ao~=nil then for p,ar in ipairs(ao)do if ar[G]~=nil then return ar[G]end end end else local as="Get"..aq;if an[as]~=nil then return an[as](ap)elseif an[G]~=nil then return an[G]end;if ao~=nil then for p,ar in ipairs(ao)do if ar[as]~=nil then return ar[as](ap)elseif ar[G]~=nil then return ar[G]end end end end;return nil end;function an.__newindex(ap,G,h)local aq=G;if type(G)=="string"then aq=string.ucfirst(G)end;if G~=aq then local as="Set"..aq;if an[as]~=nil then return an[as](ap,h)end end;return rawset(ap,G,h)end end;Daneel.Utilities.ToNumber=tonumber2;local at={}function Daneel.Utilities.ButtonExists(au)if at[au]==nil then at[au]=Daneel.Debug.Try(function()CS.Input.WasButtonJustPressed(au)end)end;return at[au]end;Daneel.Utilities.id=0;function Daneel.Utilities.GetId(av)if av~=nil and type(av)=="table"then local aw=rawget(av,"id")if aw~=nil then return aw end;aw=Daneel.Utilities.GetId()if av.inner~=nil and not CS.IsWebPlayer then aw=tonumber(tostring(av.inner):match("%d+"))end;if aw==nil then aw="[no id]"end;rawset(av,"id",aw)return aw else Daneel.Utilities.id=Daneel.Utilities.id+1;return Daneel.Utilities.id end end;Daneel.Cache={GetId=Daneel.Utilities.GetId}Daneel.Debug={}local n="string"local d="boolean"local ax="number"local o="table"local ay="function"local az="userdata"local aA="Vector3"local aB={"s",n}local aC={"t",o}Daneel.Debug.functionArgumentsInfo={["math.isinteger"]={{"number"}},["math.lerp"]={{"a",ax},{"b",ax},{"factor",ax},{"easing",n,isOptional=true}},["math.warpangle"]={{"angle",ax}},["math.round"]={{"value",ax},{"decimal",ax,isOptional=true}},["math.truncate"]={{"value",ax},{"decimal",ax,isOptional=true}},["tonumber2"]={{"data"}},["math.clamp"]={{"value",ax},{"min",ax},{"max",ax}},["string.totable"]={aB},["string.ucfirst"]={aB},["string.lcfirst"]={aB},["string.trimstart"]={aB},["string.trimend"]={aB},["string.trim"]={aB},["string.endswith"]={aB,{"chunk",n}},["string.startswith"]={aB,{"chunk",n}},["string.split"]={aB,{"delimiter",n},{"delimiterIsPattern",d,isOptional=true}},["string.reverse"]={aB},["string.fixcase"]={aB,{"set",{n,o}}},["table.print"]={},["table.merge"]={},["table.mergein"]={},["table.getkeys"]={aC},["table.getvalues"]={aC},["table.reverse"]={aC},["table.reindex"]={aC},["table.getvalue"]={aC,{"keys",n}},["table.setvalue"]={aC,{"keys",n}},["table.getkey"]={aC,{"value"}},["table.copy"]={aC,{"recursive",d,isOptional=true}},["table.containsvalue"]={aC,{"value"},{"ignoreCase",d,isOptional=true}},["table.isarray"]={aC,{"strict",d,isOptional=true}},["table.shift"]={aC,{"returnKey",d,isOptional=true}},["table.getlength"]={aC,{"keyType",n,isOptional=true}},["table.havesamecontent"]={{"table1",o},{"table2",o}},["table.combine"]={aC,{"values","table"},{"returnFalseIfNotSameLength",d,isOptional=true}},["table.removevalue"]={aC,{"value"},{"maxRemoveCount",ax,isOptional=true}},["table.sortby"]={aC,{"property",n},{"orderBy",n,isOptional=true}}}local aD={"transform","Transform"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["Daneel.Utilities.ReplaceInString"]={{"string",n},{"replacements",o}},["Daneel.Utilities.ButtonExists"]={{"buttonName",n}},["Transform.SetPosition"]={aD,{"position",aA}},["Transform.SetLocalPosition"]={aD,{"position",aA}},["Transform.SetEulerAngles"]={aD,{"angles",aA}},["Transform.SetLocalEulerAngles"]={aD,{"angles",aA}},["Transform.RotateEulerAngles"]={aD,{"angles",aA}},["Transform.RotateLocalEulerAngles"]={aD,{"angles",aA}},["Transform.Move"]={aD,{"offset",aA}},["Transform.MoveLocal"]={aD,{"offset",aA}},["Transform.MoveOriented"]={aD,{"offset",aA}},["Transform.LookAt"]={aD,{"target",aA}},["Transform.SetOrientation"]={aD,{"orientation","Quaternion"}},["Transform.SetLocalOrientation"]={aD,{"orientation","Quaternion"}},["Transform.Rotate"]={aD,{"orientation","Quaternion"}},["Transform.RotateLocal"]={aD,{"orientation","Quaternion"}}})function Daneel.Debug.CheckArgType(aE,aF,aG,aH)if type(aE)=="table"and getmetatable(aE)==GameObject and aE.inner==nil then error(aH.."Provided argument '"..aF.."' is a destroyed game object '"..tostring(aE))end;if not Daneel.Config.debug.enableDebug then return Daneel.Debug.GetType(aE)end;local aI="Daneel.Debug.CheckArgType(argument, argumentName, expectedArgumentTypes[, p_errorHead]) : "local T=type(aF)if T~="string"then error(aI.."Argument 'argumentName' is of type '"..T.."' with value '"..tostring(aF).."' instead of 'string'.")end;T=type(aG)if T~="string"and T~="table"then error(aI.."Argument 'expectedArgumentTypes' is of type '"..T.."' with value '"..tostring(aG).."' instead of 'string' or 'table'.")end;if T=="string"then aG={aG}elseif#aG<=0 then error(aI.."Argument 'expectedArgumentTypes' is an empty table.")end;T=type(aH)if T~="nil"and T~="string"then error(aI.."Argument 'p_errorHead' is of type '"..T.."' with value '"..tostring(aH).."' instead of 'string'.")end;if aH==nil then aH=""end;T=Daneel.Debug.GetType(aE)local aJ=type(aE)for p,aK in ipairs(aG)do if T==aK or aJ==aK then return aK end end;error(aH.."Argument '"..aF.."' is of type '"..T.."' with value '"..tostring(aE).."' instead of '"..table.concat(aG,"', '").."'.")end;function Daneel.Debug.CheckOptionalArgType(aE,aF,aG,aH,aL)if aE==nil then return aL end;if not Daneel.Config.debug.enableDebug then return aE end;local aI="Daneel.Debug.CheckOptionalArgType(argument, argumentName, expectedArgumentTypes[, p_errorHead, defaultValue]) : "local T=type(aF)if T~="string"then error(aI.."Argument 'argumentName' is of type '"..T.."' with value '"..tostring(aF).."' instead of 'string'.")end;T=type(aG)if T~="string"and T~="table"then error(aI.."Argument 'expectedArgumentTypes' is of type '"..T.."' with value '"..tostring(aG).."' instead of 'string' or 'table'.")end;if T=="string"then aG={aG}elseif#aG<=0 then error(aI.."Argument 'expectedArgumentTypes' is an empty table.")end;T=type(aH)if T~="nil"and T~="string"then error(aI.."Argument 'p_errorHead' is of type '"..T.."' with value '"..tostring(aH).."' instead of 'string'.")end;if aH==nil then aI=""end;T=Daneel.Debug.GetType(aE)local aJ=type(aE)for p,aK in ipairs(aG)do if T==aK or aJ==aK then return aE end end;error(aH.."Optional argument '"..aF.."' is of type '"..T.."' with value '"..tostring(aE).."' instead of '"..table.concat(aG,"', '").."'.")end;function Daneel.Debug.GetType(av,aM)local aI="Daneel.Debug.GetType( object[, luaTypeOnly] ) : "local T=type(aM)if T~="nil"and T~="boolean"then error(aI.."Argument 'luaTypeOnly' is of type '"..T.."' with value '"..tostring(aM).."' instead of 'boolean'.")end;if aM==nil then aM=false end;T=type(av)if not aM and T=="table"then local aN=getmetatable(av)if aN~=nil then if getmetatable(aN)==Script then return"ScriptedBehavior"end;if Daneel.Config.objectsByType~=nil then for type,av in pairs(Daneel.Config.objectsByType)do if aN==av then return type end end end;for type,av in pairs(_G)do if aN==av then return type end end end end;return T end;oerror=error;function Daneel.Debug.SetNewError()function error(aO,aP)if Daneel.Config.debug.enableDebug and aP~=true then Daneel.Debug.StackTrace.Print()end;oerror(aO)end end;function Daneel.Debug.Disable(aQ)if aQ~=nil then aQ=" : "..tostring(aQ)end;print("Daneel.Debug.Disable()"..aQ)error=oerror;Daneel.Config.debug.enableDebug=false end;function Daneel.Debug.ToRawString(j)if j==nil and Daneel.Config.debug.enableDebug then print("WARNING : Daneel.Debug.ToRawString( data ) : Argument 'data' is nil.")return nil end;local aR=nil;local aN=getmetatable(j)if aN~=nil then if aN.__tostring~=nil then local aS=aN.__tostring;aN.__tostring=nil;aR=tostring(j)aN.__tostring=aS end end;if aR==nil then aR=tostring(j)end;return aR end;function Daneel.Debug.GetNameFromValue(h)Daneel.Debug.StackTrace.BeginFunction("Daneel.Debug.GetNameFromValue",h)local aI="Daneel.Debug.GetNameFromValue(value) : "if h==nil then error(aI.." Argument 'value' is nil.")end;local aT=table.getkey(Daneel.Config.objectsByType,h)if aT==nil then aT=table.getkey(_G,h)end;Daneel.Debug.StackTrace.EndFunction()return aT end;function Daneel.Debug.CheckArgValue(aE,aF,aU,aH,aL)Daneel.Debug.StackTrace.BeginFunction("Daneel.Debug.CheckArgValue",aE,aF,aU,aH)local aI="Daneel.Debug.CheckArgValue(argument, argumentName, expectedArgumentValues[, p_errorHead, defaultValue]) : "Daneel.Debug.CheckArgType(aF,"argumentName","string",aI)if aU==nil then error(aI.."Argument 'expectedArgumentValues' is nil.")end;Daneel.Debug.CheckOptionalArgType(aH,"p_errorHead","string",aI)if type(aU)~="table"then aU={aU}elseif#aU==0 then error(aI.."Argument 'expectedArgumentValues' is an empty table.")end;local aV=false;if type(aE)=="string"then for p,aW in ipairs(aU)do if aE:lower()==aW:lower()then aE=aW;aV=true;break end end else for p,aW in ipairs(aU)do if aE==aW then aV=true;break end end end;if not aV then if aL~=nil then aE=aL else for p,h in ipairs(aU)do aU[p]=tostring(h)end;error(aH.."The value '"..tostring(aE).."' of argument '"..aF.."' is not one of '"..table.concat(aU,"', '").."'.")end end;Daneel.Debug.StackTrace.EndFunction()return aE end;local aX=Behavior;Daneel.Debug.tryGameObject=nil;function Daneel.Debug.Try(aY)Daneel.Debug.StackTrace.BeginFunction("Daneel.Debug.Try",aY)local aI="Daneel.Debug.Try( _function ) : "Daneel.Debug.CheckArgType(aY,"_function",{"function","userdata"},aI)local aZ=Daneel.Debug.tryGameObject;if aZ==nil or aZ.inner==nil then aZ=CraftStudio.CreateGameObject("Daneel_Debug_Try")Daneel.Debug.tryGameObject=aZ end;local a_=false;aZ:CreateScriptedBehavior(aX,{debugTry=true,testFunction=aY,successCallback=function()a_=true end})Daneel.Debug.StackTrace.EndFunction()return a_ end;function Daneel.Debug.RegisterFunction(b0,b1)if not Daneel.Config.debug.enableDebug then return end;local b2=table.getvalue(_G,b0)local b3=b0;local b4=b1.script;if b4~=nil then local b5=string.split(b0,".")local b6=b5[1]local as=b5[2]b3=as;b2=b4[as]if not b4.toStringIsSet then b4.__tostring=function(b7)local aw=Daneel.Utilities.GetId(b7)or"[no id]"return"ScriptedBehavior: "..aw..": '"..b6 .."'"end;b4.toStringIsSet=true end;local b8=b1[1]if b8==nil or b8[2]~="ScriptedBehavior"then table.insert(b1,1,{name="self",type="ScriptedBehavior"})end end;if b2~=nil then local b9=b1.includeInStackTrace or Daneel.Config.debug.enableStackTrace;local aI=b0 .."( "for p,Q in ipairs(b1)do if Q.name==nil then Q.name=Q[1]end;aI=aI..Q.name..", "end;aI=aI:sub(1,#aI-2)aI=aI.." ) : "local ba=function(...)local bb={...}if b9 then Daneel.Debug.StackTrace.BeginFunction(b0,...)end;for p,Q in ipairs(b1)do Q.type=Q.type or Q[2]if Q.type~=nil then if Q.isOptional==true then Daneel.Debug.CheckOptionalArgType(bb[p],Q.name,Q.type,aI)else Daneel.Debug.CheckArgType(bb[p],Q.name,Q.type,aI)end elseif bb[p]==nil and not Q.isOptional then error(aI.."Argument '"..Q.name.."' is nil.")end end;local bc={b2(...)}if b9 then Daneel.Debug.StackTrace.EndFunction()end;return unpack(bc)end;if b4~=nil then b4[b3]=ba else table.setvalue(_G,b0,ba)end else print("Daneel.Debug.RegisterFunction(): Function with name '"..b0 .."' was not found.")end end;function Daneel.Debug.RegisterScript(b4)if not Daneel.Config.debug.enableDebug then return end;if type(b4)~="table"or getmetatable(b4)~=Script then error("Daneel.Debug.SetupScript(script): Provided argument is not a script asset. Within a script, the 'Behavior' variable is the script asset.")end;local bd=Daneel.Debug.functionArgumentsInfo;local be={"Update","inner"}local b6=Map.GetPathInPackage(b4)for b0,L in pairs(b4)do local bf=b6 .."."..b0;if not b0:startswith("__")and not table.containsvalue(be,b0)and bd[bf]==nil then bd[bf]={script=b4}end end end;function Daneel.Debug.RegisterObject(bg)if not Daneel.Config.debug.enableDebug then return end;local bh=bg;local av=nil;if type(bg)=="table"then av=bg;bg=Daneel.Debug.GetNameFromValue(av)else av=table.getvalue(Daneel.Config.objectsByType,bg)if av==nil then av=table.getvalue(_G,bg)end end;if av==nil or bg==nil then print("Daneel.Debug.RegisterObject(): object or name not found",bh,bg,av)return end;local bd=Daneel.Debug.functionArgumentsInfo;local be={"Load","DefaultConfig","UserConfig","Awake","Start","Update","New","inner","GetId","GetName"}for b0,L in pairs(av)do if type(L)=="function"or type(L)=="userdata"then local bf=bg.."."..b0;if not b0:startswith("__")and not b0:startswith("o")and not table.containsvalue(be,b0)and bd[bf]==nil then bd[bf]={}end end end end;Daneel.Debug.StackTrace={messages={}}function Daneel.Debug.StackTrace.BeginFunction(bi,...)if not Daneel.Config.debug.enableDebug or not Daneel.Config.debug.enableStackTrace then return end;if#Daneel.Debug.StackTrace.messages>200 then print("WARNING : your StackTrace is more than 200 items long ! Emptying the StackTrace now. Did you forget to write a 'EndFunction()' somewhere ?")Daneel.Debug.StackTrace.messages={}end;local aI="Daneel.Debug.StackTrace.BeginFunction( functionName[, ...] ) : "Daneel.Debug.CheckArgType(bi,"functionName","string",aI)local S=bi.."( "local Q={...}if#Q>0 then for p,aE in ipairs(Q)do if type(aE)=="string"then S=S..'"'..tostring(aE)..'", 'else S=S..tostring(aE)..", "end end;S=S:sub(1,#S-2)end;S=S.." )"table.insert(Daneel.Debug.StackTrace.messages,S)end;function Daneel.Debug.StackTrace.EndFunction()if not Daneel.Config.debug.enableDebug or not Daneel.Config.debug.enableStackTrace then return end;table.remove(Daneel.Debug.StackTrace.messages)end;function Daneel.Debug.StackTrace.Print()if not Daneel.Config.debug.enableDebug or not Daneel.Config.debug.enableStackTrace then return end;local bj=Daneel.Debug.StackTrace.messages;Daneel.Debug.StackTrace.messages={}print("~~~~~ Daneel.Debug.StackTrace ~~~~~")if#bj<=0 then print("No message in the StackTrace.")else for p,S in ipairs(bj)do if p<10 then p="0"..p end;print("#"..p.." "..S)end end end;Daneel.Event={events={},persistentEvents={}}function Daneel.Event.Listen(bk,bl,bm)local aI="Daneel.Event.Listen( eventName, functionOrObject[, isPersistent] ) : "local bn=type(bl)local bo=bk;if type(bk)=="string"then bo={bk}end;for p,bk in pairs(bo)do if Daneel.Event.events[bk]==nil then Daneel.Event.events[bk]={}end;if Daneel.Event.persistentEvents[bk]==nil then Daneel.Event.persistentEvents[bk]={}end;if not table.containsvalue(Daneel.Event.events[bk],bl)and not table.containsvalue(Daneel.Event.persistentEvents[bk],bl)then if bm==true and bn=="table"then local aN=getmetatable(bl)if aN~=nil and aN==GameObject or table.containsvalue(Daneel.Config.componentObjectsByType,aN)then if Daneel.Config.debug.enableDebug then print(aI.."Game objects and components can't be persistent listeners",bl)end;bm=false end end;local bp=Daneel.Event.events;if bm==true then bp=Daneel.Event.persistentEvents end;table.insert(bp[bk],bl)end end end;function Daneel.Event.StopListen(bk,bl)if type(bk)~="string"then bl=bk;bk=nil end;Daneel.Debug.StackTrace.BeginFunction("Daneel.Event.StopListen",bk,bl)local aI="Daneel.Event.StopListen( eventName, functionOrObject ) : "Daneel.Debug.CheckOptionalArgType(bk,"eventName","string",aI)Daneel.Debug.CheckArgType(bl,"functionOrObject",{"table","function"},aI)local bo=bk;if type(bk)=="string"then bo={bk}end;if bo==nil then bo=table.merge(table.getkeys(Daneel.Event.events),table.getkeys(Daneel.Event.persistentEvents))end;for p,bk in pairs(bo)do local bq=Daneel.Event.events[bk]if bq~=nil then table.removevalue(bq,bl)end;bq=Daneel.Event.persistentEvents[bk]if bq~=nil then table.removevalue(bq,bl)end end;Daneel.Debug.StackTrace.EndFunction()end;function Daneel.Event.Fire(av,bk,...)local Q={...}Daneel.Debug.StackTrace.BeginFunction("Daneel.Event.Fire",av,bk,...)local aI="Daneel.Event.Fire( [object, ]eventName[, ...] ) : "local T=type(av)if T=="string"then if bk~=nil then table.insert(Q,1,bk)end;bk=av;av=nil elseif T~="nil"then Daneel.Debug.CheckArgType(av,"object","table",aI)Daneel.Debug.CheckArgType(bk,"eventName","string",aI)end;local bq={av}if av==nil then if Daneel.Event.events[bk]~=nil then bq=Daneel.Event.events[bk]end;if Daneel.Event.persistentEvents[bk]~=nil then bq=table.merge(bq,Daneel.Event.persistentEvents[bk])end end;local br={}for p=1,#bq do local bs=bq[p]local bn=type(bs)if bn=="function"or bn=="userdata"then if bs(unpack(Q))==false then table.insert(br,bs)end else local aN=getmetatable(bs)local bt=not bs.isDestroyed;if aN==GameObject and bs.inner==nil then bt=false end;if bt then local bu={}if bs.listenersByEvent~=nil and bs.listenersByEvent[bk]~=nil then bu=bs.listenersByEvent[bk]end;local L=rawget(bs,bk)if L~=nil then table.insert(bu,L)end;for a6=1,#bu do bu[a6](...)end;if aN==GameObject then local bv=Q[1]if bv==bs then table.remove(Q,1)end;if#Q==1 and type(Q[1])=="table"then Q=Q[1]end;bs:SendMessage(bk,Q)end end end end;for p=1,#br do Daneel.Event.StopListen(bk,br[p])end;Daneel.Debug.StackTrace.EndFunction()end;function GameObject.FireEvent(aZ,bk,...)Daneel.Event.Fire(aZ,bk,...)end;function Daneel.Event.AddEventListener(av,bk,bs)if av.listenersByEvent==nil then av.listenersByEvent={}end;if av.listenersByEvent[bk]==nil then av.listenersByEvent[bk]={}end;if not table.containsvalue(av.listenersByEvent[bk],bs)then table.insert(av.listenersByEvent[bk],bs)elseif Daneel.Debug.enableDebug==true then print("Daneel.Event.AddEventListener(): "..tostring(bs).." already listen for event '"..bk.."' on object: ",av)end end;function GameObject.AddEventListener(aZ,bk,bs)Daneel.Event.AddEventListener(aZ,bk,bs)end;function Daneel.Event.RemoveEventListener(av,bk,bs)if av.listenersByEvent~=nil and av.listenersByEvent[bk]~=nil then if bs~=nil then table.removevalue(av.listenersByEvent[bk],bs)else av.listenersByEvent[bk]=nil end end end;function GameObject.RemoveEventListener(aZ,bk,bs)Daneel.Event.RemoveEventListener(aZ,bk,bs)end;local bw={"gameObject","GameObject"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["Daneel.Event.Listen"]={{"eventName",{n,o}},{"functionOrObject",{o,ay,az}},{"isPersistent",d,isOptional=true}},["GameObject.FireEvent"]={bw,{"eventName",n}},["Daneel.Event.AddEventListener"]={{"object","table"},{"eventName",n},{"listener",{ay,az}}},["GameObject.AddEventListener"]={bw,{"eventName",n},{"listener",{ay,az}}},["Daneel.Event.RemoveEventListener"]={{"object","table"},{"eventName",n},{"listener",{ay,az},isOptional=true}},["GameObject.RemoveEventListener"]={bw,{"eventName",n},{"listener",{ay,az},isOptional=true}}})Daneel.Time={realTime=0.0,realDeltaTime=0.0,time=0.0,deltaTime=0.0,timeScale=1.0,frameCount=0}function Daneel.DefaultConfig()local bx={debug={enableDebug=false,enableStackTrace=false},objectsByType={GameObject=GameObject,Vector3=Vector3,Quaternion=Quaternion,Plane=Plane,Ray=Ray},componentObjectsByType={ScriptedBehavior=ScriptedBehavior,ModelRenderer=ModelRenderer,MapRenderer=MapRenderer,Camera=Camera,Transform=Transform,Physics=Physics,TextRenderer=TextRenderer,NetworkSync=NetworkSync},componentTypes={},assetObjectsByType={Script=Script,Model=Model,ModelAnimation=ModelAnimation,Map=Map,TileSet=TileSet,Sound=Sound,Scene=Scene,Font=Font},assetTypes={}}return bx end;Daneel.Config=Daneel.DefaultConfig()Daneel.Config.assetTypes=table.getkeys(Daneel.Config.assetObjectsByType)function Daneel.Load()if Daneel.isLoaded then return end;Daneel.isLoading=true;local by=nil;if Daneel.UserConfig~=nil then table.mergein(Daneel.Config,Daneel.UserConfig(),true)end;for p,b0 in ipairs(Daneel.modules.moduleNames)do local bz=Daneel.modules[b0]if bz.isConfigLoaded~=true then bz.isConfigLoaded=true;if bz.Config==nil then if bz.DefaultConfig~=nil then bz.Config=bz.DefaultConfig()else bz.Config={}end end;if bz.UserConfig~=nil then table.mergein(bz.Config,bz.UserConfig(),true)end;if bz.Config.objectsByType~=nil then table.mergein(Daneel.Config.objectsByType,bz.Config.objectsByType)end;if bz.Config.componentObjectsByType~=nil then table.mergein(Daneel.Config.componentObjectsByType,bz.Config.componentObjectsByType)table.mergein(Daneel.Config.objectsByType,bz.Config.componentObjectsByType)end end end;table.mergein(Daneel.Config.objectsByType,Daneel.Config.componentObjectsByType,Daneel.Config.assetObjectsByType)for bA,bB in pairs(Daneel.Config.componentObjectsByType)do Daneel.Utilities.AllowDynamicGettersAndSetters(bB,{Component})if bA~="ScriptedBehavior"then bB["__tostring"]=function(bC)return bA..": "..bC:GetId()end end end;table.mergein(Daneel.Config.componentTypes,table.getkeys(Daneel.Config.componentObjectsByType))for bD,bE in pairs(Daneel.Config.assetObjectsByType)do Daneel.Utilities.AllowDynamicGettersAndSetters(bE,{Asset})bE["__tostring"]=function(bF)return bD..": "..Daneel.Utilities.GetId(bF)..": '"..Map.GetPathInPackage(bF).."'"end end;if Daneel.Config.debug.enableDebug then if Daneel.Config.debug.enableStackTrace then Daneel.Debug.SetNewError()end;for as,j in pairs(Daneel.Debug.functionArgumentsInfo)do Daneel.Debug.RegisterFunction(as,j)end end;CS.IsWebPlayer=type(Camera.ProjectionMode.Orthographic)=="number"Daneel.Debug.StackTrace.BeginFunction("Daneel.Load")for p,b0 in ipairs(Daneel.modules.moduleNames)do local bz=Daneel.modules[b0]if bz.isLoaded~=true then bz.isLoaded=true;if type(bz.Load)=="function"then bz.Load()end end end;Daneel.isLoaded=true;Daneel.isLoading=false;if Daneel.Config.debug.enableDebug then print("~~~~~ Daneel loaded ~~~~~")end;Daneel.moduleUpdateFunctions={}for p,b0 in ipairs(Daneel.modules.moduleNames)do local bz=Daneel.modules[b0]if bz.doNotCallUpdate~=true then if type(bz.Update)=="function"and not table.containsvalue(Daneel.moduleUpdateFunctions,bz.Update)then table.insert(Daneel.moduleUpdateFunctions,bz.Update)end end end;Daneel.Debug.StackTrace.EndFunction()end;function Behavior.Awake(self)if self.debugTry==true then CraftStudio.Destroy(self)self.testFunction()self.successCallback()return end;if table.getvalue(_G,"LOAD_DANEEL")~=nil and LOAD_DANEEL==false then return end;if Daneel.isAwake then if Daneel.Config.debug.enableDebug then print("Daneel:Awake() : You tried to load Daneel twice ! The 'Daneel' scripted behavior is on two game objects inside the same scene. This time, it was on "..tostring(self.gameObject))end;CS.Destroy(self)return end;Daneel.isAwake=true;Daneel.Event.Listen("OnNewSceneWillLoad",function()Daneel.isAwake=false end)Daneel.Load()Daneel.Debug.StackTrace.messages={}Daneel.Debug.StackTrace.BeginFunction("Daneel.Awake")for p,b0 in ipairs(Daneel.modules.moduleNames)do local bz=Daneel.modules[b0]if type(bz.Awake)=="function"then bz.Awake()end end;if Daneel.Config.debug.enableDebug then print("~~~~~ Daneel awake ~~~~~")end;Daneel.Event.Fire("OnAwake")Daneel.Debug.StackTrace.EndFunction()end;function Behavior.Start(self)if self.debugTry then return end;Daneel.Debug.StackTrace.BeginFunction("Daneel.Start")for p,b0 in ipairs(Daneel.modules.moduleNames)do local bz=Daneel.modules[b0]if type(bz.Start)=="function"then bz.Start()end end;if Daneel.Config.debug.enableDebug then print("~~~~~ Daneel started ~~~~~")end;Daneel.Event.Fire("OnStart")Daneel.Debug.StackTrace.EndFunction()end;function Behavior.Update(self)if self.debugTry then return end;local bG=os.clock()Daneel.Time.realDeltaTime=bG-Daneel.Time.realTime;Daneel.Time.realTime=bG;Daneel.Time.deltaTime=Daneel.Time.realDeltaTime*Daneel.Time.timeScale;Daneel.Time.time=Daneel.Time.time+Daneel.Time.deltaTime;Daneel.Time.frameCount=Daneel.Time.frameCount+1;for p=1,#Daneel.moduleUpdateFunctions do Daneel.moduleUpdateFunctions[p]()end end;MouseInput={buttonExists={LeftMouse=false,RightMouse=false,WheelUp=false,WheelDown=false},frameCount=0,lastLeftClickFrame=0,components={}}Daneel.modules.MouseInput=MouseInput;function MouseInput.DefaultConfig()return{doubleClickDelay=20,componentObjectsByType={MouseInput=MouseInput}}end;MouseInput.Config=MouseInput.DefaultConfig()function MouseInput.Load()for au,af in pairs(MouseInput.buttonExists)do MouseInput.buttonExists[au]=Daneel.Utilities.ButtonExists(au)end;MouseInput.lastLeftClickFrame=-MouseInput.Config.doubleClickDelay end;function MouseInput.Awake()MouseInput.components={}end;function MouseInput.Update()MouseInput.frameCount=MouseInput.frameCount+1;local bH=CS.Input.GetMouseDelta()local bI=false;if bH.x~=0 or bH.y~=0 then bI=true end;local bJ=false;local bK=false;local bL=false;if MouseInput.buttonExists.LeftMouse then bJ=CS.Input.WasButtonJustPressed("LeftMouse")bK=CS.Input.IsButtonDown("LeftMouse")bL=CS.Input.WasButtonJustReleased("LeftMouse")end;local bM=false;if MouseInput.buttonExists.RightMouse then bM=CS.Input.WasButtonJustPressed("RightMouse")end;local bN=false;if MouseInput.buttonExists.WheelUp then bN=CS.Input.WasButtonJustPressed("WheelUp")end;local bO=false;if MouseInput.buttonExists.WheelDown then bO=CS.Input.WasButtonJustPressed("WheelDown")end;if bI==true or bJ==true or bK==true or bL==true or bM==true or bN==true or bO==true then local bP=false;if bJ then bP=MouseInput.frameCount<=MouseInput.lastLeftClickFrame+MouseInput.Config.doubleClickDelay;MouseInput.lastLeftClickFrame=MouseInput.frameCount end;local bQ=false;for p=1,#MouseInput.components do local bC=MouseInput.components[p]local bR=bC.gameObject;if bR.inner~=nil and not bR.isDestroyed and bR.camera~=nil then local bS=bR.camera:CreateRay(CS.Input.GetMousePosition())for a6=1,#bC._tags do local bT=bC._tags[a6]local bU=GameObject.GetWithTag(bT)for _=1,#bU do local aZ=bU[_]local bV=bS:IntersectsGameObject(aZ)if bV~=nil then if not aZ.isMouseOver then aZ.isMouseOver=true;Daneel.Event.Fire(aZ,"OnMouseEnter",aZ)end elseif aZ.isMouseOver==true then aZ.isMouseOver=false;Daneel.Event.Fire(aZ,"OnMouseExit",aZ)end;if aZ.isMouseOver==true then Daneel.Event.Fire(aZ,"OnMouseOver",aZ,bV)if bJ==true then Daneel.Event.Fire(aZ,"OnClick",aZ)if bP==true then Daneel.Event.Fire(aZ,"OnDoubleClick",aZ)end end;if bK==true and bI==true then Daneel.Event.Fire(aZ,"OnDrag",aZ)end;if bL==true then Daneel.Event.Fire(aZ,"OnLeftClickReleased",aZ)end;if bM==true then Daneel.Event.Fire(aZ,"OnRightClick",aZ)end;if bN==true then Daneel.Event.Fire(aZ,"OnWheelUp",aZ)end;if bO==true then Daneel.Event.Fire(aZ,"OnWheelDown",aZ)end end end end else MouseInput.components[p]=nil;bQ=true end end;if bQ==true then MouseInput.components=table.reindex(MouseInput.components)end end end;function MouseInput.New(aZ,bW)if aZ.camera==nil then error("MouseInput.New(gameObject, params) : "..tostring(aZ).." has no Camera component.")return end;local bC={_tags={}}bC.gameObject=aZ;aZ.mouseInput=bC;setmetatable(bC,MouseInput)if bW~=nil then bC:Set(bW)end;table.insert(MouseInput.components,bC)return bC end;function MouseInput.SetTags(bX,bY)if type(bY)=="string"then bY={bY}end;bX._tags=bY end;function MouseInput.GetTags(bX)return bX._tags end;local bZ={"mouseInput","MouseInput"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["MouseInput.New"]={bw,{"params","table",isOptional=true}},["MouseInput.SetTags"]={bZ,{"tags",{n,o}}},["MouseInput.GetTags"]={bZ}})Trigger={frameCount=0,triggerComponents={}}Daneel.modules.Trigger=Trigger;function Trigger.DefaultConfig()return{componentObjectsByType={Trigger=Trigger}}end;Trigger.Config=Trigger.DefaultConfig()function Trigger.Awake()Trigger.triggerComponents={}end;function Trigger.Update()Trigger.frameCount=Trigger.frameCount+1;local bQ=false;for p=1,#Trigger.triggerComponents do local b_=Trigger.triggerComponents[p]local c0=b_.gameObject;if c0.inner~=nil and not c0.isDestroyed then if b_._updateInterval>1 and Trigger.frameCount%b_._updateInterval==0 then local c1=c0.transform:GetPosition()for a6=1,#b_._tags do local bT=b_._tags[a6]local bU=GameObject.GetWithTag(bT)for _=1,#bU do local aZ=bU[_]if aZ~=c0 then local c2=b_:IsGameObjectInRange(aZ,c1)local c3=table.containsvalue(b_.gameObjectsInRangeLastUpdate,aZ)if c2 then if c3 then Daneel.Event.Fire(aZ,"OnTriggerStay",aZ,c0)Daneel.Event.Fire(c0,"OnTriggerStay",c0,aZ)else table.insert(b_.gameObjectsInRangeLastUpdate,aZ)Daneel.Event.Fire(aZ,"OnTriggerEnter",aZ,c0)Daneel.Event.Fire(c0,"OnTriggerEnter",c0,aZ)end elseif c3 then table.removevalue(b_.gameObjectsInRangeLastUpdate,aZ)Daneel.Event.Fire(aZ,"OnTriggerExit",aZ,c0)Daneel.Event.Fire(c0,"OnTriggerExit",c0,aZ)end end end end end else Trigger.triggerComponents[p]=nil;bQ=true end end;if bQ==true then Trigger.triggerComponents=table.reindex(Trigger.triggerComponents)end end;function Trigger.New(aZ,bW)local b_={_range=1,_updateInterval=5,_tags={},gameObjectsInRangeLastUpdate={}}b_.gameObject=aZ;aZ.trigger=b_;setmetatable(b_,Trigger)if bW~=nil then b_:Set(bW)end;return b_ end;function Trigger.SetTags(b_,bY)if type(bY)=="string"then bY={bY}end;b_._tags=bY end;function Trigger.GetTags(b_)return b_._tags end;function Trigger.SetRange(b_,c4)b_._range=math.clamp(c4,0,9999)end;function Trigger.GetRange(b_)return b_._range end;function Trigger.SetUpdateInterval(b_,c5)b_._updateInterval=math.clamp(c5,0,9999)end;function Trigger.GetUpdateInterval(b_)return b_._updateInterval end;function Trigger.GetGameObjectsInRange(b_)local c1=self.gameObject.transform:GetPosition()local c6={}for p=1,#b_._tags do local bU=GameObject.GetWithTag(b_._tags[p])for a6=1,#bU do local aZ=gameObjets[a6]if aZ~=b_.gameObject and b_:IsGameObjectInRange(aZ,c1)then table.insertonce(c6,aZ)end end end;return c6 end;function Trigger.IsGameObjectInRange(b_,aZ,c1)local aI="Behavior:IsGameObjectInRange( gameObject[, triggerPosition] )"local c0=b_.gameObject;if c1==nil then c1=c0.transform:GetPosition()end;local c7=false;local c8=aZ.transform:GetPosition()-c1;local c9=c8:SqrLength()if b_._range>0 and c9<=b_._range^2 then c7=true elseif b_._range<=0 then if b_.ray==nil then b_.ray=Ray.New(Vector3.New(0),Vector3.New(0))end;local bS=b_.ray;bS.position=c1;bS.direction=c8;local ca=nil;if c0.modelRenderer~=nil then ca=bS:IntersectsModelRenderer(c0.modelRenderer)elseif c0.mapRenderer~=nil then ca=bS:IntersectsMapRenderer(c0.mapRenderer)end;if aZ.modelRenderer~=nil then c9=bS:IntersectsModelRenderer(aZ.modelRenderer)^2 elseif aZ.mapRenderer~=nil then c9=bS:IntersectsMapRenderer(aZ.mapRenderer)^2 end;if ca~=nil and c9<=ca^2 then c7=true end end;return c7 end;local cb={"trigger","Trigger"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["Trigger.New"]={bw,{"params","table",isOptional=true}},["Trigger.SetTags"]={cb,{"tags",{n,o}}},["Trigger.GetTags"]={cb},["Trigger.SetRange"]={cb,{"range",ax}},["Trigger.GetRange"]={cb},["Trigger.SetUpdateInterval"]={cb,{"updateInterval",ax}},["Trigger.GetUpdateInterval"]={cb},["Trigger.GetGameObjectsInRange"]={cb},["Trigger.IsGameObjectInRange"]={cb,bw,{"triggerPosition","Vector3",isOptional=true}}})Lang={dictionariesByLanguage={english={}},cache={},gameObjectsToUpdate={},doNotCallUpdate=true}Daneel.modules.Lang=Lang;function Lang.DefaultConfig()return{default=nil,current=nil,searchInDefault=true,keyNotFound="langkeynotfound"}end;Lang.Config=Lang.DefaultConfig()function Lang.Load()local cc=nil;for cd,ce in pairs(Lang.dictionariesByLanguage)do local cf=cd:lower()if cf~=cd then Lang.dictionariesByLanguage[cf]=ce;Lang.dictionariesByLanguage[cd]=nil end;if cc==nil then cc=cf end end;if cc==nil then if Daneel.Config.debug.enableDebug==true then error("Lang.Load(): No dictionary found in Lang.dictionariesByLanguage !")end;return end;if Lang.Config.default==nil then Lang.Config.default=cc end;Lang.Config.default=Lang.Config.default:lower()if Lang.Config.current==nil then Lang.Config.current=Lang.Config.default end;Lang.Config.current=Lang.Config.current:lower()end;function Lang.Start()if Lang.Config.current~=nil then Lang.Update(Lang.Config.current)end end;function Lang.Get(G,ak)if ak==nil and Lang.cache[G]~=nil then return Lang.cache[G]end;local cg=Lang.Config.current;local cc=Lang.Config.default;local ch=Lang.Config.searchInDefault;local ci=true;local W=string.split(G,".")local cj=cg;if Lang.dictionariesByLanguage[W[1]]~=nil then cj=table.remove(W,1)end;local ck=table.concat(W,".")local cl=cj.."."..ck;if ak==nil and Lang.cache[cl]~=nil then return Lang.cache[cl]end;local ce=Lang.dictionariesByLanguage[cj]local aI="Lang.Get(key[, replacements]): "if ce==nil then error(aI.."Language '"..cj.."' does not exists",G,cl)end;for p=1,#W do local cm=W[p]if ce[cm]==nil then if ch==true and cj~=cc then ci=false;ce=Lang.Get(cc.."."..ck,ak)else ce=Lang.Config.keyNotFound or"keynotfound"end;break end;ce=ce[cm]end;local cn=ce;if type(cn)~="string"then error(aI.."Localization key '"..G.."' does not lead to a string but to : '"..tostring(cn).."'.",G,cl)end;if ak~=nil then cn=Daneel.Utilities.ReplaceInString(cn,ak)elseif ci==true and cn~=Lang.Config.keyNotFound then Lang.cache[G]=cn;Lang.cache[cl]=cn end;return cn end;function Lang.RegisterForUpdate(aZ,G,ak)Lang.gameObjectsToUpdate[aZ]={key=G,replacements=ak}end;function Lang.Update(cj)cj=Daneel.Debug.CheckArgValue(cj,"language",table.getkeys(Lang.dictionariesByLanguage),"Lang.Update(language): ")Lang.cache={}Lang.Config.current=cj;for aZ,j in pairs(Lang.gameObjectsToUpdate)do if aZ.inner==nil or aZ.isDestroyed==true then Lang.gameObjectsToUpdate[aZ]=nil else local aR=Lang.Get(j.key,j.replacements)if aZ.textArea~=nil then aZ.textArea:SetText(aR)elseif aZ.textRenderer~=nil then aZ.textRenderer:SetText(aR)elseif Daneel.Config.debug.enableDebug then print("Lang.Update(language): WARNING : "..tostring(aZ).." has no TextRenderer or GUI.TextArea component.")end end end;Daneel.Event.Fire("OnLangUpdate")end;table.mergein(Daneel.Debug.functionArgumentsInfo,{["Lang.Get"]={{"key","string"},{"replacements","table",isOptional=true}},["Lang.RegisterForUpdate"]={bw,{"key","string"},{"replacements","table",isOptional=true}},["Lang.Update"]={{"language","string"}}})local n="string"local d="boolean"local ax="number"local o="table"local bv="GameObject"local co="Vector2"local aA="Vector3"local cp={"params",o}setmetatable(Vector3,{__call=function(an,...)return an:New(...)end})setmetatable(Quaternion,{__call=function(an,...)return an:New(...)end})setmetatable(Plane,{__call=function(an,...)return an:New(...)end})Plane.__tostring=function(cq)return"Plane: { normal="..tostring(cq.normal)..", distance="..tostring(cq.distance).." }"end;Asset={}Asset.__index=Asset;setmetatable(Asset,{__call=function(an,...)return an.Get(...)end})local cr=table.merge({"string"},Daneel.Config.assetTypes)function Asset.Get(cs,bD,ct)local aI="Asset.Get( assetPath[, assetType, errorIfAssetNotFound] ) : "if cs==nil then if Daneel.Config.debug.enableDebug then error(aI.."Argument 'assetPath' is nil.")end;return nil end;local T=Daneel.Debug.CheckArgType(cs,"assetPath",cr,aI)if bD~=nil then Daneel.Debug.CheckArgType(bD,"assetType","string",aI)bD=Daneel.Debug.CheckArgValue(bD,"assetType",Daneel.Config.assetTypes,aI)end;if T~="string"then if bD~=nil and T~=bD then error(aI.."Provided asset '"..cs.."' has a different type '"..T.."' than the provided 'assetType' argument '"..bD.."'.")end;return cs end;local bF=nil;if bD==nil then bF=CraftStudio.FindAsset(cs)else bF=CraftStudio.FindAsset(cs,bD)end;if bF==nil and ct==true then if bD==nil then bD="asset"end;error(aI.."Argument 'assetPath' : "..bD.." with name '"..cs.."' was not found.")end;return bF end;function Asset.GetPath(bF)return Map.GetPathInPackage(bF)end;function Asset.GetName(bF)local b0=rawget(bF,"name")if b0==nil then b0=Asset.GetPath(bF):gsub("^(.*/)","")rawset(bF,"name",b0)end;return b0 end;function Asset.GetId(bF)return Daneel.Utilities.GetId(bF)end;Component={}Component.__index=Component;function Component.Set(bC,bW)for G,h in pairs(bW)do bC[G]=h end end;function Component.Destroy(bC)table.removevalue(bC.gameObject,bC)CraftStudio.Destroy(bC)end;function Component.GetId(bC)return Daneel.Utilities.GetId(bC)end;table.mergein(Daneel.Debug.functionArgumentsInfo,{["Asset.Get"]={{"assetPath"},{"assetType",isOptional=true},{"errorIfAssetNotFound","boolean",isOptional=true}},["Asset.GetPath"]={{"asset",Daneel.Config.assetTypes}},["Asset.GetName"]={{"asset",Daneel.Config.assetTypes}},["Component.Set"]={{"component",Daneel.Config.componentTypes},{"params","table"}},["Component.Destroy"]={{"component",Daneel.Config.componentTypes}}})Map.oGetPathInPackage=Map.GetPathInPackage;function Map.GetPathInPackage(bF)local cu=rawget(bF,"path")if cu==nil then cu=Map.oGetPathInPackage(bF)end;return cu end;Map.oLoadFromPackage=Map.LoadFromPackage;function Map.LoadFromPackage(cu,cv)Map.oLoadFromPackage(cu,function(cw)if cw~=nil then rawset(cw,"path",cu)end;cv(cw)end)end;Map.oGetBlockIDAt=Map.GetBlockIDAt;function Map.GetBlockIDAt(cw,cx,cy,cz)if type(cx)=="table"then cz=cx.z;cy=cx.y;cx=cx.x end;return Map.oGetBlockIDAt(cw,cx,cy,cz)end;Map.oGetBlockOrientationAt=Map.GetBlockOrientationAt;function Map.GetBlockOrientationAt(cw,cx,cy,cz)if type(cx)=="table"then cz=cx.z;cy=cx.y;cx=cx.x end;return Map.GetBlockOrientationAt(cw,cx,cy,cz)end;Map.oSetBlockAt=Map.SetBlockAt;function Map.SetBlockAt(cw,cx,cy,cz,aw,cA)if type(cx)=="table"then aw=cy;cA=cz;cz=cx.z;cy=cx.y;cx=cx.x end;if cA==nil then Map.oSetBlockAt(cw,cx,cy,cz,aw)else Map.oSetBlockAt(cw,cx,cy,cz,aw,cA)end end;Transform.oSetLocalScale=Transform.SetLocalScale;function Transform.SetLocalScale(cB,cC)if type(cC)=="number"then cC=Vector3:New(cC)end;Transform.oSetLocalScale(cB,cC)end;function Transform.SetScale(cB,cC)if type(cC)=="number"then cC=Vector3:New(cC)end;local cD=cB.gameObject:GetParent()if cD~=nil then cC=cC/cD.transform:GetScale()end;cB:SetLocalScale(cC)end;function Transform.GetScale(cB)local cC=cB:GetLocalScale()local cD=cB.gameObject:GetParent()if cD~=nil then cC=cC*cD.transform:GetScale()end;return cC end;function Transform.WorldToLocal(cB,cE)local bv=cB.worldToLocalGO;if bv==nil then bv=CS.CreateGameObject("WorldToLocal",cB.gameObject)cB.worldToLocalGO=bv else bv:SetParent(cB.gameObject)end;bv.transform:SetPosition(cE)return bv.transform:GetLocalPosition()end;function Transform.LocalToWorld(cB,cE)local bv=cB.worldToLocalGO;if bv==nil then bv=CS.CreateGameObject("WorldToLocal",cB.gameObject)cB.worldToLocalGO=bv else bv:SetParent(cB.gameObject)end;bv.transform:SetLocalPosition(cE)return bv.transform:GetPosition()end;ModelRenderer.oSetModel=ModelRenderer.SetModel;function ModelRenderer.SetModel(cF,cG)local cH=nil;if cG~=nil then cH=Asset.Get(cG,"Model",true)end;ModelRenderer.oSetModel(cF,cH)end;ModelRenderer.oSetAnimation=ModelRenderer.SetAnimation;function ModelRenderer.SetAnimation(cF,cI)local cJ=nil;if cI~=nil then cJ=Asset.Get(cI,"ModelAnimation",true)end;ModelRenderer.oSetAnimation(cF,cJ)end;function ModelRenderer.Set(cF,bW)if bW.model~=nil then cF:SetModel(bW.model)bW.model=nil end;if bW.animationTime~=nil and bW.animation~=nil then cF:SetAnimation(bW.animation)bW.animation=nil end;Component.Set(cF,bW)end;MapRenderer.oSetMap=MapRenderer.SetMap;function MapRenderer.SetMap(cK,cL,cM)local cw=nil;if cL~=nil then cw=Asset.Get(cL,"Map",true)end;if cM~=nil then MapRenderer.oSetMap(cK,cw,cM)else MapRenderer.oSetMap(cK,cw)end end;MapRenderer.oSetTileSet=MapRenderer.SetTileSet;function MapRenderer.SetTileSet(cK,cN)local cO=nil;if cN~=nil then cO=Asset.Get(cN,"TileSet",true)end;MapRenderer.oSetTileSet(cK,cO)end;function MapRenderer.Set(cK,bW)if bW.map~=nil then cK:SetMap(bW.map)bW.map=nil end;Component.Set(cK,bW)end;function MapRenderer.LoadNewMap(cK,cv)local cw=cK:GetMap()if cw~=nil then Map.LoadFromPackage(Map.GetPathInPackage(cw),function(cw)cK:SetMap(cw)if cv~=nil then cv(cw)end end)elseif Daneel.Config.debug.enableDebug==true then error("MapRenderer.LoadNewMap(): No map is set on the provided map renderer. Can't load new map.")end end;TextRenderer.oSetFont=TextRenderer.SetFont;function TextRenderer.SetFont(cP,cQ)local cR=nil;if cQ~=nil then cR=Asset.Get(cQ,"Font",true)end;TextRenderer.oSetFont(cP,cR)end;TextRenderer.oSetAlignment=TextRenderer.SetAlignment;function TextRenderer.SetAlignment(cP,cS)if type(cS)=="string"then local cT="Center"if Daneel.Config.textRenderer~=nil and Daneel.Config.textRenderer.alignment~=nil then cT=Daneel.Config.textRenderer.alignment end;local aI="TextRenderer.SetAlignment( textRenderer, alignment ) : "cS=Daneel.Debug.CheckArgValue(cS,"alignment",{"Left","Center","Right"},aI,cT)cS=TextRenderer.Alignment[cS]end;TextRenderer.oSetAlignment(cP,cS)end;function TextRenderer.SetTextWidth(cP,cU)local cV=cP:GetTextWidth()/cP.gameObject.transform:GetScale()cP.gameObject.transform:SetScale(cU/cV)end;Camera.oSetProjectionMode=Camera.SetProjectionMode;function Camera.SetProjectionMode(cW,cX)if type(cX)=="string"then local cT="Perspective"if Daneel.Config.camera~=nil and Daneel.Config.camera.projectionMode~=nil then cT=Daneel.Config.camera.projectionMode end;cX=Daneel.Debug.CheckArgValue(cX,"projectionMode",{"Perspective","Orthographic"},"Camera.SetProjectionMode( camera[, projectionMode] ) : ",cT)cX=Camera.ProjectionMode[cX]end;Camera.oSetProjectionMode(cW,cX)end;function Camera.Set(cW,bW)if bW.projectionMode~=nil then cW:SetProjectionMode(bW.projectionMode)bW.projectionMode=nil end;Component.Set(cW,bW)end;function Camera.GetPixelsToUnits(cW)local cY=CS.Screen.GetSize()local cZ=cY.y;if cY.x<cY.y then cZ=cY.x end;if cW:GetProjectionMode()==Camera.ProjectionMode.Orthographic then return cW:GetOrthographicScale()/cZ else return math.tan(math.rad(cW:GetFOV()/2))/cZ*2 end end;function Camera.GetUnitsToPixels(cW)local c_=cW:GetPixelsToUnits()if c_~=nil and c_~=0 then return 1/c_ end end;function Camera.GetBaseDistance(cW)if cW:GetProjectionMode()==Camera.ProjectionMode.Perspective then return 0.5/math.tan(math.rad(cW:GetFOV()/2))end end;function Camera.IsPositionInFrustum(cW,cE)local d0=cW.gameObject.transform:WorldToLocal(cE)if d0.z<0 then local cY=CS.Screen.GetSize()local c4=Vector2.New(0)if cW:GetProjectionMode()==Camera.ProjectionMode.Orthographic then c4=cY*cW:GetPixelsToUnits()/2 else local cZ=cY.y;if cY.x<cY.y then cZ=cY.x end;c4=-d0.z/cW:GetBaseDistance()*cY/cZ;c4=c4/2 end;if d0.x>=-c4.x and d0.x<=c4.x and d0.y>=-c4.y and d0.y<=c4.y then return true end end;return false end;function Camera.WorldToScreenPoint(cW,cE)local d0=cW.gameObject.transform:WorldToLocal(cE)local d1=cW:GetUnitsToPixels()local cY=CS.Screen.GetSize()if cW:GetProjectionMode()==Camera.ProjectionMode.Orthographic then d0.x=d0.x*d1+cY.x/2;d0.y=-d0.y*d1+cY.y/2 else local d2=math.abs(d0.z)d0.x=d0.x/d2*d1+cY.x/2;d0.y=-d0.y/d2*d1+cY.y/2 end;return d0 end;Camera.oGetFOV=Camera.GetFOV;function Camera.GetFOV(cW)return math.round(Camera.oGetFOV(cW),2)end;Camera.GetFov=Camera.GetFOV;Camera.SetFov=Camera.SetFOV;Camera.oProject=Camera.Project;function Camera.Project(cW,cE)return setmetatable(Camera.oProject(cW,cE),Vector2)end;table.mergein(Daneel.Debug.functionArgumentsInfo,{["Transform.SetLocalScale"]={{"transform","Transform"},{"number",{ax,aA}}},["Transform.SetScale"]={{"transform","Transform"},{"number",{ax,aA}}},["Transform.GetScale"]={{"transform","Transform"}},["Transform.WorldToLocal"]={{"transform","Transform"},{"position",aA}},["Transform.LocalToWorld"]={{"transform","Transform"},{"position",aA}},["ModelRenderer.SetModel"]={{"modelRenderer","ModelRenderer"},{"modelNameOrAsset",{n,"Model"},isOptional=true}},["ModelRenderer.SetAnimation"]={{"modelRenderer","ModelRenderer"},{"animationNameOrAsset",{n,"ModelAnimation"},isOptional=true}},["ModelRenderer.Set"]={{"modelRenderer","ModelRenderer"},cp},["MapRenderer.SetMap"]={{"mapRenderer","MapRenderer"},{"mapNameOrAsset",{n,"Map"},isOptional=true},{"replaceTileSet","boolean",isOptional=true}},["MapRenderer.SetTileSet"]={{"mapRenderer","MapRenderer"},{"tileSetNameOrAsset",{n,"TileSet"},isOptional=true}},["MapRenderer.Set"]={{"mapRenderer","MapRenderer"},cp},["MapRenderer.LoadNewMap"]={{"mapRenderer","MapRenderer"},{"callback","function",isOptional=true}},["TextRenderer.SetFont"]={{"textRenderer","TextRenderer"},{"fontNameOrAsset",{n,"Font"},isOptional=true}},["TextRenderer.SetAlignment"]={{"textRenderer","TextRenderer"},{"alignment",{n,"userdata",ax}}},["TextRenderer.SetTextWidth"]={{"textRenderer","TextRenderer"},{"width",ax}},["Camera.SetProjectionMode"]={{"camera","Camera"},{"projectionMode",{n,"userdata",ax}}},["Camera.Set"]={{"camera","Camera"},cp},["Camera.GetPixelsToUnits"]={{"camera","Camera"}},["Camera.GetUnitsToPixels"]={{"camera","Camera"}},["Camera.GetBaseDistance"]={{"camera","Camera"}},["Camera.IsPositionInFrustum"]={{"camera","Camera"},{"position",aA}},["Camera.WorldToScreenPoint"]={{"camera","Camera"},{"position",aA}},["Camera.GetFOV"]={{"camera","Camera"}},["Camera.Project"]={{"camera","Camera"},{"position",aA}}})Vector2={}Vector2.__index=Vector2;setmetatable(Vector2,{__call=function(an,...)return an.New(...)end})Daneel.Config.objectsByType.Vector2=Vector2;function Vector2.__tostring(d3)return"Vector2: { x="..d3.x..", y="..d3.y.." }"end;function Vector2.New(cx,cy)local d4=setmetatable({x=cx,y=cy},Vector2)if type(cx)=="table"then d4.x=cx.x;d4.y=cx.y elseif cy==nil then d4.y=cx end;return d4 end;function Vector2.GetLength(d4)return math.sqrt(d4.x^2+d4.y^2)end;function Vector2.GetSqrLength(d4)return d4.x^2+d4.y^2 end;function Vector2.Normalized(d4)return Vector2.New(d4.x,d4.y):Normalize()end;function Vector2.Normalize(d4)local K=d4:GetLength()if K~=0 then d4=d4/K end end;function Vector2.__add(c,d)return Vector2.New(c.x+d.x,c.y+d.y)end;function Vector2.__sub(c,d)return Vector2.New(c.x-d.x,c.y-d.y)end;function Vector2.__mul(c,d)local d5=nil;if type(c)=="number"then d5=Vector2.New(c*d.x,c*d.y)elseif type(d)=="number"then d5=Vector2.New(c.x*d,c.y*d)else d5=Vector2.New(c.x*d.x,c.y*d.y)end;return d5 end;function Vector2.__div(c,d)local aI="Vector2.__div(a, b) : "local d5=nil;if type(c)=="number"then if d.x==0 or d.y==0 then error(aI.."One of the components of the denominator is equal to 0. Can't divide by 0 !",c,d)end;d5=Vector2.New(c/d.x,c/d.y)elseif type(d)=="number"then if d==0 then error(aI.."The denominator is equal to 0 ! Can't divide by 0 !",c,d)end;d5=Vector2.New(c.x/d,c.y/d)else if d.x==0 or d.y==0 then error(aI.."One of the components of the denominator is equal to 0. Can't divide by 0 !",c,d)end;d5=Vector2.New(c.x/d.x,c.y/d.y)end;return d5 end;function Vector2.__unm(d4)return Vector2.New(-d4.x,-d4.y)end;function Vector2.__pow(d4,d6)return Vector2.New(d4.x^d6,d4.y^d6)end;function Vector2.__eq(c,d)return c.x==d.x and c.y==d.y end;function Vector2.ToString(d4)for p,d7 in pairs({"x","y"})do if tostring(d4[d7])=="-0"then d4[d7]=0 end end;return d4.x.." "..d4.y end;Vector3.tostringRoundValue=3;Vector3.__tostring=function(d4)local d8=Vector3.tostringRoundValue;if d8~=nil and d8>=0 then return"Vector3: { x="..math.round(d4.x,d8)..", y="..math.round(d4.y,d8)..", z="..math.round(d4.z,d8).." }"else return"Vector3: { x="..d4.x..", y="..d4.y..", z="..d4.z.." }"end end;function Vector3.New(cx,cy,cz,d9)if cx==Vector3 then cx=cy;cy=cz;cz=d9 end;if type(cx)=="table"then if cx.z==nil then cy=cx.y;cx=cx.x else cy=cx.y;cz=cx.z;cx=cx.x end elseif type(cy)=="table"then cz=cy.y;cy=cy.x end;cx=cx or 0;cy=cy or cx;cz=cz or cy;return setmetatable({x=cx,y=cy,z=cz},Vector3)end;function Vector3.GetLength(d4)return math.sqrt(d4.x^2+d4.y^2+d4.z^2)end;function Vector3.GetSqrLength(d4)return d4.x^2+d4.y^2+d4.z^2 end;function Vector3.ToString(d4)for p,d7 in pairs({"x","y","z"})do if tostring(d4[d7])=="-0"then d4[d7]=0 end end;return d4.x.." "..d4.y.." "..d4.z end;function string.tovector(da)local d4=Vector3:New(0)local W={"z","y","x"}for w in string.gmatch(da,"[0-9.-]+")do local d7=table.remove(W)if d7~=nil then d4[d7]=tonumber(w)else break end end;if table.remove(W)=="z"then setmetatable(d4,Vector2)d4.z=nil end;return d4 end;table.mergein(Daneel.Debug.functionArgumentsInfo,{["Vector2.New"]={{"x",{n,ax,o,co,aA}},{"y",{n,ax},isOptional=true}},["Vector2.GetLength"]={{"vector",co}},["Vector2.GetSqrLength"]={{"vector",co}},["Vector2.Normalized"]={{"vector",co}},["Vector2.Normalize"]={{"vector",co}},["Vector2.__add"]={{"a",co},{"b",co}},["Vector2.__sub"]={{"a",co},{"b",co}},["Vector2.__mul"]={{"a",{ax,co}},{"b",{ax,co}}},["Vector2.__div"]={{"a",{ax,co}},{"b",{ax,co}}},["Vector2.__unm"]={{"vector",co}},["Vector2.__pow"]={{"vector",co},{"exp","number"}},["Vector2.__add"]={{"a",co},{"b",co}},["Vector3.GetLength"]={{"vector",aA}},["Vector3.GetSqrLength"]={{"vector",aA}},["Vector3.ToString"]={{"vector",aA}},["string.tovector"]={{"sVector",n}}})CraftStudio.Input.oGetMousePosition=CraftStudio.Input.GetMousePosition;function CraftStudio.Input.GetMousePosition()return setmetatable(CraftStudio.Input.oGetMousePosition(),Vector2)end;CraftStudio.Input.oGetMouseDelta=CraftStudio.Input.GetMouseDelta;function CraftStudio.Input.GetMouseDelta()return setmetatable(CraftStudio.Input.oGetMouseDelta(),Vector2)end;CraftStudio.Input.isMouseLocked=false;CraftStudio.Input.oLockMouse=CraftStudio.Input.LockMouse;function CraftStudio.Input.LockMouse()CraftStudio.Input.isMouseLocked=true;CraftStudio.Input.oLockMouse()end;CraftStudio.Input.oUnlockMouse=CraftStudio.Input.UnlockMouse;function CraftStudio.Input.UnlockMouse()CraftStudio.Input.isMouseLocked=false;CraftStudio.Input.oUnlockMouse()end;function CraftStudio.Input.ToggleMouseLock()if CraftStudio.Input.isMouseLocked==true then CraftStudio.Input.UnlockMouse()else CraftStudio.Input.LockMouse()end end;CraftStudio.Screen.oSetSize=CraftStudio.Screen.SetSize;function CraftStudio.Screen.SetSize(cx,cy)if type(cx)=="table"then cy=cx.y;cx=cx.x end;CraftStudio.Screen.oSetSize(cx,cy)CraftStudio.Screen.GetSize()end;CraftStudio.Screen.oGetSize=CraftStudio.Screen.GetSize;function CraftStudio.Screen.GetSize()local cY=CraftStudio.Screen.oGetSize()CraftStudio.Screen.aspectRatio=cY.x/cY.y;return setmetatable(cY,Vector2)end;CraftStudio.Screen.GetSize()RaycastHit={}RaycastHit.__index=RaycastHit;setmetatable(RaycastHit,{__call=function(an,...)return an.New(...)end})Daneel.Config.objectsByType.RaycastHit=RaycastHit;RaycastHit.__index=function(bV,G)if G=="hitLocation"then return bV.hitPosition end end;function RaycastHit.__tostring(ap)local S="RaycastHit: { "local db=true;for G,h in pairs(ap)do if db then S=S..G.."="..tostring(h)db=false else S=S..", "..G.."="..tostring(h)end end;return S.." }"end;Daneel.Debug.functionArgumentsInfo["RaycastHit.New"]={{"params","table",isOptional=true}}function RaycastHit.New(bW)return setmetatable(bW or{},RaycastHit)end;setmetatable(Ray,{__call=function(an,...)return an:New(...)end})function Ray.Cast(bS,bU,dc)local dd={}for p,aZ in pairs(bU)do if aZ.inner~=nil then local bV=bS:IntersectsGameObject(aZ)if bV~=nil then table.insert(dd,bV)end end end;if dc==true then dd=table.sortby(dd,"distance")end;return dd end;function Ray.IntersectsGameObject(bS,de)local aZ=GameObject.Get(de,true)local bV=nil;if aZ.inner==nil then return nil end;local bC=aZ.modelRenderer;if bC~=nil then bV=bS:IntersectsModelRenderer(bC,true)end;if bV==nil then bC=aZ.mapRenderer;if bC~=nil then bV=bS:IntersectsMapRenderer(bC,true)end end;if bV==nil then bC=aZ.textRenderer;if bC~=nil then bV=bS:IntersectsTextRenderer(bC,true)end end;if bV~=nil then bV.gameObject=aZ end;return bV end;Ray.oIntersectsPlane=Ray.IntersectsPlane;function Ray.IntersectsPlane(bS,df,dg)local d2=Ray.oIntersectsPlane(bS,df)if dg==true and d2~=nil then return RaycastHit.New({distance=d2,hitPosition=bS.position+bS.direction*d2,hitObject=df})end;return d2 end;Ray.oIntersectsModelRenderer=Ray.IntersectsModelRenderer;function Ray.IntersectsModelRenderer(bS,cF,dg)local d2,dh=Ray.oIntersectsModelRenderer(bS,cF)if dg==true and d2~=nil then return RaycastHit.New({distance=d2,normal=dh,hitPosition=bS.position+bS.direction*d2,hitObject=cF,gameObject=cF.gameObject})end;return d2,dh end;Ray.oIntersectsMapRenderer=Ray.IntersectsMapRenderer;function Ray.IntersectsMapRenderer(bS,cK,dg)local d2,dh,di,dj=Ray.oIntersectsMapRenderer(bS,cK)if di~=nil then setmetatable(di,Vector3)end;if dj~=nil then setmetatable(dj,Vector3)end;if dg==true and d2~=nil then return RaycastHit.New({distance=d2,normal=dh,hitBlockLocation=di,adjacentBlockLocation=dj,hitPosition=bS.position+bS.direction*d2,hitObject=cK,gameObject=cK.gameObject})end;return d2,dh,di,dj end;Ray.oIntersectsTextRenderer=Ray.IntersectsTextRenderer;function Ray.IntersectsTextRenderer(bS,cP,dg)local d2,dh=Ray.oIntersectsTextRenderer(bS,cP)if dg==true and d2~=nil then return RaycastHit.New({distance=d2,normal=dh,hitPosition=bS.position+bS.direction*d2,hitObject=cP,gameObject=cP.gameObject})end;return d2,dh end;function Scene.Load(dk)CraftStudio.LoadScene(dk)end;CraftStudio.oLoadScene=CraftStudio.LoadScene;function CraftStudio.LoadScene(dk)local dl=Asset.Get(dk,"Scene",true)Daneel.Event.Fire("OnNewSceneWillLoad",dl)Daneel.Event.events={}Scene.current=dl;CraftStudio.oLoadScene(dl)end;function Scene.Append(dk,dm)local dl=Asset.Get(dk,"Scene",true)local cD=nil;if dm~=nil then cD=GameObject.Get(dm,true)end;return CraftStudio.AppendScene(dl,cD)end;CraftStudio.oDestroy=CraftStudio.Destroy;function CraftStudio.Destroy(av)if type(av)=="table"then Daneel.Event.Fire(av,"OnDestroy",av)Daneel.Event.StopListen(av)av.isDestroyed=true end;CraftStudio.oDestroy(av)end;local dn={"ray","Ray"}local dp={"returnRaycastHit","boolean",isOptional=true}table.mergein(Daneel.Debug.functionArgumentsInfo,{["Ray.Cast"]={dn,{"gameObjects",o},{"sortByDistance","boolean",isOptional=true}},["Ray.IntersectsGameObject"]={dn,{"gameObjectNameOrInstance",{n,bv}},dp},["Ray.IntersectsPlane"]={dn,{"plane","Plane"},dp},["Ray.IntersectsModelRenderer"]={dn,{"modelRenderer","ModelRenderer"},dp},["Ray.IntersectsMapRenderer"]={dn,{"mapRenderer","MapRenderer"},dp},["Ray.IntersectsTextRenderer"]={dn,{"textRenderer","TextRenderer"},dp},["Scene.Load"]={{"sceneNameOrAsset",{n,"Scene"}}},["CraftStudio.LoadScene"]={{"sceneNameOrAsset",{n,"Scene"}}},["Scene.Append"]={{"sceneNameOrAsset",{n,"Scene"}},{"parentNameOrInstance",{n,bv},isOptional=true}},["CraftStudio.Destroy"]={{"object"}}})CraftStudio.Storage.oSave=CraftStudio.Storage.Save;function CraftStudio.Storage.Save(dq,j,cv)if j~=nil and type(j)~="table"then j={value=j,isSavedByDaneel=true}end;CraftStudio.Storage.oSave(dq,j,function(dr)if dr~=nil and Daneel.Config.debug.enableDebug==true then table.print(j)print("CS.Storage.Save( identifier, data[, callback] ) : Error saving with identifier, data (printed above) and error : ",dq,dr.message)end;if cv~=nil then cv(dr)end end)end;CraftStudio.Storage.oLoad=CraftStudio.Storage.Load;function CraftStudio.Storage.Load(dq,aL,cv)if cv==nil and type(aL)=="function"then cv=aL;aL=nil end;CraftStudio.Storage.oLoad(dq,function(dr,j)if dr~=nil and Daneel.Config.debug.enableDebug==true then print("CS.Storage.Load( identifier[, defaultValue], callback ) : Error loading with identifier, default value and error",dq,aL,dr.message)end;if j~=nil and j.value~=nil and j.isSavedByDaneel==true then j=j.value end;if dr==nil and j==nil then j=aL end;cv(dr,j)end)end;table.mergein(Daneel.Debug.functionArgumentsInfo,{["CraftStudio.Storage.Save"]={{"identifier",n},{"data",isOptional=true},{"callback","function",isOptional=true}},["CraftStudio.Storage.Load"]={{"identifier",n},{"defaultValue",isOptional=true},{"callback","function",isOptional=true}}})setmetatable(GameObject,{__call=function(an,...)return an.New(...)end})function GameObject.__tostring(aZ)if rawget(aZ,"inner")==nil then return"Destroyed GameObject: "..tostring(aZ:GetId())..": '"..tostring(aZ._name).."': "..Daneel.Debug.ToRawString(aZ)end;return"GameObject: "..aZ:GetId()..": '"..aZ:GetName().."'"end;function GameObject.__index(aZ,G)if GameObject[G]~=nil then return GameObject[G]end;if type(G)=="string"then local aq=string.ucfirst(G)if G~=aq then local as="Get"..aq;if GameObject[as]~=nil then return GameObject[as](aZ)end end end;return nil end;function GameObject.__newindex(aZ,G,h)local aq=G;if type(G)=="string"then aq=string.ucfirst(G)end;if G~=aq and G~="transform"then local as="Set"..aq;if GameObject[as]~=nil then return GameObject[as](aZ,h)end end;rawset(aZ,G,h)end;function GameObject.New(b0,bW)local aZ=nil;if bW~=nil and getmetatable(bW)==GameObject then aZ=CraftStudio.CreateGameObject(b0,bW)else aZ=CraftStudio.CreateGameObject(b0)end;if bW~=nil then aZ:Set(bW)end;return aZ end;function GameObject.Instantiate(b0,dk,bW)local dl=Asset.Get(dk,"Scene",true)local aZ=nil;if bW~=nil and getmetatable(bW)==GameObject then aZ=CraftStudio.Instantiate(b0,dl,bW)else aZ=CraftStudio.Instantiate(b0,dl)end;if bW~=nil then aZ:Set(bW)end;return aZ end;function GameObject.Set(aZ,bW)local aI="GameObject.Set( gameObject[, params] ) :"if bW.parent~=nil then aZ:SetParent(bW.parent)bW.parent=nil end;if bW.transform~=nil then aZ.transform:Set(bW.transform)bW.transform=nil end;for p,bA in pairs(Daneel.Config.componentTypes)do if bA~="ScriptedBehavior"and bA~="Transform"then local ds=string.lcfirst(bA)local dt=bW[ds]if dt~=nil then bW[ds]=nil;Daneel.Debug.CheckArgType(dt,"params."..ds,"table",aI)local bC=aZ[ds]if bC==nil then bC=aZ:GetComponent(bA)end;if bC==nil then bC=aZ:AddComponent(bA,dt)else bC:Set(dt)end end end end;for G,h in pairs(bW)do if G=="tags"then aZ:RemoveTag()aZ:AddTag(h)else aZ[G]=h end end end;function GameObject.Get(b0,du)if getmetatable(b0)==GameObject then return b0 end;local aI="GameObject.Get( name[, errorIfGameObjectNotFound] ) : "local dv=string.split(b0,".")local aZ=CraftStudio.FindGameObject(dv[1])if aZ==nil and du==true then error(aI.."GameObject with name '"..dv[1].."' (from '"..b0 .."') was not found.")end;if aZ~=nil then local dw=b0;local bf=table.remove(dv,1)for p,b0 in ipairs(dv)do aZ=aZ:GetChild(b0)bf=bf.."."..b0;if aZ==nil then if du==true then error(aI.."GameObject with name '"..bf.."' (from '"..dw.."') was not found.")end;break end end end;return aZ end;function GameObject.GetId(aZ)return Daneel.Utilities.GetId(aZ)end;GameObject.oSetParent=GameObject.SetParent;function GameObject.SetParent(aZ,dm,dx)local cD=nil;if dm~=nil then cD=GameObject.Get(dm,true)end;if dx==nil then dx=false end;GameObject.oSetParent(aZ,cD,dx)end;function GameObject.GetChild(aZ,b0,E)if E==nil then E=false end;local dy=nil;if b0==nil then local dz=aZ:GetChildren()dy=dz[1]else local dv=string.split(b0,".")for p,b0 in ipairs(dv)do aZ=aZ:FindChild(b0,E)if aZ==nil then break end end;dy=aZ end;return dy end;GameObject.oGetChildren=GameObject.GetChildren;function GameObject.GetChildren(aZ,E,dA)local dB=GameObject.oGetChildren(aZ)if E==true then for p,dy in ipairs(table.copy(dB))do dB=table.merge(dB,dy:GetChildren(true))end end;if dA==true then table.insert(dB,1,aZ)end;return dB end;function GameObject.GetInAncestors(aZ,dC)local cD=aZ:GetParent()if cD==nil then return end;if dC(cD)==true then return cD end;return cD:GetInAncestors(dC)end;GameObject.oSendMessage=GameObject.SendMessage;function GameObject.SendMessage(aZ,bi,j)if Daneel.Config.debug.enableDebug then local a_=Daneel.Debug.Try(function()GameObject.oSendMessage(aZ,bi,j)end)if not a_ then local dD="No data"local K=0;if j~=nil then K=table.getlength(j)dD="Data with "..K.." entries"end;print("GameObject.SendMessage( gameObject, functionName[, data] ) : Error sending message with parameters : ",aZ,bi,dD)if K>0 then table.print(j)end end else GameObject.oSendMessage(aZ,bi,j)end end;function GameObject.Display(aZ,h,dE)local dF=false;if h~=false and h~=0 then dF=true end;local dG=type(h)if dG=="boolean"then h=nil elseif dG=="number"and dE==true then h=Vector3:New(h)dG="table"end;local dH=aZ.textRenderer or aZ.modelRenderer or aZ.mapRenderer;if dH~=nil and dE~=true and dG=="number"then if not dF and aZ.displayOpacity==nil then aZ.displayOpacity=dH:GetOpacity()end;if dF then h=h or aZ.displayOpacity or 1 else h=h or 0 end;dH:SetOpacity(h)else if not dF and aZ.displayLocalPosition==nil then aZ.displayLocalPosition=aZ.transform:GetLocalPosition()end;if dF then h=h or aZ.displayLocalPosition or Vector3:New(1)else h=h or Vector3:New(0,0,999)end;aZ.transform:SetLocalPosition(h)end;aZ.isDisplayed=dF;Daneel.Event.Fire(aZ,"OnDisplay",aZ)end;function GameObject.Destroy(aZ)for p,bv in pairs(aZ:GetChildren(true,true))do bv:RemoveTag()end;for G,h in pairs(aZ)do if G~="inner"and type(h)=="table"then Daneel.Event.Fire(h,"OnDestroy",h)end end;aZ._name=aZ:GetName()CraftStudio.Destroy(aZ)end;function GameObject.AddComponent(aZ,bA,bW)local aI="GameObject.AddComponent( gameObject, componentType[, params] ) : "bA=Daneel.Debug.CheckArgValue(bA,"componentType",Daneel.Config.componentTypes,aI,bA)local bC=nil;if Daneel.Config.componentObjectsByType[bA]==nil then local b4=Asset.Get(bA,"Script")if b4==nil then error(aI.."Provided component type '"..tostring(bA).."' is not one of the component types, nor a script asset or path.")end;bC=aZ:CreateScriptedBehavior(b4,bW or{})elseif Daneel.DefaultConfig().componentObjectsByType[bA]~=nil then if bA=="Transform"then error(aI.."Can't add a transform component because game objects may only have one transform.")elseif bA=="ScriptedBehavior"then error(aI.."To add a scripted behavior, pass the script asset or path instead of 'ScriptedBehavior' as the 'componentType' argument.")end;bC=aZ:CreateComponent(bA)if bW~=nil then bC:Set(bW)end else local bB=Daneel.Config.componentObjectsByType[bA]if type(bB.New)=="function"then bC=bB.New(aZ,bW)else error(aI.."Can't create custom component of type '"..bA.."' because the component object does not provide a New() function.")end end;Daneel.Event.Fire(aZ,"OnNewComponent",bC)return bC end;GameObject.oGetComponent=GameObject.GetComponent;function GameObject.GetComponent(aZ,bA)local aI="GameObject.GetComponent( gameObject, componentType ) : "bA=Daneel.Debug.CheckArgValue(bA,"componentType",Daneel.Config.componentTypes,aI,bA)local ds=bA;if type(bA)=="string"then ds=string.lcfirst(bA)end;local bC=nil;if ds~="scriptedBehavior"then bC=aZ[ds]end;if bC==nil then if Daneel.DefaultConfig().componentObjectsByType[bA]~=nil then bC=GameObject.oGetComponent(aZ,bA)elseif Daneel.Config.componentObjectsByType[bA]==nil then local b4=Asset.Get(bA,"Script",true)bC=GameObject.oGetScriptedBehavior(aZ,b4)end end;return bC end;GameObject.oGetScriptedBehavior=GameObject.GetScriptedBehavior;function GameObject.GetScriptedBehavior(aZ,dI)local b4=Asset.Get(dI,"Script",true)return GameObject.oGetScriptedBehavior(aZ,b4)end;GameObject.Tags={}Daneel.modules.Tags={Awake=function()GameObject.Tags={}end}function GameObject.GetWithTag(bT)local bY=bT;if type(bY)=="string"then bY={bY}end;local dJ={}local dK=false;for p,bT in pairs(bY)do local bU=GameObject.Tags[bT]if bU~=nil then for a6,aZ in pairs(bU)do if aZ.inner~=nil then if aZ:HasTag(bY)and not table.containsvalue(dJ,aZ)then table.insert(dJ,aZ)end else bU[a6]=nil;dK=true end end;if dK then GameObject.Tags[bT]=table.reindex(bU)dK=false end end end;return dJ end;function GameObject.GetTags(aZ)local bY={}for bT,bU in pairs(GameObject.Tags)do if table.containsvalue(bU,aZ)then table.insert(bY,bT)end end;return bY end;function GameObject.AddTag(aZ,bT)local bY=bT;if type(bY)=="string"then bY={bY}end;for p,bT in pairs(bY)do if GameObject.Tags[bT]==nil then GameObject.Tags[bT]={aZ}elseif not table.containsvalue(GameObject.Tags[bT],aZ)then table.insert(GameObject.Tags[bT],aZ)end end end;function GameObject.RemoveTag(aZ,bT)local bY=bT;if type(bY)=="string"then bY={bY}end;for bT,bU in pairs(GameObject.Tags)do if bY==nil or table.containsvalue(bY,bT)then table.removevalue(GameObject.Tags[bT],aZ)end end end;function GameObject.HasTag(aZ,bT,dL)local bY=bT;if type(bY)=="string"then bY={bY}end;local dM=false;if dL==true then for p,bT in pairs(bY)do if GameObject.Tags[bT]~=nil and table.containsvalue(GameObject.Tags[bT],aZ)then dM=true;break end end else dM=true;for p,bT in pairs(bY)do if GameObject.Tags[bT]==nil or not table.containsvalue(GameObject.Tags[bT],aZ)then dM=false;break end end end;return dM end;local aC={"tag",{"string","table"}}local bw={"gameObject","GameObject"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["GameObject.New"]={{"name",n},{"params",{o,"GameObject"},isOptional=true}},["GameObject.Instantiate"]={{"name",n},{"sceneNameOrAsset",{n,"Scene"}},{"params",{o,"GameObject"},isOptional=true}},["GameObject.Set"]={bw,cp},["GameObject.Get"]={{"name",{n,"GameObject"}},{"errorIfGameObjectNotFound","boolean",isOptional=true}},["GameObject.Destroy"]={bw},["GameObject.SetParent"]={bw,{"parentNameOrInstance",{n,"GameObject"},isOptional=true},{"keepLocalTransform","boolean",isOptional=true}},["GameObject.GetChild"]={bw,{"name",n,isOptional=true},{"recursive","boolean",isOptional=true}},["GameObject.GetChildren"]={bw,{"recursive","boolean",isOptional=true},{"includeSelf","boolean",isOptional=true}},["GameObject.GetInAncestors"]={bw,{"searchFunction","function"}},["GameObject.SendMessage"]={bw,{"functionName",n},{"data",o,isOptional=true}},["GameObject.AddComponent"]={bw,{"componentType",{n,"Script"}},{"params",o,isOptional=true}},["GameObject.GetComponent"]={bw,{"componentType",{n,"Script"}}},["GameObject.GetScriptedBehavior"]={bw,{"scriptNameOrAsset",{n,"Script"}}},["GameObject.GetWithTag"]={aC},["GameObject.GetTags"]={bw},["GameObject.AddTag"]={bw,aC},["GameObject.RemoveTag"]={bw,{"tag",{"string","table"},isOptional=true}},["GameObject.HasTag"]={bw,aC,{"atLeastOneTag","boolean",isOptional=true}}})GUI={}local n="string"local d="boolean"local ax="number"local o="table"local bv="GameObject"local co="Vector2"local aA="Vector3"local bw={"gameObject",bv}local dN={"params",o,isOptional=true}local cp={"params",o}function GUI.ToSceneUnit(h,cW)if type(h)=="string"then h=h:trim()if h:find("px")then if cW~=nil and getmetatable(cW)==GameObject then cW=cW.camera end;if cW==nil then error("GUI.ToSceneUnit(value, camera) : Can't convert the value '"..h.."' from pixels to scene units because no camera component has been passed as argument.")end;h=tonumber(h:sub(0,#h-2))*cW:GetPixelsToUnits()elseif h:find("u")then h=tonumber(h:sub(0,#h-1))else h=tonumber(h)end end;return h end;function GUI.ToPixel(h,dO,cW)if type(h)=="string"then if type(dO)=="table"then cW=dO;dO=nil end;h=h:trim()local cY=CS.Screen.GetSize()if h:find("px")then h=tonumber(h:sub(0,#h-2))elseif h:find("%",1,true)and dO~=nil then h=cY[dO]*tonumber(h:sub(0,#h-1))/100 elseif h:find("s")and dO~=nil then h=h:sub(2)if h==""then h=0 end;h=cY[dO]+tonumber(h)elseif h:find("u")then if cW==nil then error("GUI.ToPixel(value, camera) : Can't convert the value '"..h.."' from pixels to scene units because no camera component has been passed as argument.")end;h=tonumber(h:sub(0,#h-1))/cW:GetPixelsToUnits()else h=tonumber(h)end end;return h end;local function dP(aZ,aI)local dQ=aZ:GetInAncestors(function(bv)if bv.camera~=nil then return true end end)if dQ==nil and aI~=nil then error(aI..": The "..tostring(aZ).." isn't a child of a game object with a camera component and no camera game object is passed via the 'params' argument.")end;return dQ end;GUI.Hud={}GUI.Hud.__index=GUI.Hud;function GUI.Hud.CreateOriginGO(aZ)if aZ.camera==nil then error("GUI.Hud.CreateOriginGO(): Provided game object "..tostring(aZ).." has no camera component.")end;local c_=aZ.camera:GetPixelsToUnits()local cY=CS.Screen.GetSize()local dR=CS.CreateGameObject("Hud Origin for camera "..aZ:GetName(),aZ)dR.transform:SetLocalPosition(Vector3:New(-cY.x*c_/2,cY.y*c_/2,0))aZ.hudOriginGO=dR end;function GUI.Hud.ToHudPosition()error("GUI.Hud.ToHudPosition() is deprecated since v1.5.0. Use Camera.WorldToScreenPoint() or Camera.Project() instead.")end;function Vector2.ToPixel(d4,cW)return Vector2.New(GUI.ToPixel(d4.x,"x",cW),GUI.ToPixel(d4.y,"y",cW))end;function GUI.Hud.New(aZ,bW)local dS=setmetatable({},GUI.Hud)dS.gameObject=aZ;aZ.hud=dS;dS.id=Daneel.Utilities.GetId()bW=bW or{}dS.cameraGO=bW.cameraGO or dP(aZ,"GUI.Hud.New()")if dS.cameraGO.hudOriginGO==nil then GUI.Hud.CreateOriginGO(dS.cameraGO)end;dS:Set(table.merge(GUI.Config.hud,bW))return dS end;function GUI.Hud.SetPosition(dS,cE)cE=cE:ToPixel(dS.cameraGO.camera)local dT=dS.cameraGO.hudOriginGO.transform:GetPosition()+Vector3:New(cE.x*dS.cameraGO.camera:GetPixelsToUnits(),-cE.y*dS.cameraGO.camera:GetPixelsToUnits(),0)dT.z=dS.gameObject.transform:GetPosition().z;dS.gameObject.transform:SetPosition(dT)end;function GUI.Hud.GetPosition(dS)local cE=dS.gameObject.transform:GetPosition()-dS.cameraGO.hudOriginGO.transform:GetPosition()cE=cE/dS.cameraGO.camera:GetPixelsToUnits()return Vector2.New(math.round(cE.x),math.round(-cE.y))end;function GUI.Hud.SetLocalPosition(dS,cE)cE=cE:ToPixel(dS.cameraGO.camera)local cD=dS.gameObject.parent or dS.cameraGO.hudOriginGO;local dT=cD.transform:GetPosition()+Vector3:New(cE.x*dS.cameraGO.camera:GetPixelsToUnits(),-cE.y*dS.cameraGO.camera:GetPixelsToUnits(),0)dT.z=dS.gameObject.transform:GetPosition().z;dS.gameObject.transform:SetPosition(dT)end;function GUI.Hud.GetLocalPosition(dS)local cD=dS.gameObject.parent or dS.cameraGO.hudOriginGO;local cE=dS.gameObject.transform:GetPosition()-cD.transform:GetPosition()cE=cE/dS.cameraGO.camera:GetPixelsToUnits()return Vector2.New(math.round(cE.x),math.round(-cE.y))end;function GUI.Hud.SetLayer(dS,dU)local dV=dS.cameraGO.hudOriginGO.transform:GetPosition().z;local dW=dS.gameObject.transform:GetPosition()dS.gameObject.transform:SetPosition(Vector3:New(dW.x,dW.y,dV-dU))end;function GUI.Hud.GetLayer(dS)local dV=dS.cameraGO.hudOriginGO.transform:GetPosition().z;return math.round(dV-dS.gameObject.transform:GetPosition().z,1)end;function GUI.Hud.SetLocalLayer(dS,dU)local cD=dS.gameObject.parent or dS.cameraGO.hudOriginGO;local dV=cD.transform:GetPosition().z;local dW=dS.gameObject.transform:GetPosition()dS.gameObject.transform:SetPosition(Vector3:New(dW.x,dW.y,dV-dU))end;function GUI.Hud.GetLocalLayer(dS)local cD=dS.gameObject.parent or dS.cameraGO.hudOriginGO;local dV=cD.transform:GetPosition().z;return math.round(dV-dS.gameObject.transform:GetPosition().z,1)end;local dX={"hud","Hud"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["GUI.Hud.CreateOriginGO"]={bw},["GUI.Hud.New"]={bw,dN},["GUI.Hud.SetPosition"]={dX,{"position",co}},["GUI.Hud.GetPosition"]={dX},["GUI.Hud.SetLocalPosition"]={dX,{"position",co}},["GUI.Hud.GetLocalPosition"]={dX},["GUI.Hud.SetLayer"]={dX,{"layer",ax}},["GUI.Hud.GetLayer"]={dX},["GUI.Hud.SetLocalLayer"]={dX,{"layer",ax}},["GUI.Hud.GetLocalLayer"]={dX}})GUI.Toggle={}GUI.Toggle.__index=GUI.Toggle;function GUI.Toggle.New(aZ,bW)if Daneel.modules.MouseInput==nil then error("GUI.Toggle.New(): The 'Mouse Input' module is missing from your project. It is required for the player to interact with the GUI.Toggle, GUI.Input and GUI.Slider components.")end;local dY=table.copy(GUI.Config.toggle)dY.defaultText=dY.text;dY.text=nil;dY.gameObject=aZ;dY.id=Daneel.Utilities.GetId()setmetatable(dY,GUI.Toggle)if bW~=nil then dY:Set(bW)end;aZ.toggle=dY;aZ:AddTag("guiComponent")aZ.OnNewComponent=function(bC)if bC==nil then return end;local aN=getmetatable(bC)if aN==TextRenderer then local aR=bC:GetText()if aR==nil then aR=dY.defaultText end;dY:SetText(aR)elseif aN==ModelRenderer and dY.checkedModel~=nil then if dY.isChecked and dY.checkedModel~=nil then bC:SetModel(dY.checkedModel)elseif not dY.isChecked and dY.uncheckedModel~=nil then bC:SetModel(dY.uncheckedModel)end end end;aZ.OnClick=function()if not(dY.group~=nil and dY.isChecked)then dY:Check(not dY.isChecked)end end;if aZ.textRenderer~=nil and aZ.textRenderer:GetText()~=nil then dY:SetText(aZ.textRenderer:GetText())end;if aZ.modelRenderer~=nil then if dY.isChecked and dY.checkedModel~=nil then dY.gameObject.modelRenderer:SetModel(dY.checkedModel)elseif not dY.isChecked and dY.uncheckedModel~=nil then dY.gameObject.modelRenderer:SetModel(dY.uncheckedModel)end end;dY:Check(dY.isChecked,true)return dY end;function GUI.Toggle.SetText(dY,aR)if dY.gameObject.textRenderer~=nil then if dY.isChecked==true then aR=Daneel.Utilities.ReplaceInString(dY.checkedMark,{text=aR})else aR=Daneel.Utilities.ReplaceInString(dY.uncheckedMark,{text=aR})end;dY.gameObject.textRenderer:SetText(aR)else if Daneel.Config.debug.enableDebug then print("WARNING: GUI.Toggle.SetText(toggle, text): Can't set the toggle's text because no TextRenderer component has been found on the gameObject '"..tostring(dY.gameObject).."'. Waiting for a TextRenderer to be added.")end;dY.defaultText=aR end end;function GUI.Toggle.GetText(dY)local aR=nil;if dY.gameObject.textRenderer~=nil then aR=dY.gameObject.textRenderer:GetText()if aR==nil then aR=dY.defaultText end;local dZ=dY.checkedMark;if not dY.isChecked then dZ=dY.uncheckedMark end;local d_,e0=dZ:find(":text")if d_~=nil and e0~=nil then local e1=dZ:sub(1,d_-1)local e2=dZ:sub(e0+1)aR=aR:gsub(e1,""):gsub(e2,"")end elseif Daneel.Config.debug.enableDebug then print("WARNING: GUI.Toggle.GetText(toggle): Can't get the toggle's text because no TextRenderer component has been found on the gameObject '"..tostring(dY.gameObject).."'. Returning nil.")end;return aR end;function GUI.Toggle.Check(dY,e3,e4)if e3==nil then e3=true end;if e4==true or dY.isChecked~=e3 then local aR=nil;if dY.gameObject.textRenderer~=nil then aR=dY:GetText()end;dY.isChecked=e3;if dY.gameObject.textRenderer~=nil then dY:SetText(aR)end;if dY.gameObject.modelRenderer~=nil then if e3==true and dY.checkedModel~=nil then dY.gameObject.modelRenderer:SetModel(dY.checkedModel)elseif e3==false and dY.uncheckedModel~=nil then dY.gameObject.modelRenderer:SetModel(dY.uncheckedModel)end end;Daneel.Event.Fire(dY,"OnUpdate",dY)if dY.Group~=nil and e3==true then local bU=GameObject.GetWithTag(dY.Group)for p,aZ in ipairs(bU)do if aZ~=dY.gameObject then aZ.toggle:Check(false,true)end end end end end;function GUI.Toggle.SetGroup(dY,e5)if e5==nil and dY.Group~=nil then dY.gameObject:RemoveTag(dY.Group)else if dY.Group~=nil then dY.gameObject:RemoveTag(dY.Group)end;dY:Check(false)dY.Group=e5;dY.gameObject:AddTag(dY.Group)end end;function GUI.Toggle.GetGroup(dY)return dY.Group end;function GUI.Toggle.Set(dY,bW)local e5=bW.group;bW.group=nil;local e6=bW.isChecked;bW.isChecked=nil;for G,h in pairs(bW)do dY[G]=h end;if e5~=nil then dY:SetGroup(e5)end;if e6~=nil then dY:Check(e6)end end;local e7={"toggle","Toggle"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["GUI.Toggle.New"]={bw,dN},["GUI.Toggle.Set"]={e7,cp},["GUI.Toggle.SetText"]={e7,{"text",n}},["GUI.Toggle.GetText"]={e7},["GUI.Toggle.Check"]={e7,{"state",d,isOptional=true},{"forceUpdate",d,isOptional=true}},["GUI.Toggle.SetGroup"]={e7,{"group",n,isOptional=true}},["GUI.Toggle.GetGroup"]={e7}})GUI.ProgressBar={}GUI.ProgressBar.__index=GUI.ProgressBar;function GUI.ProgressBar.New(aZ,bW)local e8=table.copy(GUI.Config.progressBar)e8.gameObject=aZ;e8.id=Daneel.Utilities.GetId()e8.value=nil;setmetatable(e8,GUI.ProgressBar)bW=bW or{}if bW.value==nil then bW.value=GUI.Config.progressBar.value end;e8.cameraGO=bW.cameraGO or dP(aZ)e8:Set(bW)aZ.progressBar=e8;return e8 end;function GUI.ProgressBar.SetValue(e8,h)local aI="GUI.ProgressBar.SetValue(progressBar, value) : "local e9=e8.minValue;local ea=e8.maxValue;local eb=nil;if type(h)=="string"then if h:endswith("%")then eb=tonumber(h:sub(1,#h-1))/100;local ec=eb;eb=math.clamp(eb,0.0,1.0)if eb~=ec and Daneel.Config.debug.enableDebug then print(aI.."WARNING : value in percentage with value '"..h.."' is below 0% or above 100%.")end;h=(ea-e9)*eb+e9 else h=tonumber(h)end end;local ed=h;h=math.clamp(h,e9,ea)e8.minLength=GUI.ToSceneUnit(e8.minLength,e8.cameraGO)e8.maxLength=GUI.ToSceneUnit(e8.maxLength,e8.cameraGO)local ee=e8:GetValue()if h~=ee then if h~=ed and Daneel.Config.debug.enableDebug then print(aI.." WARNING : value with value '"..ed.."' is out of its boundaries : min='"..e9 .."', max='"..ea.."'")end;local ef=ea-e9;eb=(h-e9)/ef;e8.height=GUI.ToSceneUnit(e8.height,e8.cameraGO)local eg=(e8.maxLength-e8.minLength)*eb+e8.minLength;local eh=e8.gameObject.transform:GetLocalScale()e8.gameObject.transform:SetLocalScale(Vector3:New(eg,e8.height,eh.z))Daneel.Event.Fire(e8,"OnUpdate",e8)end end;GUI.ProgressBar.SetProgress=GUI.ProgressBar.SetValue;function GUI.ProgressBar.UpdateValue(e8,h,ei)if h==e8._value then return end;e8._value=h;local e9=e8.minValue;local ea=e8.maxValue;local ej=e8.minLength;local eb=nil;if type(h)=="string"then local I=h;h=tonumber(h)if h==nil then eb=tonumber(I:sub(1,#I-1))/100 end end;if eb==nil then local ef=ea-e9;eb=(h-e9)/ef end;eb=math.clamp(eb,0.0,1.0)local eg=(e8.maxLength-ej)*eb+ej;local eh=e8.gameObject.transform:GetLocalScale()e8.gameObject.transform:SetLocalScale(Vector3:New(eg,e8.height,eh.z))if ei==true then Daneel.Event.Fire(e8,"OnUpdate",e8)end end;GUI.ProgressBar.UpdateProgress=GUI.ProgressBar.UpdateValue;function GUI.ProgressBar.GetValue(e8,ek)local cC=math.round(e8.gameObject.transform:GetLocalScale().x,2)local ef=e8.maxLength-e8.minLength;local h=(cC-e8.minLength)/ef;if ek==true then h=h*100 else h=(e8.maxValue-e8.minValue)*h+e8.minValue end;return h end;GUI.ProgressBar.GetProgress=GUI.ProgressBar.GetValue;function GUI.ProgressBar.SetHeight(e8,el)local eh=e8.gameObject.transform:GetLocalScale()local el=GUI.ToSceneUnit(el,e8.cameraGO)e8.gameObject.transform:SetLocalScale(Vector3:New(eh.x,el,eh.z))end;function GUI.ProgressBar.GetHeight(e8)return e8.gameObject.transform:GetLocalScale().y end;function GUI.ProgressBar.Set(e8,bW)local h=bW.value;bW.value=nil;if h==nil then h=e8:GetValue()end;for G,h in pairs(bW)do e8[G]=h end;e8:SetValue(h)end;local em={"progressBar","ProgressBar"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["GUI.ProgressBar.New"]={bw,dN},["GUI.ProgressBar.Set"]={em,cp},["GUI.ProgressBar.SetValue"]={em,{"value",{n,ax}}},["GUI.ProgressBar.GetValue"]={em,{"getAsPercentage",d,isOptional=true}},["GUI.ProgressBar.SetHeight"]={em,{"height",{n,ax}}},["GUI.ProgressBar.GetHeight"]={em}})GUI.Slider={}GUI.Slider.__index=GUI.Slider;function GUI.Slider.New(aZ,bW)if Daneel.modules.MouseInput==nil then error("GUI.Slider.New(): The 'Mouse Input' module is missing from your project. It is required for the player to interact with the GUI.Toggle, GUI.Input and GUI.Slider components.")end;local en=table.copy(GUI.Config.slider)en.gameObject=aZ;en.id=Daneel.Utilities.GetId()en.value=nil;en.parent=en.gameObject:GetParent()if en.parent==nil then local bv=CS.CreateGameObject("SliderParent")bv.transform:SetPosition(en.gameObject.transform:GetPosition())en.gameObject:SetParent(bv)end;setmetatable(en,GUI.Slider)aZ.slider=en;aZ:AddTag("guiComponent")aZ.OnDrag=function()local bH=CraftStudio.Input.GetMouseDelta()local eo=Vector3:New(bH.x,0,0)if en.axis=="y"then eo=Vector3:New(0,-bH.y,0,0)end;aZ.transform:Move(eo*en.cameraGO.camera:GetPixelsToUnits())local ep=aZ.transform:GetPosition()local eq=en.parent.transform:GetPosition()if en.axis=="x"and ep.x<eq.x then en:SetValue(en.minValue)elseif en.axis=="y"and ep.y<eq.y then en:SetValue(en.minValue)elseif en:GetValue()>en.maxValue then en:SetValue(en.maxValue)else Daneel.Event.Fire(en,"OnUpdate",en)end end;bW=bW or{}en.cameraGO=bW.cameraGO or dP(aZ,"GUI.Slider.New()")if bW.value==nil then bW.value=GUI.Config.slider.value end;en:Set(bW)return en end;function GUI.Slider.SetValue(en,h)local aI="GUI.Slider.SetValue( slider, value ) : "local ea=en.maxValue;local e9=en.minValue;local er=nil;if type(h)=="string"then if h:endswith("%")then er=tonumber(h:sub(1,#h-1))/100;h=(ea-e9)*er+e9 else h=tonumber(h)end end;local ed=h;h=math.clamp(h,e9,ea)if h~=ed and Daneel.Config.debug.enableDebug then print(aI.."WARNING : Argument 'value' with value '"..ed.."' is out of its boundaries : min='"..e9 .."', max='"..ea.."'")end;local ef=ea-e9;er=(h-e9)/ef;en.length=GUI.ToSceneUnit(en.length,en.cameraGO)local es=-Vector3:Left()if en.axis=="y"then es=Vector3:Up()end;local cA=Vector3.Rotate(es,en.gameObject.transform:GetOrientation())local dT=en.parent.transform:GetPosition()+cA*en.length*er;en.gameObject.transform:SetPosition(dT)Daneel.Event.Fire(en,"OnUpdate",en)end;function GUI.Slider.GetValue(en,ek)local er=Vector3.Distance(en.parent.transform:GetPosition(),en.gameObject.transform:GetPosition())/en.length;local h=er*100;if ek~=true then h=(en.maxValue-en.minValue)*er+en.minValue end;return h end;function GUI.Slider.Set(en,bW)local h=bW.value;bW.value=nil;if h==nil then h=en:GetValue()end;for G,h in pairs(bW)do en[G]=h end;en:SetValue(h)end;GUI.Input={}GUI.Input.__index=GUI.Input;function GUI.Input.New(aZ,bW)if Daneel.modules.MouseInput==nil then error("GUI.Input.New(): The 'Mouse Input' module is missing from your project. It is required for the player to interact with the GUI.Toggle, GUI.Input and GUI.Slider components.")end;bW=bW or{}local et=table.merge(GUI.Config.input,bW)et.gameObject=aZ;et.id=Daneel.Utilities.GetId()setmetatable(et,GUI.Input)if et.OnTextEntered==nil then et.OnTextEntered=function(z)if et.isFocused then local eu=string.byte(z)if eu==8 then local aR=aZ.textRenderer:GetText()et:Update(aR:sub(1,#aR-1),true)elseif eu>=32 and eu<=127 then if et.characterRange~=nil and et.characterRange:find(z,1,true)==nil then return end;et:Update(z)end end end end;local ev=aZ:GetChild("Cursor")if ev~=nil then et.cursorGO=ev;ev.tweener=Tween.Timer(et.cursorBlinkInterval,function(ew)if ew.gameObject==nil or ew.gameObject.inner==nil then ew:Destroy()return end;local ex=1;if ew.gameObject.modelRenderer:GetOpacity()==1 then ex=0 end;ew.gameObject.modelRenderer:SetOpacity(ex)end,true)ev.tweener.isPaused=true;ev.tweener.gameObject=ev end;local ey=et.isFocused;et.isFocused=nil;et:Focus(ey)aZ.input=et;aZ:AddTag("guiComponent")aZ:AddTag("gui_input")local ez=aZ:GetChild("Background")if ez~=nil then et.backgroundGO=ez;if et.focusOnBackgroundClick then ez:AddTag("guiComponent")end end;return et end;GUI.Input.Module={}Daneel.modules.GUIInput=GUI.Input.Module;function GUI.Input.Module.Update()if CS.Input.WasButtonJustReleased("LeftMouse")then local eA=GameObject.GetWithTag("gui_input")local eB=nil;for p,eC in pairs(eA)do local et=eC.input;local eD=eC.isMouseOver;if eD~=true and et.focusOnBackgroundClick and et.backgroundGO~=nil then eD=et.backgroundGO.isMouseOver end;if eD==true then eB=et else et:Focus(false)end end;if eB~=nil then eB:Focus(true)end end;if CS.Input.WasButtonJustReleased("ValidateInput")then local eA=GameObject.GetWithTag("gui_input")for p,eC in pairs(eA)do local et=eC.input;if et.isFocused then Daneel.Event.Fire(et,"OnValidate",et)break end end end end;function GUI.Input.Focus(et,eE)if eE==nil then eE=true end;if et.isFocused~=eE then et.isFocused=eE;local aR=string.trim(et.gameObject.textRenderer:GetText())if eE==true then CS.Input.OnTextEntered(et.OnTextEntered)if aR==et.defaultValue then et.gameObject.textRenderer:SetText("")end else CS.Input.OnTextEntered(nil)if et.defaultValue~=nil and et.defaultValue~=""and aR==""then et.gameObject.textRenderer:SetText(et.defaultValue)end end;Daneel.Event.Fire(et,"OnFocus",et)et:UpdateCursor()end end;function GUI.Input.UpdateCursor(et)if et.cursorGO~=nil then local cS=et.gameObject.textRenderer:GetAlignment()if cS~=TextRenderer.Alignment.Right then local K=et.gameObject.textRenderer:GetTextWidth()if cS==TextRenderer.Alignment.Center then K=K/2 end;et.cursorGO.transform:SetLocalPosition(Vector3:New(K,0,0))end;local ex=0;if et.isFocused then ex=1 end;et.cursorGO.modelRenderer:SetOpacity(ex)et.cursorGO.tweener.isPaused=not et.isFocused;Daneel.Event.Fire(et.cursorGO,"OnUpdate",et)end end;function GUI.Input.Update(et,aR,eF)local eG=et.gameObject.textRenderer:GetText()if not eF then aR=eG..aR end;if#aR>et.maxLength then aR=aR:sub(1,et.maxLength)end;if eG~=aR then et.gameObject.textRenderer:SetText(aR)Daneel.Event.Fire(et,"OnUpdate",et)et:UpdateCursor()end end;local eH={"slider","Slider"}local eI={"input","Input"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["GUI.Slider.New"]={bw,dN},["GUI.Slider.Set"]={eH,cp},["GUI.Slider.SetValue"]={eH,{"value",{n,ax}}},["GUI.Slider.GetValue"]={eH,{"getAsPercentage",d,isOptional=true}},["GUI.Input.New"]={bw,dN},["GUI.Input.Focus"]={eI,{"focus",d,isOptional=true}},["GUI.Input.UpdateCursor"]={eI},["GUI.Input.Update"]={eI,{"text",n},{"replaceText",d,isOptional=true}}})GUI.TextArea={}GUI.TextArea.__index=GUI.TextArea;function GUI.TextArea.New(aZ,bW)local eJ={}eJ.gameObject=aZ;aZ.textArea=eJ;eJ.id=Daneel.Utilities.GetId()eJ.lineGOs={}setmetatable(eJ,GUI.TextArea)eJ.textRuler=aZ.textRenderer;if eJ.textRuler==nil then eJ.textRuler=aZ:CreateComponent("TextRenderer")end;eJ.textRuler:SetText("")bW=bW or{}eJ.cameraGO=bW.cameraGO or dP(aZ)eJ:Set(table.merge(GUI.Config.textArea,bW))return eJ end;function GUI.TextArea.Set(eJ,bW)local eK=eJ.lineGOs;eJ.lineGOs={}local aR=bW.text;bW.text=nil;for G,h in pairs(bW)do eJ[G]=h end;eJ.lineGOs=eK;if aR==nil then aR=eJ.Text end;eJ:SetText(aR)end;function GUI.TextArea.SetText(eJ,aR)eJ.Text=aR;local eL={aR}if eJ.newLine~=""then eL=string.split(aR,eJ.NewLine)end;local eM=eJ.gameObject.transform:GetLocalScale()local eN=eJ.AreaWidth;if eN~=nil and eN>0 then local eO=table.copy(eL)eL={}for p=1,#eO do local cn=eO[p]if eJ.textRuler:GetTextWidth(cn)*eM.x>eN then local eP=""for a6=1,#cn do local z=cn:sub(a6,a6)eP=eP..z;if eJ.textRuler:GetTextWidth(eP)*eM.x>eN then if z==" "then table.insert(eL,eP:sub(1,#eP-1))eP=""else local eQ=""for _=#eP,1,-1 do local eR=eP:sub(_,_)if eR==" "then break else eQ=eR..eQ end end;table.insert(eL,eP:sub(1,#eP-#eQ))eP=eQ end;if not eJ.WordWrap then eP=nil;break end end end;if eP~=nil then table.insert(eL,eP)end else table.insert(eL,cn)end end end;if type(eJ.linesFilter)=="function"then eL=eJ.linesFilter(eJ,eL)or eL end;local eS=#eL;local eK=eJ.lineGOs;local eT=#eK;local eU=eJ.LineHeight/eM.y;local aZ=eJ.gameObject;local eV={font=eJ.Font,alignment=eJ.Alignment,opacity=eJ.Opacity}local eW=-eU/2;if eJ.VerticalAlignment=="middle"then eW=eU*eS/2-eU/2 elseif eJ.VerticalAlignment=="bottom"then eW=eU*eS-eU/2 end;for p=1,eS do local cn=eL[p]eV.text=cn;if eK[p]~=nil then eK[p].transform:SetLocalPosition(Vector3:New(0,eW,0))eK[p].textRenderer:Set(eV)else local eX=CS.CreateGameObject("TextArea"..eJ.id.."-Line"..p,aZ)eX.transform:SetLocalPosition(Vector3:New(0,eW,0))eX.transform:SetLocalScale(Vector3:New(1))eX:CreateComponent("TextRenderer")eX.textRenderer:Set(eV)table.insert(eK,eX)end;eW=eW-eU end;if eS<eT then for p=eS+1,eT do eK[p].textRenderer:SetText("")end end;Daneel.Event.Fire(eJ,"OnUpdate",eJ)end;function GUI.TextArea.GetText(eJ)return eJ.Text end;function GUI.TextArea.AddLine(eJ,cn,eY)local aR=eJ.Text;if eY==true then aR=cn..eJ.NewLine..aR else if aR~=""and not string.endswith(aR,eJ.NewLine)then cn=eJ.NewLine..cn end;aR=aR..cn end;eJ:SetText(aR)end;function GUI.TextArea.SetAreaWidth(eJ,eN)eN=eN or 0;eN=math.clamp(GUI.ToSceneUnit(eN,eJ.cameraGO),0,999)if eJ.AreaWidth~=eN then eJ.AreaWidth=eN;if#eJ.lineGOs>0 then eJ:SetText(eJ.Text)end end end;function GUI.TextArea.GetAreaWidth(eJ)return eJ.AreaWidth end;function GUI.TextArea.SetWordWrap(eJ,eZ)eZ=eZ or false;if eJ.WordWrap~=eZ then eJ.WordWrap=eZ;if#eJ.lineGOs>0 then eJ:SetText(eJ.Text)end end end;function GUI.TextArea.GetWordWrap(eJ)return eJ.WordWrap end;function GUI.TextArea.SetNewLine(eJ,eP)if eJ.NewLine~=eP then eJ.NewLine=eP;if#eJ.lineGOs>0 then eJ:SetText(eJ.Text)end end end;function GUI.TextArea.GetNewLine(eJ)return eJ.NewLine end;function GUI.TextArea.SetLineHeight(eJ,eU)local eU=GUI.ToSceneUnit(eU,eJ.cameraGO)if eJ.LineHeight~=eU then eJ.LineHeight=eU;if#eJ.lineGOs>0 then eJ:SetText(eJ.Text)end end end;function GUI.TextArea.GetLineHeight(eJ)return eJ.LineHeight end;function GUI.TextArea.SetVerticalAlignment(eJ,e_)local aI="GUI.TextArea.SetVerticalAlignment( textArea, verticalAlignment ) : "e_=Daneel.Debug.CheckArgValue(e_,"verticalAlignment",{"top","middle","bottom"},aI,GUI.Config.textArea.verticalAlignment)e_=string.trim(e_:lower())if eJ.VerticalAlignment~=e_ then eJ.VerticalAlignment=e_;if#eJ.lineGOs>0 then eJ:SetText(eJ.Text)end end end;function GUI.TextArea.GetVerticalAlignment(eJ)return eJ.VerticalAlignment end;function GUI.TextArea.SetFont(eJ,cR)eJ.textRuler:SetFont(cR)cR=eJ.textRuler:GetFont()if eJ.Font~=cR then eJ.Font=cR;if#eJ.lineGOs>0 then for p=1,#eJ.lineGOs do eJ.lineGOs[p].textRenderer:SetFont(eJ.Font)end;eJ:SetText(eJ.Text)end end end;function GUI.TextArea.GetFont(eJ)return eJ.Font end;function GUI.TextArea.SetAlignment(eJ,cS)eJ.textRuler:SetAlignment(cS)cS=eJ.textRuler:GetAlignment()if eJ.Alignment~=cS then eJ.Alignment=cS;for p=1,#eJ.lineGOs do eJ.lineGOs[p].textRenderer:SetAlignment(eJ.Alignment)end end end;function GUI.TextArea.GetAlignment(eJ)return eJ.Alignment end;function GUI.TextArea.SetOpacity(eJ,ex)if eJ.Opacity~=ex then eJ.Opacity=ex;for p=1,#eJ.lineGOs do eJ.lineGOs[p].textRenderer:SetOpacity(ex)end end end;function GUI.TextArea.GetOpacity(eJ)return eJ.Opacity end;local f0={"textArea","TextArea"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["GUI.TextArea.New"]={{"gameObject",bv},dN},["GUI.TextArea.Set"]={f0,cp},["GUI.TextArea.SetText"]={f0,{"text",n}},["GUI.TextArea.GetText"]={f0},["GUI.TextArea.AddLine"]={f0,{"line",n},{"prepend",d,isOptional=true}},["GUI.TextArea.SetAreaWidth"]={f0,{"areaWidth",{n,ax},isOptional=true}},["GUI.TextArea.GetAreaWidth"]={f0},["GUI.TextArea.SetWordWrap"]={f0,{"wordWrap",d,isOptional=true}},["GUI.TextArea.GetWordWrap"]={f0},["GUI.TextArea.SetNewLine"]={f0,{"newLine",n}},["GUI.TextArea.GetNewLine"]={f0},["GUI.TextArea.SetLineHeight"]={f0,{"lineHeight",{n,ax}}},["GUI.TextArea.GetLineHeight"]={f0},["GUI.TextArea.SetVerticalAlignment"]={f0,{"verticalAlignment",n}},["GUI.TextArea.GetVerticalAlignment"]={f0},["GUI.TextArea.SetFont"]={f0,{"font",{n,"Font"}}},["GUI.TextArea.GetFont"]={f0},["GUI.TextArea.SetAlignment"]={f0,{"alignment",{n,"userdata",ax}}},["GUI.TextArea.GetAlignment"]={f0},["GUI.TextArea.SetOpacity"]={f0,{"opacity",ax}},["GUI.TextArea.GetOpacity"]={f0}})Daneel.modules.GUI=GUI;function GUI.DefaultConfig()local bx={cameraName="HUD Camera",cameraGO=nil,originGO=nil,hud={},toggle={isChecked=false,text="Toggle",checkedMark=":text",uncheckedMark=":text",checkedModel=nil,uncheckedModel=nil},progressBar={height=1,minValue=0,maxValue=100,minLength=0,maxLength=5,value="100%"},slider={minValue=0,maxValue=100,length=5,axis="x",value="0%",OnTextEntered=nil},input={isFocused=false,maxLength=9999,defaultValue=nil,characterRange=nil,focusOnBackgroundClick=true,cursorBlinkInterval=0.5},textArea={areaWidth=0,wordWrap=false,newLine="<br>",lineHeight=1,verticalAlignment="top",font=nil,text="",alignment=nil,opacity=nil},componentObjectsByType={Hud=GUI.Hud,Toggle=GUI.Toggle,ProgressBar=GUI.ProgressBar,Slider=GUI.Slider,Input=GUI.Input,TextArea=GUI.TextArea},componentTypes={},propertiesByComponentName={hud={"position","localPosition","layer","localLayer"},progressBar={"value","height"},slider={"value"},textArea={"text","areaWidth","lineHeight","opacity"}}}return bx end;GUI.Config=GUI.DefaultConfig()function GUI.Load()if Daneel.modules.Tween then table.mergein(Tween.Config.propertiesByComponentName,GUI.Config.propertiesByComponentName)end end;Draw={}Daneel.modules.Draw=Draw;local f1={}local n="string"local d="boolean"local ax="number"local o="table"local a0="Vector3"local bw={"gameObject","GameObject"}local dN={"params",o,isOptional=true}local cp={"params",o}local f2={"line","LineRenderer"}local f3={"circle","CircleRenderer"}local f4={"draw",d,isOptional=true}Draw.LineRenderer={}f1["Draw.LineRenderer.New"]={bw,dN}function Draw.LineRenderer.New(aZ,bW)local cn={origin=aZ.transform:GetPosition(),_direction=Vector3:Left(),_length=1,_width=1,gameObject=aZ}cn._endPosition=cn.origin;aZ.lineRenderer=cn;setmetatable(cn,Draw.LineRenderer)bW=table.merge(Draw.Config.lineRenderer,bW)if bW.endPosition~=nil then bW.length=nil;bW.direction=nil end;cn:Set(bW)return cn end;f1["Draw.LineRenderer.Set"]={f2,cp}function Draw.LineRenderer.Set(cn,bW)if bW.endPosition then if bW.length or bW.direction then if Daneel.Config.debug.enableDebug then local aR="Draw.LineRenderer.Set( line, params ) : The 'endPosition' property is set with value "..tostring(bW.endPosition)if bW.length then aR=aR.." The 'length' property with value '"..tostring(bW.length).."' has been ignored."end;if bW.direction then aR=aR.." The 'direction' property with value '"..tostring(bW.direction).."' has been ignored."end;print(aR)end;bW.length=nil;bW.direction=nil end end;local draw=false;for G,h in pairs(bW)do local as="Set"..string.ucfirst(G)if Draw.LineRenderer[as]~=nil then draw=true;if as=="SetDirection"then Draw.LineRenderer[as](cn,h,nil,false)else Draw.LineRenderer[as](cn,h,false)end else cn[G]=h end end;if draw then cn:Draw()end end;f1["Draw.LineRenderer.Draw"]={f2}function Draw.LineRenderer.Draw(cn)cn.gameObject.transform:LookAt(cn._endPosition)cn.gameObject.transform:SetLocalScale(Vector3:New(cn._width,cn._width,cn._length))Daneel.Event.Fire(cn,"OnDraw",cn)end;f1["Draw.LineRenderer.SetEndPosition"]={f2,{"endPosition",a0},f4}function Draw.LineRenderer.SetEndPosition(cn,f5,draw)cn._endPosition=f5;cn._direction=cn._endPosition-cn.origin;cn._length=cn._direction:Length()if draw==nil or draw==true then cn:Draw()end end;f1["Draw.LineRenderer.GetEndPosition"]={f2}function Draw.LineRenderer.GetEndPosition(cn)return cn._endPosition end;f1["Draw.LineRenderer.SetLength"]={f2,{"length",ax},f4}function Draw.LineRenderer.SetLength(cn,K,draw)cn._length=K;cn._endPosition=cn.origin+cn._direction*K;if draw==nil or draw==true then cn:Draw()end end;f1["Draw.LineRenderer.GetLength"]={f2}function Draw.LineRenderer.GetLength(cn)return cn._length end;f1["Draw.LineRenderer.SetDirection"]={f2,{"direction",a0},{"useDirectionAsLength",d,isOptional=true},f4}function Draw.LineRenderer.SetDirection(cn,es,f6,draw)cn._direction=es:Normalized()if f6==true then cn._length=es:Length()end;cn._endPosition=cn.origin+cn._direction*cn._length;if draw==nil or draw==true then cn:Draw()end end;f1["Draw.LineRenderer.GetDirection"]={f2}function Draw.LineRenderer.GetDirection(cn)return cn._direction end;f1["Draw.LineRenderer.SetWidth"]={f2,{"width",ax},f4}function Draw.LineRenderer.SetWidth(cn,cU,draw)cn._width=cU;if draw==nil or draw==true then cn:Draw()end end;f1["Draw.LineRenderer.GetWidth"]={f2}function Draw.LineRenderer.GetWidth(cn)return cn._width end;Draw.CircleRenderer={}f1["Draw.CircleRenderer.New"]={bw,dN}function Draw.CircleRenderer.New(aZ,bW)local f7={gameObject=aZ,origin=aZ.transform:GetPosition(),segments={},_segmentCount=6,_radius=1,_width=1,_model=nil}f7._endPosition=f7.origin;aZ.circleRenderer=f7;bW=bW or{}if bW.model==nil and aZ.modelRenderer~=nil then bW.model=aZ.modelRenderer:GetModel()aZ.modelRenderer:SetModel(nil)end;setmetatable(f7,Draw.CircleRenderer)f7:Set(table.merge(Draw.Config.circleRenderer,bW))return f7 end;f1["Draw.CircleRenderer.Set"]={f3,cp}function Draw.CircleRenderer.Set(f7,bW)local draw=false;for G,h in pairs(bW)do local as="Set"..string.ucfirst(G)if Draw.CircleRenderer[as]~=nil then draw=true;Draw.CircleRenderer[as](f7,h,false)else f7[G]=h end end;if draw then f7:Draw()end end;f1["Draw.CircleRenderer.Draw"]={f3}function Draw.CircleRenderer.Draw(f7)local eW=2*math.pi/f7._segmentCount;local g=-eW;local f8=f7:GetId()for p=1,f7._segmentCount do g=g+eW;local f9=Vector3:New(f7._radius*math.cos(g),f7._radius*math.sin(g),0)if f7.segments[p]==nil then local fa=CS.CreateGameObject("Circle "..f8 .." Segment "..p,f7.gameObject)fa:CreateComponent("ModelRenderer")if f7._model~=nil then fa.modelRenderer:SetModel(f7._model)end;table.insert(f7.segments,p,fa)end;f7.segments[p].transform:SetLocalPosition(f9)end;while#f7.segments>f7._segmentCount do table.remove(f7.segments):Destroy()end;local fb=f7.segments[1].transform:GetPosition()local fc=Vector3.Distance(fb,f7.segments[2].transform:GetPosition())for p,fd in ipairs(f7.segments)do if f7.segments[p+1]~=nil then fd.transform:LookAt(f7.segments[p+1].transform:GetPosition())else fd.transform:LookAt(fb)end;fd.transform:SetLocalScale(Vector3:New(f7._width,f7._width,fc))end;Daneel.Event.Fire(f7,"OnDraw",f7)end;f1["Draw.CircleRenderer.SetRadius"]={f3,{"radius",ax},f4}function Draw.CircleRenderer.SetRadius(f7,fe,draw)f7._radius=fe;if draw==nil or draw==true then f7:Draw()end end;f1["Draw.CircleRenderer.GetRadius"]={f3}function Draw.CircleRenderer.GetRadius(f7)return f7._radius end;f1["Draw.CircleRenderer.SetSegmentCount"]={f3,{"count",ax},f4}function Draw.CircleRenderer.SetSegmentCount(f7,ff,draw)if ff<3 then ff=3 end;if f7._segmentCount~=ff then f7._segmentCount=ff;if draw==nil or draw==true then f7:Draw()end end end;f1["Draw.CircleRenderer.GetSegmentCount"]={f3}function Draw.CircleRenderer.GetSegmentCount(f7)return f7._segmentCount end;f1["Draw.CircleRenderer.SetWidth"]={f3,{"width",ax}}function Draw.CircleRenderer.SetWidth(f7,cU)if f7._width~=cU then f7._width=cU;if#f7.segments>0 and draw then local fg=Vector3:New(f7._width,f7._width,f7.segments[1].transform:GetLocalScale().z)for p,cn in pairs(f7.segments)do cn.transform:SetLocalScale(fg)end end end end;f1["Draw.CircleRenderer.GetWidth"]={f3}function Draw.CircleRenderer.GetWidth(f7)return f7._width end;f1["Draw.CircleRenderer.SetModel"]={f3,{"model",{"string","Model"},isOptional=true}}function Draw.CircleRenderer.SetModel(f7,cH)if f7._model~=cH then if type(cH)=="sting"and f7._model~=nil and f7._model:GetPath()==cH then return end;if cH~=nil then f7._model=Asset.Get(cH,"Model",true)else f7._model=nil end;for p,cn in pairs(f7.segments)do cn.modelRenderer:SetModel(f7._model)end end end;f1["Draw.CircleRenderer.GetModel"]={f3}function Draw.CircleRenderer.GetModel(f7)return f7._model end;f1["Draw.CircleRenderer.SetOpacity"]={f3,{"opacity","number"}}function Draw.CircleRenderer.SetOpacity(f7,ex)for p=1,#cicle.segments do f7.segments[p].modelRenderer:SetOpacity(ex)end end;f1["Draw.CircleRenderer.GetOpacity"]={f3}function Draw.CircleRenderer.GetOpacity(f7)if f7.segments[1]~=nil then return f7.segments[1].modelRenderer:GetOpacity()end;return nil end;table.mergein(Daneel.Debug.functionArgumentsInfo,f1)function Draw.DefaultConfig()local bx={lineRenderer={direction=Vector3:Left(),length=2,width=0.1},circleRenderer={segmentCount=6,radius=1,width=1,model=nil},componentObjectsByType={LineRenderer=Draw.LineRenderer,CircleRenderer=Draw.CircleRenderer},propertiesByComponentName={lineRenderer={"length","endPosition","direction","width"},circleRenderer={"radius","segmentCount","direction","width","opacity"}}}return bx end;Draw.Config=Draw.DefaultConfig()function Draw.Load()if Daneel.modules.Tween then table.mergein(Tween.Config.propertiesByComponentName,Draw.Config.propertiesByComponentName)end end;Color={}ColorMT={__call=function(an,...)return an.New(...)end,__index=function(av,G)local fh=Color.colorsByName[G:lower()]if fh~=nil then return Color.New(fh)end end}setmetatable(Color,ColorMT)function Color.__index(fi,G)local fj={"r","g","b"}G=fj[G]or G;return Color[G]or fi["_"..G]or rawget(fi,G)end;function Color.__newindex(fi,G,h)local fj={"r","g","b"}G=fj[G]or G;if G=="r"or G=="g"or G=="b"then fi["_"..G]=math.round(math.clamp(tonumber(h),0,255),0)else rawset(fi,G,h)end end;function Color.__tostring(fi)local n="Color: { r="..fi._r..", g="..fi._g..", b="..fi._b..", hex=\""..fi:GetHex().."\""local b0=fi:GetName()if b0~=nil then n=n..", name=\""..b0 .."\""end;return n.." }"end;function Color.New(q,fk,d)local fi=setmetatable({},Color)if type(q)=="string"and fk==nil then local fl=Color[q]if fl~=nil then return fl else fi:SetHex(q)end else if type(q)=="table"then if q.r~=nil then fk=q.g;d=q.b;q=q.r elseif q.x~=nil then fk=q.y;d=q.z;q=q.x elseif#q==3 then fk=q[2]d=q[3]q=q[1]end end;fi.r=q or 0;fi.g=fk or fi._r;fi.b=d or fi._g end;return fi end;Color.colorsByName={red={255,0,0},green={0,255,0},blue={0,0,255},yellow={255,255,0},cyan={0,255,255},magenta={255,0,255},white={255,255,255},black={0,0,0}}for b0,fh in pairs(Color.colorsByName)do Color.colorsByName[b0]=Color.New(fh)end;function Color.GetName(fi)for b0,fh in pairs(Color.colorsByName)do if type(fh)=="string"then fh={Color.HexToRGB(fh)}end;if fi._r==fh[1]and fi._g==fh[2]and fi._b==fh[3]then return b0 end end end;function Color.ToArray(fi)return{fi._r,fi._g,fi._b}end;function Color.ToRGB(fi)return{r=fi._r,g=fi._g,b=fi._b}end;function Color.ToVector3(fi)return Vector3:New(fi._r,fi._g,fi._b)end;function Color.ToString(fi)return fi._r.." "..fi._g.." "..fi._b end;function string.tocolor(fm)local fi=Color.New(0)local fj={"b","g","r"}for w in string.gmatch(fm,"[0-9]+")do fi[table.remove(fj)]=tonumber(w)end;return fi end;function Color.RGBToHex(q,fk,d)local fh=Color.New(q,fk,d):ToArray()local fn=""for G=1,3 do local h=fh[G]local fo=''while h>0 do local ae=math.fmod(h,16)+1;h=math.floor(h/16)fo=string.sub('0123456789ABCDEF',ae,ae)..fo end;if string.len(fo)==0 then fo='00'elseif string.len(fo)==1 then fo='0'..fo end;fn=fn..fo end;return fn end;function Color.GetHex(fi)return Color.RGBToHex(fi)end;function Color.HexToRGB(fo)fo=fo:gsub("#",""):gsub("0x",""):gsub("0X","")return tonumber("0x"..fo:sub(1,2)),tonumber("0x"..fo:sub(3,4)),tonumber("0x"..fo:sub(5,6))end;function Color.SetHex(fi,fo)local fp={Color.HexToRGB(fo)}for p=1,3 do fi[p]=fp[p]end end;function Color.GetHSV(fi)local q,fk,d=fi._r/255,fi._g/255,fi._b/255;local m,l=math.max(q,fk,d),math.min(q,fk,d)local fq,n,a0;a0=m;local fr=m-l;if m==0 then n=0 else n=fr/m end;if m==l then fq=0 else if m==q then fq=(fk-d)/fr;if fk<d then fq=fq+6 end elseif m==fk then fq=(d-q)/fr+2 elseif m==d then fq=(q-fk)/fr+4 end;fq=fq/6 end;return fq,n,a0 end;function Color.__eq(c,d)return c._r==d._r and c._g==d._g and c._b==d._b end;function Color.__add(c,d)return Color.New(c._r+d._r,c._g+d._g,c._b+d._b)end;function Color.__sub(c,d)return Color.New(c._r-d._r,c._g-d._g,c._b-d._b)end;function Color.__mul(c,d)local fi=Color.New(0)if type(c)=="table"and type(d)=="number"then fi.r=c._r*d;fi.g=c._g*d;fi.b=c._b*d elseif type(c)=="number"and type(d)=="table"then fi.r=c*d._r;fi.g=c*d._g;fi.b=c*d._b elseif type(c)=="table"and type(d)=="table"then fi.r=c._r*d._r;fi.g=c._g*d._g;fi.b=c._b*d._b end;return fi end;function Color.__div(c,d)local fi=Color.New(0)if type(c)=="table"and type(d)=="number"then fi.r=c._r/d;fi.g=c._g/d;fi.b=c._b/d elseif type(c)=="number"and type(d)=="table"then fi.r=c/d._r;fi.g=c/d._g;fi.b=c/d._b elseif type(c)=="table"and type(d)=="table"then fi.r=c._r/d._r;fi.g=c._g/d._g;fi.b=c._b/d._b end;return fi end;function Color._resolve(fs)local ft=Color.New(0)local fu=Color.New(0)for d7,h in pairs(fs:ToRGB())do if h~=255 and h>=127.5 then ft[d7]=255;fu[d7]=0 elseif h~=0 and h<127.5 then ft[d7]=0;fu[d7]=255 else ft[d7]=h;fu[d7]=h end end;if fu==ft then fu=nil end;local fv=ft;local fw=0;if fu~=nil then fw=Color._getFrontOpacity(ft,fu,fs)fv=Color.New((fu:ToVector3()-ft:ToVector3())*fw+ft:ToVector3())if fv~=fs then print("Color._resolve(): Sorry, can't resolve target color [1], getting [2] instead",fs,fv)end end;return ft,fu,fw,fv end;function Color._getFrontOpacity(ft,fu,fs)local d7=nil;local fj={"r","g","b"}for p=1,3 do local fx=fj[p]if fu[fx]~=ft[fx]then d7=fx;break end end;if d7~=nil then return math.round((fs[d7]-ft[d7])/fu[d7]-ft[d7],3)else print("Color._getFrontOpacity(): can't calculate opacity because no suitable component was found",ft,fu,fs)return 1 end end;Color.colorAssetsFolder="Colors/"function Color._getAsset(fi,bD,fy)if not string.endswith(Color.colorAssetsFolder,"/")then Color.colorAssetsFolder=Color.colorAssetsFolder.."/"end;fy=fy or Color.colorAssetsFolder;local b0=fi:GetName()if b0==nil and Daneel.Config.debug.enableDebug==true then error("Color._getAsset(): Can't find the name of the provided color",fi,"The color must be set in the Color.colorsByName table.")end;local cu=fy..b0;local bF=CS.FindAsset(cu,bD)if bF==nil then cu=fy..string.ucfirst(b0)bF=CS.FindAsset(cu,bD)end;if bF==nil and Daneel.Config.debug.enableDebug==true then error("Color._getAsset(): Could not find asset of type '"..bD.."' at path '"..cu.."' for ",fi)end;return bF end;function Color._setColor(dH,fi)local fz,bD,fA,fB;local aN=getmetatable(dH)if aN==ModelRenderer then fz="ModelRenderer"bD="Model"fA=ModelRenderer.SetModel;fB=ModelRenderer.GetModel elseif aN==TextRenderer then fz="TextRenderer"bD="Font"fA=TextRenderer.SetFont;fB=TextRenderer.GetFont end;local ft,fu,fw=fi:_resolve()local aZ=dH.gameObject;local fC=aZ.frontColorRenderer;local fy=nil;local fD=fB(dH)if fD~=nil then fy=fD:GetPath():gsub(fD.name,"")end;local fE=ft:_getAsset(bD,fy)if fD~=fE then fA(dH,fE)end;if fC==nil and fu~=nil then fC=aZ:CreateComponent(fz)aZ[string.lcfirst(fz)]=dH;aZ.frontColorRenderer=fC;if fz=="TextRenderer"then fC:SetAlignment(dH:GetAlignment())end end;if fC~=nil then if fu~=nil then local fE=fu:_getAsset(bD,fy)local fD=fB(fC)if fD~=fE then fA(fC,fE)end end;fC.Fo=fw;fC:SetOpacity(fw*dH:GetOpacity())end end;function ModelRenderer.SetColor(cF,fi)Color._setColor(cF,fi)end;function TextRenderer.SetColor(cP,fi)Color._setColor(cP,fi)end;local fF=TextRenderer.SetText;function TextRenderer.SetText(cP,aR)fF(cP,aR)local fC=cP.gameObject.frontColorRenderer;if fC~=nil then fF(fC,aR)end end;local fG=TextRenderer.SetAlignment;function TextRenderer.SetAlignment(cP,cS)fG(cP,cS)local fC=cP.gameObject.frontColorRenderer;if fC~=nil then fG(fC,cS)end end;function Color._setOpacity(dH,ex)dH:oSetOpacity(ex)local fC=dH.gameObject.frontColorRenderer;if fC~=nil and dH~=fC then local fw=fC.Fo or 1;fC:oSetOpacity(fw*ex)end end;ModelRenderer.oSetOpacity=ModelRenderer.SetOpacity;ModelRenderer.SetOpacity=Color._setOpacity;TextRenderer.oSetOpacity=TextRenderer.SetOpacity;TextRenderer.SetOpacity=Color._setOpacity;function Color._getColor(dH)local fz,fB;local aN=getmetatable(dH)if aN==ModelRenderer then fz="ModelRenderer"fB=ModelRenderer.GetModel elseif aN==TextRenderer then fz="TextRenderer"fB=TextRenderer.GetFont end;local ft,fu,fv;local bF=fB(dH)if bF~=nil then ft=Color[bF:GetName()]end;local fC=dH.gameObject.frontColorRenderer;local fw=1;if fC~=nil and ft~=nil then fw=fC.Fo or 1;local bF=fB(fC)if bF~=nil then fu=Color[bF:GetName()]end end;if ft~=nil then if fu~=nil then fv=Color.New((fu:ToVector3()-ft:ToVector3())*fw+ft:ToVector3())else fv=ft end end;return fv end;function ModelRenderer.GetColor(cF)return Color._getColor(cF)end;function TextRenderer.GetColor(cP)return Color._getColor(cP)end;Color.Pattern={DesaturedPlainColor=1,DeValuedPlainColor=2,Any0255=3,["21128"]=4,["0128"]=5}Color.PatternsById={}for b0,aw in pairs(Color.Pattern)do Color.PatternsById[aw]=b0 end;function Color.GetRandom(k)k=k or math.random(#Color.PatternsById)local fH=table.copy(Color.colorsByName)fH.black=nil;fH=table.getvalues(fH)local fi=Color.New(0)if k==1 then local fI=Color.New(fH[math.random(#fH)])fi=fI+Color.New(math.random(0,255))elseif k==2 then local fI=Color.New(fH[math.random(#fH)])fi=fI-Color.New(math.random(0,255))elseif k==3 then local X={0,255,math.random(0,255)}for p=1,3 do fi[p]=table.remove(X,math.random(#X))end elseif k==4 then local l=math.random(0,128)local m=255-l;local fJ=l;if math.random(2)==1 then fJ=m end;local X={l,m,fJ}for p=1,3 do fi[p]=table.remove(X,math.random(#X))end elseif k==5 then local l=math.random(0,128)local m=255-l;local fJ=0;if math.random(2)==1 then fJ=255 end;local X={l,m,fJ}for p=1,3 do fi[p]=table.remove(X,math.random(#X))end end;return fi end;Tween={}local function fK(ew)if ew.target~=nil then Daneel.Debug.StackTrace.BeginFunction("GetTweenerProperty",ew)local h=nil;h=ew.target[ew.property]if h==nil then local bi="Get"..string.ucfirst(ew.property)if ew.target[bi]~=nil then h=ew.target[bi](ew.target)end end;Daneel.Debug.StackTrace.EndFunction()return h end end;local function fL(ew,h)if ew.target~=nil then Daneel.Debug.StackTrace.BeginFunction("SetTweenerProperty",ew,h)if ew.valueType=="string"then if type(h)=="number"and h>=#ew.stringValue+1 then local fM=ew.startStringValue..ew.endStringValue:sub(1,h)if fM~=ew.stringValue then ew.stringValue=fM;h=fM else return end else return end end;if ew.target[ew.property]==nil then local bi="Set"..string.ucfirst(ew.property)if ew.target[bi]~=nil then ew.target[bi](ew.target,ew.property)end else ew.target[ew.property]=h end;Daneel.Debug.StackTrace.EndFunction()end end;Tween.Tweener={tweeners={}}Tween.Tweener.__index=Tween.Tweener;setmetatable(Tween.Tweener,{__call=function(an,...)return an.New(...)end})function Tween.Tweener.__tostring(ew)return"Tweener: "..ew.id end;function Tween.Tweener.New(fN,a1,fO,fP,fQ,bW)Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.New",fN,a1,fO,fP,bW)local aI="Tween.Tweener.New(target, property, endValue, duration[, params]) : "local ew=table.copy(Tween.Config.tweener)setmetatable(ew,Tween.Tweener)ew.id=Daneel.Utilities.GetId()local fR=type(fN)local aN=nil;if fR=="table"then aN=getmetatable(fN)end;if fR=="number"or fR=="string"or aN==Vector2 or aN==Vector3 then bW=fQ;fQ=fP;fP=fO;fO=a1;local fS=fN;aI="Tween.Tweener.New(startValue, endValue, duration[, onCompleteCallback, params]) : "Daneel.Debug.CheckArgType(fP,"duration","number",aI)if type(fQ)=="table"then bW=fQ;fQ=nil end;Daneel.Debug.CheckOptionalArgType(fQ,"onCompleteCallback","function",aI)Daneel.Debug.CheckOptionalArgType(bW,"params","table",aI)ew.startValue=fS;ew.endValue=fO;ew.duration=fP;if fQ~=nil then ew.OnComplete=fQ end;if bW~=nil then ew:Set(bW)end elseif a1==nil then Daneel.Debug.CheckArgType(fN,"params","table",aI)aI="Tween.Tweener.New(params) : "ew:Set(fN)else Daneel.Debug.CheckArgType(fN,"target","table",aI)Daneel.Debug.CheckArgType(a1,"property","string",aI)Daneel.Debug.CheckArgType(fP,"duration","number",aI)if type(fQ)=="table"then bW=fQ;fQ=nil end;Daneel.Debug.CheckOptionalArgType(fQ,"onCompleteCallback","function",aI)Daneel.Debug.CheckOptionalArgType(bW,"params","table",aI)ew.target=fN;ew.property=a1;ew.endValue=fO;ew.duration=fP;if fQ~=nil then ew.OnComplete=fQ end;if bW~=nil then ew:Set(bW)end end;if ew.endValue==nil then error("Tween.Tweener.New(): 'endValue' property is nil for tweener: "..tostring(ew))end;if ew.startValue==nil then ew.startValue=fK(ew)end;if ew.target~=nil then ew.gameObject=ew.target.gameObject end;ew.valueType=Daneel.Debug.GetType(ew.startValue)if ew.valueType=="string"then ew.startStringValue=ew.startValue;ew.stringValue=ew.startStringValue;ew.endStringValue=ew.endValue;ew.startValue=1;ew.endValue=#ew.endStringValue end;Tween.Tweener.tweeners[ew.id]=ew;Daneel.Debug.StackTrace.EndFunction()return ew end;function Tween.Tweener.Set(ew,bW)for G,h in pairs(bW)do ew[G]=h end end;function Tween.Tweener.Play(ew)if ew.isEnabled==false then return end;ew.isPaused=false;Daneel.Event.Fire(ew,"OnPlay",ew)end;function Tween.Tweener.Pause(ew)if ew.isEnabled==false then return end;ew.isPaused=true;Daneel.Event.Fire(ew,"OnPause",ew)end;function Tween.Tweener.Restart(ew)if ew.isEnabled==false then return end;ew.elapsed=0;ew.fullElapsed=0;ew.elapsedDelay=0;ew.completedLoops=0;ew.isCompleted=false;ew.hasStarted=false;local fS=ew.startValue;if ew.loopType=="yoyo"and ew.completedLoops%2~=0 then fS=ew.endValue end;if ew.target~=nil then fL(ew,fS)end;ew.value=fS end;function Tween.Tweener.Complete(ew)if ew.isEnabled==false or ew.loops==-1 then return end;ew.isCompleted=true;local fO=ew.endValue;if ew.loopType=="yoyo"then if ew.loops%2==0 and ew.completedLoops%2==0 then fO=ew.startValue elseif ew.loops%2~=0 and ew.completedLoops%2~=0 then fO=ew.startValue end end;if ew.target~=nil then fL(ew,fO)end;ew.value=fO;Daneel.Event.Fire(ew,"OnComplete",ew)if ew.destroyOnComplete then ew:Destroy()end end;local function fT(aZ)return aZ.isDestroyed==true or aZ.inner==nil end;function Tween.Tweener.IsTargetDestroyed(ew)if ew.target~=nil then if ew.target.isDestroyed then return true end;if ew.target.gameObject~=nil and fT(ew.target.gameObject)then return true end end;if ew.gameObject~=nil and fT(ew.gameObject)then return true end;return false end;function Tween.Tweener.Destroy(ew)ew.isEnabled=false;ew.isPaused=true;ew.target=nil;ew.duration=0;Tween.Tweener.tweeners[ew.id]=nil;CraftStudio.Destroy(ew)end;function Tween.Tweener.Update(ew,fU)if ew.isEnabled==false then return end;if Tween.Ease[ew.easeType]==nil then if Daneel.Config.debug.enableDebug then print("Tween.Tweener.Update() : Easing '"..tostring(ew.easeType).."' for tweener ID '"..tween.id.."' does not exists. Setting it back for the default easing '"..Tween.Config.tweener.easeType.."'.")end;ew.easeType=Tween.Config.tweener.easeType end;if fU~=nil then ew.elapsed=ew.elapsed+fU;ew.fullElapsed=ew.fullElapsed+fU end;local h=nil;if ew.elapsed>ew.duration then ew.isCompleted=true;ew.elapsed=ew.duration;if ew.isRelative==true then h=ew.startValue+ew.endValue else h=ew.endValue end else if ew.valueType=="Vector3"then h=Vector3:New(Tween.Ease[ew.easeType](ew.elapsed,ew.startValue.x,ew.diffValue.x,ew.duration),Tween.Ease[ew.easeType](ew.elapsed,ew.startValue.y,ew.diffValue.y,ew.duration),Tween.Ease[ew.easeType](ew.elapsed,ew.startValue.z,ew.diffValue.z,ew.duration))elseif ew.valueType=="Vector2"then h=Vector2.New(Tween.Ease[ew.easeType](ew.elapsed,ew.startValue.x,ew.diffValue.x,ew.duration),Tween.Ease[ew.easeType](ew.elapsed,ew.startValue.y,ew.diffValue.y,ew.duration))else h=Tween.Ease[ew.easeType](ew.elapsed,ew.startValue,ew.diffValue,ew.duration)end end;if ew.target~=nil then fL(ew,h)end;ew.value=h;Daneel.Event.Fire(ew,"OnUpdate",ew)end;local aC={"tweener","Tween.Tweener"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["Tween.Tweener.Set"]={aC,{"params","table"}},["Tween.Tweener.Play"]={aC},["Tween.Tweener.Pause"]={aC},["Tween.Tweener.Restart"]={aC},["Tween.Tweener.Complete"]={aC},["Tween.Tweener.IsTargetDestroyed"]={aC},["Tween.Tweener.Destroy"]={aC},["Tween.Tweener.Update"]={aC,{"deltaDuration","number"}}})Tween.Timer={}Tween.Timer.__index=Tween.Tweener;setmetatable(Tween.Timer,{__call=function(an,...)return an.New(...)end})function Tween.Timer.New(fP,cv,fV,bW)Daneel.Debug.StackTrace.BeginFunction("Tween.Timer.New",fP,cv,fV,bW)local aI="Tween.Timer.New( duration, callback[, isInfiniteLoop, params] ) : "if type(fV)=="table"then bW=fV;aI="Tween.Timer.New( duration, callback[, params] ) : "end;Daneel.Debug.CheckArgType(fP,"duration","number",aI)Daneel.Debug.CheckArgType(cv,"callback",{"function","userdata"},aI)Daneel.Debug.CheckOptionalArgType(bW,"params","table",aI)local ew=table.copy(Tween.Config.tweener)setmetatable(ew,Tween.Tweener)ew.id=Daneel.Utilities.GetId()ew.startValue=fP;ew.endValue=0;ew.duration=fP;if fV==true then ew.loops=-1;ew.OnLoopComplete=cv else ew.OnComplete=cv end;if bW~=nil then ew:Set(bW)end;Tween.Tweener.tweeners[ew.id]=ew;Daneel.Debug.StackTrace.EndFunction()return ew end;Daneel.modules.Tween=Tween;function Tween.DefaultConfig()local bx={tweener={isEnabled=true,isPaused=false,delay=0.0,duration=0.0,durationType="time",startValue=nil,endValue=0.0,loops=0,loopType="simple",easeType="linear",isRelative=false,destroyOnComplete=true,destroyOnSceneLoad=true,updateInterval=1,Id=-1,hasStarted=false,isCompleted=false,elapsed=0,fullElapsed=0,elapsedDelay=0,completedLoops=0,diffValue=0.0,value=0.0,frameCount=0},objectsByType={["Tween.Tweener"]=Tween.Tweener},propertiesByComponentName={transform={"scale","localScale","position","localPosition","eulerAngles","localEulerAngles"},modelRenderer={"opacity"},mapRenderer={"opacity"},textRenderer={"text","opacity"},camera={"fov"}}}return bx end;Tween.Config=Tween.DefaultConfig()function Tween.Awake()local o={}for fW,fX in pairs(Tween.Config.propertiesByComponentName)do for p=1,#fX do local a1=fX[p]o[a1]=o[a1]or{}table.insert(o[a1],fW)end end;Tween.Config.componentNamesByProperty=o;for aw,ew in pairs(Tween.Tweener.tweeners)do if ew.destroyOnSceneLoad then ew:Destroy()end end end;function Tween.Update()for aw,ew in pairs(Tween.Tweener.tweeners)do if ew:IsTargetDestroyed()then ew:Destroy()end;if ew.isEnabled==true and ew.isPaused==false and ew.isCompleted==false and ew.duration>0 then ew.frameCount=ew.frameCount+1;if ew.frameCount%ew.updateInterval==0 then local fU=Daneel.Time.deltaTime*ew.updateInterval;if ew.durationType=="realTime"then fU=Daneel.Time.realDeltaTime*ew.updateInterval elseif ew.durationType=="frame"then fU=ew.updateInterval end;if fU>0 then if ew.elapsedDelay>=ew.delay then if ew.hasStarted==false then ew.hasStarted=true;if ew.startValue==nil then if ew.target~=nil then ew.startValue=fK(ew)else error("Tween.Update() : startValue is nil but no target is set for tweener: "..tostring(ew))end elseif ew.target~=nil then fL(ew,ew.startValue)end;ew.value=ew.startValue;if ew.isRelative==true then ew.diffValue=ew.endValue else ew.diffValue=ew.endValue-ew.startValue end;Daneel.Event.Fire(ew,"OnStart",ew)end;ew:Update(fU)else ew.elapsedDelay=ew.elapsedDelay+fU end;if ew.isCompleted==true then ew.completedLoops=ew.completedLoops+1;if ew.loops==-1 or ew.completedLoops<ew.loops then ew.isCompleted=false;ew.elapsed=0;if ew.loopType:lower()=="yoyo"then local fS=ew.startValue;if ew.isRelative then ew.startValue=ew.value;ew.endValue=-ew.endValue;ew.diffValue=ew.endValue else ew.startValue=ew.endValue;ew.endValue=fS;ew.diffValue=-ew.diffValue end elseif ew.target~=nil then fL(ew,ew.startValue)end;ew.value=ew.startValue;Daneel.Event.Fire(ew,"OnLoopComplete",ew)else Daneel.Event.Fire(ew,"OnComplete",ew)if ew.destroyOnComplete and ew.Destroy~=nil then ew:Destroy()end end end end end end end end;local function fY(aZ,a1)local bC=nil;if(a1=="position"or a1=="localPosition")and GUI~=nil and GUI.Hud~=nil and aZ.hud~=nil then bC=aZ.hud elseif a1=="text"and GUI~=nil and GUI.TextArea~=nil and aZ.textArea~=nil then bC=aZ.textArea else local fZ=Tween.Config.componentNamesByProperty[a1]if fZ~=nil then for p=1,#fZ do bC=aZ[fZ[p]]if bC~=nil then break end end end end;if bC==nil then error("Tween: resolveTarget(): Couldn't resolve the target for property '"..a1 .."' and gameObject: "..tostring(aZ))end;return bC end;function GameObject.Animate(aZ,a1,fO,fP,fQ,bW)local bC=nil;if type(fQ)=="table"and bW==nil then bW=fQ;fQ=nil end;if bW~=nil and bW.target~=nil then bC=bW.target else bC=fY(aZ,a1)end;return Tween.Tweener.New(bC,a1,fO,fP,fQ,bW)end;Daneel.Debug.functionArgumentsInfo["GameObject.Animate"]={{"gameObject","GameObject"},{"property","string"},{"endValue",{"string","number","Vector2","Vector3"}},{"duration","number"}}
-- Easing equations
-- From Emmanuel Oga's easing equations : https://github.com/EmmanuelOga/easing

--
-- Adapted from
-- Tweener's easing functions (Penner's Easing Equations)
-- and http://code.google.com/p/tweener/ (jstweener javascript version)
--

--[[
Disclaimer for Robert Penner's Easing Equations license:

TERMS OF USE - EASING EQUATIONS

Open source under the BSD License.

Copyright © 2001 Robert Penner
All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
* Neither the name of the author nor the names of contributors may be used to endorse or promote products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
]]

-- For all easing functions:
-- t = elapsed time
-- b = begin
-- c = change == ending - beginning
-- d = duration (total time)

local pow = math.pow
local sin = math.sin
local cos = math.cos
local pi = math.pi
local sqrt = math.sqrt
local abs = math.abs
local asin = math.asin

local function linear(t, b, c, d)
  return c * t / d + b
end

local function inQuad(t, b, c, d)
  t = t / d
  return c * pow(t, 2) + b
end

local function outQuad(t, b, c, d)
  t = t / d
  return -c * t * (t - 2) + b
end

local function inOutQuad(t, b, c, d)
  t = t / d * 2
  if t < 1 then
    return c / 2 * pow(t, 2) + b
  else
    return -c / 2 * ((t - 1) * (t - 3) - 1) + b
  end
end

local function outInQuad(t, b, c, d)
  if t < d / 2 then
    return outQuad (t * 2, b, c / 2, d)
  else
    return inQuad((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inCubic (t, b, c, d)
  t = t / d
  return c * pow(t, 3) + b
end

local function outCubic(t, b, c, d)
  t = t / d - 1
  return c * (pow(t, 3) + 1) + b
end

local function inOutCubic(t, b, c, d)
  t = t / d * 2
  if t < 1 then
    return c / 2 * t * t * t + b
  else
    t = t - 2
    return c / 2 * (t * t * t + 2) + b
  end
end

local function outInCubic(t, b, c, d)
  if t < d / 2 then
    return outCubic(t * 2, b, c / 2, d)
  else
    return inCubic((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inQuart(t, b, c, d)
  t = t / d
  return c * pow(t, 4) + b
end

local function outQuart(t, b, c, d)
  t = t / d - 1
  return -c * (pow(t, 4) - 1) + b
end

local function inOutQuart(t, b, c, d)
  t = t / d * 2
  if t < 1 then
    return c / 2 * pow(t, 4) + b
  else
    t = t - 2
    return -c / 2 * (pow(t, 4) - 2) + b
  end
end

local function outInQuart(t, b, c, d)
  if t < d / 2 then
    return outQuart(t * 2, b, c / 2, d)
  else
    return inQuart((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inQuint(t, b, c, d)
  t = t / d
  return c * pow(t, 5) + b
end

local function outQuint(t, b, c, d)
  t = t / d - 1
  return c * (pow(t, 5) + 1) + b
end

local function inOutQuint(t, b, c, d)
  t = t / d * 2
  if t < 1 then
    return c / 2 * pow(t, 5) + b
  else
    t = t - 2
    return c / 2 * (pow(t, 5) + 2) + b
  end
end

local function outInQuint(t, b, c, d)
  if t < d / 2 then
    return outQuint(t * 2, b, c / 2, d)
  else
    return inQuint((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inSine(t, b, c, d)
  return -c * cos(t / d * (pi / 2)) + c + b
end

local function outSine(t, b, c, d)
  return c * sin(t / d * (pi / 2)) + b
end

local function inOutSine(t, b, c, d)
  return -c / 2 * (cos(pi * t / d) - 1) + b
end

local function outInSine(t, b, c, d)
  if t < d / 2 then
    return outSine(t * 2, b, c / 2, d)
  else
    return inSine((t * 2) -d, b + c / 2, c / 2, d)
  end
end

local function inExpo(t, b, c, d)
  if t == 0 then
    return b
  else
    return c * pow(2, 10 * (t / d - 1)) + b - c * 0.001
  end
end

local function outExpo(t, b, c, d)
  if t == d then
    return b + c
  else
    return c * 1.001 * (-pow(2, -10 * t / d) + 1) + b
  end
end

local function inOutExpo(t, b, c, d)
  if t == 0 then return b end
  if t == d then return b + c end
  t = t / d * 2
  if t < 1 then
    return c / 2 * pow(2, 10 * (t - 1)) + b - c * 0.0005
  else
    t = t - 1
    return c / 2 * 1.0005 * (-pow(2, -10 * t) + 2) + b
  end
end

local function outInExpo(t, b, c, d)
  if t < d / 2 then
    return outExpo(t * 2, b, c / 2, d)
  else
    return inExpo((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inCirc(t, b, c, d)
  t = t / d
  return(-c * (sqrt(1 - pow(t, 2)) - 1) + b)
end

local function outCirc(t, b, c, d)
  t = t / d - 1
  return(c * sqrt(1 - pow(t, 2)) + b)
end

local function inOutCirc(t, b, c, d)
  t = t / d * 2
  if t < 1 then
    return -c / 2 * (sqrt(1 - t * t) - 1) + b
  else
    t = t - 2
    return c / 2 * (sqrt(1 - t * t) + 1) + b
  end
end

local function outInCirc(t, b, c, d)
  if t < d / 2 then
    return outCirc(t * 2, b, c / 2, d)
  else
    return inCirc((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inElastic(t, b, c, d, a, p)
  if t == 0 then return b end

  t = t / d

  if t == 1 then return b + c end

  if not p then p = d * 0.3 end

  local s

  if not a or a < abs(c) then
    a = c
    s = p / 4
  else
    s = p / (2 * pi) * asin(c/a)
  end

  t = t - 1

  return -(a * pow(2, 10 * t) * sin((t * d - s) * (2 * pi) / p)) + b
end

-- a: amplitud
-- p: period
local function outElastic(t, b, c, d, a, p)
  if t == 0 then return b end

  t = t / d

  if t == 1 then return b + c end

  if not p then p = d * 0.3 end

  local s

  if not a or a < abs(c) then
    a = c
    s = p / 4
  else
    s = p / (2 * pi) * asin(c/a)
  end

  return a * pow(2, -10 * t) * sin((t * d - s) * (2 * pi) / p) + c + b
end

-- p = period
-- a = amplitud
local function inOutElastic(t, b, c, d, a, p)
  if t == 0 then return b end

  t = t / d * 2

  if t == 2 then return b + c end

  if not p then p = d * (0.3 * 1.5) end
  if not a then a = 0 end

  if not a or a < abs(c) then
    a = c
    s = p / 4
  else
    s = p / (2 * pi) * asin(c / a)
  end

  if t < 1 then
    t = t - 1
    return -0.5 * (a * pow(2, 10 * t) * sin((t * d - s) * (2 * pi) / p)) + b
  else
    t = t - 1
    return a * pow(2, -10 * t) * sin((t * d - s) * (2 * pi) / p ) * 0.5 + c + b
  end
end

-- a: amplitud
-- p: period
local function outInElastic(t, b, c, d, a, p)
  if t < d / 2 then
    return outElastic(t * 2, b, c / 2, d, a, p)
  else
    return inElastic((t * 2) - d, b + c / 2, c / 2, d, a, p)
  end
end

local function inBack(t, b, c, d, s)
  if not s then s = 1.70158 end
  t = t / d
  return c * t * t * ((s + 1) * t - s) + b
end

local function outBack(t, b, c, d, s)
  if not s then s = 1.70158 end
  t = t / d - 1
  return c * (t * t * ((s + 1) * t + s) + 1) + b
end

local function inOutBack(t, b, c, d, s)
  if not s then s = 1.70158 end
  s = s * 1.525
  t = t / d * 2
  if t < 1 then
    return c / 2 * (t * t * ((s + 1) * t - s)) + b
  else
    t = t - 2
    return c / 2 * (t * t * ((s + 1) * t + s) + 2) + b
  end
end

local function outInBack(t, b, c, d, s)
  if t < d / 2 then
    return outBack(t * 2, b, c / 2, d, s)
  else
    return inBack((t * 2) - d, b + c / 2, c / 2, d, s)
  end
end

local function outBounce(t, b, c, d)
  t = t / d
  if t < 1 / 2.75 then
    return c * (7.5625 * t * t) + b
  elseif t < 2 / 2.75 then
    t = t - (1.5 / 2.75)
    return c * (7.5625 * t * t + 0.75) + b
  elseif t < 2.5 / 2.75 then
    t = t - (2.25 / 2.75)
    return c * (7.5625 * t * t + 0.9375) + b
  else
    t = t - (2.625 / 2.75)
    return c * (7.5625 * t * t + 0.984375) + b
  end
end

local function inBounce(t, b, c, d)
  return c - outBounce(d - t, 0, c, d) + b
end

local function inOutBounce(t, b, c, d)
  if t < d / 2 then
    return inBounce(t * 2, 0, c, d) * 0.5 + b
  else
    return outBounce(t * 2 - d, 0, c, d) * 0.5 + c * .5 + b
  end
end

local function outInBounce(t, b, c, d)
  if t < d / 2 then
    return outBounce(t * 2, b, c / 2, d)
  else
    return inBounce((t * 2) - d, b + c / 2, c / 2, d)
  end
end

-- Modifications for Daneel : replaced 'return {' by 'Tween.Ease = {'
Tween.Ease = {
  linear = linear,
  inQuad = inQuad,
  outQuad = outQuad,
  inOutQuad = inOutQuad,
  outInQuad = outInQuad,
  inCubic = inCubic ,
  outCubic = outCubic,
  inOutCubic = inOutCubic,
  outInCubic = outInCubic,
  inQuart = inQuart,
  outQuart = outQuart,
  inOutQuart = inOutQuart,
  outInQuart = outInQuart,
  inQuint = inQuint,
  outQuint = outQuint,
  inOutQuint = inOutQuint,
  outInQuint = outInQuint,
  inSine = inSine,
  outSine = outSine,
  inOutSine = inOutSine,
  outInSine = outInSine,
  inExpo = inExpo,
  outExpo = outExpo,
  inOutExpo = inOutExpo,
  outInExpo = outInExpo,
  inCirc = inCirc,
  outCirc = outCirc,
  inOutCirc = inOutCirc,
  outInCirc = outInCirc,
  inElastic = inElastic,
  outElastic = outElastic,
  inOutElastic = inOutElastic,
  outInElastic = outInElastic,
  inBack = inBack,
  outBack = outBack,
  inOutBack = inOutBack,
  outInBack = outInBack,
  inBounce = inBounce,
  outBounce = outBounce,
  inOutBounce = inOutBounce,
  outInBounce = outInBounce,
}

