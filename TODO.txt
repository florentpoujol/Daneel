
==========
Branch Develop


vérifier que tous les changements prévus sont implémentés, sans se soucier du GUI
vérifier que les changement fonctionnent avec un version post-compo de Minimalist Encounter
mettre à jour la doc complètement

créer branche pour GUI component
implémenter la nouvelle version du GUI
tester
metre à jour la doc

Publier


Voir à attendre que l'asset "Font" soit lui-même publié > influera sur les GUIText


==========
A implémenter

LORSQUE LA NOUVELLE VERSIN DE CS EST SORTIE
- enlever l'orthographic scale en dure dans Daneel.Awake()

- vérif que si on ajoute plusieurs "MouseInteractiveGameObject", ou castable, ou triggerable, le gameObject se fait pas ajouter plusieurs fois dans la liste
- vérif avec checkbox que les messages reçoivent bien l'instance du component comme argument, et non juste un copie du contenu de la table

- A voir avec TextRenderer >
  permettre de facilement suater des lignes ou définir un wordWrap ou permettre les :br: avec un TextRenderer

- modelRenderer:SetDimension(Vector3) ou vector2


==========
A tester




==========
A modifier/ajouter dans la doc :


- GUI
- Tween


====================
Branch GUI 

HUD > positionement en % au lieu de pixels
positionnnement Global + local sans besoin de parenter
GetPosition en calculant la positin à partir des parents ou de la position 3D


progressbar > 
  autoriser de définir les longueurs en units ou pixels, le progress en unit, pixel ou percentage


ScriptedBehaviors pour ajouter les composants et les initialisés lorsque das l'éditeur de scène :
- HUD avec propriétés (string)
  - positionX
  - positionY

- CheckBox avec propriété 
  - isChecked (boolean)
  - text (string)

- ProgressBar
  - 


- Input
- ProgressBar
- Slider







Slider
    - scale de la progress bar affecte le handle


"progress bar" mais avec plusieurs éléments
> lorsque élément pas utilisé, il a opacity, scale etc au choix dans la config, donc
	out et in state  



input
	- param size qui limite la taille du champs mais pas du texte (flèches font se déplacer le texte)


  

======================
Tween

paser enabled en isEnabled

Daneel.Tween.To(target, propname, endValue, duration, isRelative)
Daneel.Tween.From()
ou avec table params : Daneel.Tween.To/From(params)
Retournent un "Tweener"

Tweener
  methods:
    GoTo()
    Play()
    Pause()
    Destroy()
    Restart()
    Complete()
  callbacks :
    OnStart
    OnComplete
    OnPlay
    OnPause
    OnDestroy
  params :
    target
    duration
    durationType ? > also for delay
    fullDuration (duration * loops)
    propName
    targetValue
    isRelative
    enabled
    isPaused
    position (temps < duration)
    id > plusieur tween peuvent avoir la même id si désiré
    loops (-1 = infinite)
    delay (delay before autostart)
    easeType
    loops
    loopType
  "read only" properties :
    completedLoops
    hasStarted

valeurs par défaut
  > config de daneel ? config.tween.defaultProperties = { isPause = false, ... } }


"Enums"
Daneel.Tween
  EaseType
  LoopType
  DurationTime ? (time, realTime, frame)

Tween valeur arbitraire (non liée à un component ou GO)
  Daneel.Tween.Value(from, to, duration)
  > OnUpdate reçoit la valeur ? > Oui


Sequences
  > simple stack de tween
  ou bien timeline

  