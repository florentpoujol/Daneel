==========
IDEAS

    -----
    MISC

    - OnButtonJustPressed( buttonName ) / OnButtonDown( buttonName ) / OnButtonJustReleased( buttonName ) 

    - un moyen de placer un gameobject dans un variable via la scène
        un scripted behavior qui prend un string comme argument

    - Daneel.Utilities.Circle pseudo object (like Plane) with position, radius, normal
        > rayCastHit = ray:IntersectsCircle( circle, true )
    - Rectangle pseudo object with position, normal, width, height > allow pixels
        > raycashit = ray:IntersectRectangle( rectangle, true )


    -----
    GUI

    - MouseInput
        passer la camera en argument des events, en plus du gameObject
   
    - "progress bar" mais avec plusieurs éléments
    lorsque élément pas utilisé, il a opacity, scale etc au choix dans la config, donc
      out et in state  

    - scrollable windows : 
        n'affiche que ce qui est dans une certaine zone
        déplacement via slider (assenseur) ou molette souris
        introduit object Rect( x, y, width, height )

        scale à 0 les objects en dehors de la fenètre
        > ou les cache avec un autre model par exemple
        > ou les fenètres sont rendue par d'autres cameras dont l'object Rect

    - button scripted behavior avec property "onclick"


    -----
    TWEEN

    - tweener
        garder les tweeners agissant sur un GO ou composant sur une propriété gameObject.tweeners

    - Timeline
        table de tweeners. clés = temps, valeur = tweeners
        fait débuter les tweeners en fonction du temps
        fonction : Play, Pause, Restart, Complete, Destroy, Update

    - stack de tweeners qui débutent les uns après les autres
        réécrire la fonction OnComplete pour lancer le prochain tweener (timeline:StartNext())
        propriété current qui point vers le tweenr courant


    -----
    MODULE / PLUGIN / EXTENSION

    - module = notion abstraite (n'est pas limitée à un object ou un fichier), qui possède ou non les fonctions DaneelModule[Module]Config(), DaneelModule[Module]Load, ..Awake, ..Start, ..Update
    - permettre dépendances (un module oblige d'autre à se charger aussi)
        > module étent la config et ajoute les modules dont il dépend qui sont ajoutés avant lui dans la table des modules à charger
    - liste des modules chargés + empècher plusieurs chargements du même modules

    lorsque CS permettra de 

    function CS.DaneelModules( object, dependance )

    if CS.DaneelModules == nil then
        CS.DaneelModules = {}
    end
    table.insert( CS.DaneelModules, { modulename = {} } )



    -----
    PARTICLE EMITTER
    > gameObject composant

    "similaire" au tweeners, dépend des tweener

    propriétés
    - isPaused, isEnabled, hasStarted, isCompleted
    - loops, completedLoops 
    - delay
    - elapsed, fullElapsed
    
    - duration > est calculé en fonction de emitionRate et maxParticleCount si nil
    - durationType
    - emitionRate (nb particle per durationType) > calcule maxParticleCount si nil
    - maxParticleCount (nb of particles emitted over the duration) > calcule emitionRate si nil
    
    - createParticleFromScene > 
        set the state of the emitted particles
        gameObject émits peuvent être issue d'une scène et/ou sont modifié par paramètres :
    
    - particleStartParams
        - Lifetime > nil or < 1 for infinite life (in durationType unit)
        - any component property


    Events :
    - OnStart, OnPause, OnPlay, OnComplete, OnLoopComplete,
    - OnNewParticle sur le GO qui emet la particle et sur le gameObject émit
    - OnParticleDie when lifetime is over > pourquoi pas utiliser OnDestroy ?

    Function :
    Pause, Play, Restart, Destroy
    

    ------
    Frustrum Culling

    - For each camera, create a "CullingMask" gameObject with a modelRenderer sized to the camera's viewport

    gamObject:IsVisibleFromCamera( camera GO or component ) returns true or false, or nil if no culling mask is set
    camera:GetVisibleGameObjects( tags ) returns the list of the gameObjects that are visible from the camera 

    FrustrumCulling scripted behavior
    public properties :
    tags
    cullingInterval 
    near plane
    far plane

    Fires the following events at game bjects when they leave/enter the frustrum
    OnBecomeVisible( cameraGO )   ou bien  OnCameraEnter( cameraGO )
    OnBecomeInvisible( cameraGO )   OnCameraExit( cameraGO )

    
    ------
    Occlusion Culling

    Create a grid of rays based of the screen size in pixel.
    For each rays, keep the closest gameObject 
    Only render the closest GO
    Enable to set a near and far plane
    (When a game object is "selected" for render, removeit from the list of game objects to check)


==========
A implémenter
    
    - add setter for all GUI properties
    - propriété updateInterval for tweeners
    - GUI.Input permettre de définir un curseur model optionnel
    
    - Daneel.Draw object
        lineRenderer = gameObject:AddComponent("LineRenderer")
        lineRenderer:SetLength() / GetLength() > autorise en pixel
        lineRenderer:SetDirection() / GetDirection()
        lineRenderer:SetWidth() / GetWidth() > autorise en pixel
        lineRenderer:SetEndPosition() /

        circleRenderer = gameObject:AddComponent("CircleRenderer")
        circleRenderer:SetRadius() / GetRadius() > autorise en pixels
        circleRenderer:SetNormal() / GetNormal() > default {0, 0, 1}
        circleRenderer:SetSegmentCount() / GetSegmentCount()
        circleRenderer:SetModel() / GetModel()
        circleRenderer:SetLineWidth() > autorise en pixel

    - ne pas réécrire des fonction de CS si Daneel n'est pas chargé
    > les wrapper autour de Module.Load()



==========
A tester

    - voir pourquoi certains easeType renvoient des erreurs
    - remove use of Vector3.Distance with trigger
    - allow asset setter to accept nil as argument
    - Intersects[Component]( ray, component, returnRaycastHit )
    - squared triggers
    - Tweener scripted behavior with most common properties, tweener ajouté à propriété 'tweener' sur game object (idem pour timer)


==========
A modifier/ajouter dans la doc :

    - Scene.current = currently loaded scene asset
    - workInterval dans mouseInput et checkInterval dans trigger devins "updateInterval"
    - placer paragraph sur les mouse interaction au dehors de la page GUI
    - add a Lang scripted behavior which replace the text of the textrenderer or textArea
    - math.lerp, wrapangle, round


=========
BUGS

    - ajouter un TextArea via le scripted behavior renvoie l'exception :


OLD

    - utiliser Awake au lieu de start dans CheckBox, et créer une checkBox via le ScriptedBehavior envoie un exception

    > créer le scriptedBehavior de la checkBox depuis CheckBox.New() lorsqu'il existait déjà renvoie cette exception

    Exception non gérée : System.InvalidOperationException: La collection a été modifiée ; l'opération d'énumération peut ne pas s'exécuter.




=========
V2

Core :
Daneel
    Event
    Debug
    Utilities
    Cache
    Time
    Hotkeys
CraftStudio
GameObject
Lua

Individual behaviors :



Modules :
GUI
Tween
Draw
Lang
MouseInputs
Triggersd
Ray ?
