==========
IDEAS

    -----
    MISC

    - trigger, tags : stocker les tags en tant que clé et non en tant que valeur
        > gain de perf ?

    - table.rebuiltindex()
        recomplète l'index d'une table numérotée en gardant l'ordre

    - DEBUG
        - introduire un CheckArgValue, CheckOptionalArgValue > remplace CheckAssetType(), CheckComponentType()

    - A voir avec TextRenderer > permettre de facilement sauter des lignes (avec :br:) ou définir un wordWrap
    - modelRenderer:SetDimension(Vector3) ou idem avec Vector2

    - système plus flexible que TimedUpdate afin qu'un object s'inscrive à un event récurent
        Event.ListenRecuringEvent(time, TimedUpdate, object)
        Event.Ask


    - revoir l'utilisation de error(), print() et de la stacktrace
        lorsque debug activé, la localisation des erreurs se trouve toujours dans dans Daneel

        il faut que error() utiliser dans n'importe quel fichier puisse afficher la stacktrace > pas possible sans la réécrire

        CheckArgType() va toujours retourner l'erreur depuis Daneel.lua, mais on a le nom de la fonction impliquée

        Debug.Beginfunction("function name", {
            {
                name = "argumentName",
                value = argValue,
                expectedType = Type, > appel CheckArgType
                expectedValue = Values, > appel auto CheckValue ou checkDefault Value
                defaultValue = "machin" > si expectedType or Value sont définits, fait appeler la version "optional" des fonctions
            },

            minimun info = argValue
        })
        > cette fonction enregistre la stacktrace
        et fait appeler Debug.Check.. en fonction des valeurs trouvées

    sur azerty
    touche $£¤ = M
    touche !§ = none

    sur qwerty
    MANqUE OemBackslash OemPipe
    ``¬¬¦¦ = tilde

    -----
    GUI

    - Input
        - param size qui limite la taille du champs mais pas du texte (flèches font se déplacer le texte)
    
    - "progress bar" mais avec plusieurs éléments
    lorsque élément pas utilisé, il a opacity, scale etc au choix dans la config, donc
      out et in state  

    
    -----
    TWEEN

    -----
    MODULE / PLUGIN / EXTENSION

    - voir plus en profondeur comment Composer (php), node.js font pour gérer ça
    - module = un object global, sur lequel existe ou non les fonctions Config, Load, Awake, Start, Update


==========
A implémenter


    -----
    DEVELOP 

    LORSQUE LA NOUVELLE VERSION DE CS EST SORTIE
    - enlever l'orthographic scale en dure dans DaneelModuleGUIAwake()
    - enlever commentaire autour de TextRenderer.SetFont()
    - décommenter nouveaux component dans la config
    - commentaire dans ray:IntersectsGameObject()


    -----
    GUI

    -----
    TWEENER


==========
A tester

    - voir pourquoi certains easeType renvoient des erreurs
    - checkBox avec custom mark
    - input


==========
A modifier/ajouter dans la doc :

    - Example project : minimalist encounter

    - slider + input


=========
BUGS

    - parfois, une ligne de la stacktrace n'est pas complète : #04 GameObject.Ge)
        > quadn argument attendus est nil ?


=========

ordre chargement des fichiers :
- dans l'ordre de création (id d'asset croissant)
- dernier script modifié sans faire de révision depuis le dernier export est chargé en premier




