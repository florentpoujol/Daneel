==========
IDEAS

    -----
    MISC

    - un moyen de placer un gameobject dans un variable via la scène
        un scripted behavior qui prend un string comme argument

    - Daneel.Utilities.Circle pseudo object (like Plane) with position, radius, normal
        > rayCastHit = ray:IntersectsCircle( circle, true )
    - Rectangle pseudo object with position, normal, width, height > allow pixels
        > raycashit = ray:IntersectRectangle( rectangle, true )

    - gameObject:GetGenealogy() retourne toute la généalogie du gameobject : "parent.child.subchild"
    
    - make custom component objects to keep a reference of theirs instances so that we can search if a gameObject has a component by going though all them
        > go:GetComponent() could get custom components for a gameObject even when the instance is not set in a property on the gameObject
        > need emptying when a new scene is loaded, when a gameObject or component is destroyed

    -----
    GUI

    - MouseInput
        passer la camera en argument des events, en plus du gameObject
   
    - "progress bar" mais avec plusieurs éléments
    lorsque élément pas utilisé, il a opacity, scale etc au choix dans la config, donc
      out et in state  

    - scrollable windows : 
        n'affiche que ce qui est dans une certaine zone
        déplacement via slider (assenseur) ou molette souris
        introduit object Rect( x, y, width, height )

        scale à 0 les objects en dehors de la fenètre
        > ou les cache avec un autre model par exemple
        > ou les fenètres sont rendue par d'autres cameras dont l'object Rect

    - button scripted behavior avec property "onclick"


    -----
    TWEEN

    - Timeline
        table de tweeners. clés = temps, valeur = tweeners
        fait débuter les tweeners en fonction du temps
        fonction : Play, Pause, Restart, Complete, Destroy, Update

    - stack de tweeners qui débutent les uns après les autres
        réécrire la fonction OnComplete pour lancer le prochain tweener (timeline:StartNext())
        propriété current qui point vers le tweenr courant


    -----
    MODULE / PLUGIN / EXTENSION

    - GUI.Input permettre de définir un curseur model optionnel

==========
A implémenter
    
    - add setter for all GUI properties
    

==========
A tester

    - voir pourquoi certains easeType renvoient des erreurs
    - allow asset setter to accept nil as argument
    - Intersects[Component]( ray, component, returnRaycastHit )
    - Tweener scripted behavior with most common properties, tweener ajouté à propriété 'tweener' sur game object (idem pour timer)


==========
A modifier/ajouter dans la doc :

    
    - workInterval dans mouseInput et checkInterval dans trigger devins "updateInterval"
    - add a Lang scripted behavior which replace the text of the textrenderer or textArea
    - draw object

    - création de modules
    - création de composants


=========
BUGS

SetMap renvoie erreur "Object reference not set to an instance of an object." lorsque argument map est nil