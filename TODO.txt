==========
IDEAS

    -----
    MISC

    - Daneel.Utilities.Circle pseudo object (like Plane) with position, radius, normal
        > rayCastHit = ray:IntersectsCircle( circle, true )
    - Rectangle pseudo object with position, normal, width, height > allow pixels
        > raycashit = ray:IntersectRectangle( rectangle, true )

    - Network
        - automatic CS.Network.Server.playerIds which is the default third argument for SendMessageToPlayers()
        - third argument of SendMessageToPlayers() can also be a single id

    ----
    Draw

    - set the circle's model via a model renderer on the circle game object

    
    -----
    GUI
   
    - "progress bar" mais avec plusieurs éléments
    lorsque élément pas utilisé, il a opacity, scale etc au choix dans la config, donc
      out et in state  

    - scrollable windows : 
        n'affiche que ce qui est dans une certaine zone
        déplacement via slider (assenseur) ou molette souris
        introduit object Rect( x, y, width, height )

        scale à 0 les objects en dehors de la fenètre
        > ou les cache avec un autre model par exemple
        > ou les fenètres sont rendue par d'autres cameras dont l'object Rect

    - GUI.Input permettre de définir un curseur model optionnel

    -----
    TWEEN


    -----
    MODULE / PLUGIN / EXTENSION

    

==========
A implémenter
    
    
==========
A tester
    
    
==========
A modifier/ajouter dans la doc :
    
    
=========
BUGS


