-- Lua
function math.isinteger(a)local b=false;if type(a)=="number"then b=a==math.floor(a)end;return b end;function math.lerp(c,d,e,f)if f=="smooth"then e=e*2;if e<1 then e=0.5*e*e*e else e=e-2;e=0.5*e*e*e+2 end elseif f=="smooth in"then e=e*e*e elseif f=="smooth out"then e=e-1;e=e*e*e+1 end;return c+(d-c)*e end;function math.warpangle(g)if g>180 then g=g-360 elseif g<-180 then g=g+360 end;return g end;function math.round(h,i)if i~=nil then h=math.floor(h*10^i+0.5)/10^i else h=math.floor(h+0.5)end;return h end;function tonumber2(j)local a=tonumber(j)if a==nil then j=tostring(j)local k="(%d+)"if j:find(".",1,true)then k="(%d+%.%d+)"end;a=j:match(j:gsub(k,"(%1)"))a=tonumber(a)end;return a end;function string.totable(l)local m={}for n=1,#l do table.insert(m,l:sub(n,n))end;return m end;function string.ucfirst(l)local o=l:gsub("^%l",string.upper)return o end;function string.lcfirst(l)local o=l:gsub("^%u",string.lower)return o end;function string.split(l,p,q)local r={}if q then local s,t=l:find(p)if s~=nil then local k=p;p=l:sub(s,t)if string.startswith(l,p)then l=l:sub(#p+1,#l)end;if not l:endswith(p)then l=l..p end;for u in l:gmatch("(.-)"..k)do table.insert(r,u)end end else if l:find(p,1,true)~=nil then if string.startswith(l,p)then l=l:sub(#p+1,#l)end;if not l:endswith(p)then l=l..p end;local v=""local w=string.totable(l)local n=1;while n<=#w do local x=w[n]if x==p or l:sub(n,n-1+#p)==p then table.insert(r,v)v=""n=n+#p else v=v..x;n=n+1 end end;if#v>0 then table.insert(r,v)end end end;if#r==0 then r={l}end;return r end;function string.startswith(l,v)local o=l:sub(1,#v)==v;return o end;function string.endswith(l,v)local o=l:sub(#l-#v+1,#l)==v;return o end;function string.trimstart(l)local o=l:gsub("^%s+","")return o end;function string.trimend(l)local o=l:gsub("%s+$","")return o end;function string.trim(l)local o=l:gsub("^%s+",""):gsub("%s+$","")return o end;function table.copy(m,y)local z={}if table.isarray(m)then for A,h in ipairs(m)do if type(h)=="table"and y then h=table.copy(h,y)end;table.insert(z,h)end else for A,h in pairs(m)do if type(h)=="table"and y then h=table.copy(h,y)end;z[A]=h end end;return z end;function table.containsvalue(m,h,B)if h==nil then return false end;if B and type(h)=='string'then h=h:lower()end;for A,C in pairs(m)do if B and type(C)=="string"then C=C:lower()end;if h==C then return true end end;return false end;function table.getlength(m,D)local E=0;if D~=nil then D=D:lower()end;for A,h in pairs(m)do if D==nil or type(A)==D then E=E+1 end end;return E end;function table.print(m)if m==nil then print("table.print( t ) : Provided table is nil.")return end;print("~~~~~ table.print("..tostring(m)..") ~~~~~ Start ~~~~~")local F=pairs;if table.getlength(m)==0 then print("Table is empty.")elseif table.isarray(m)then F=ipairs end;for A,h in F(m)do print(A,h)end;print("~~~~~ table.print("..tostring(m)..") ~~~~~ End ~~~~~")end;function table.merge(...)return table.mergein({},...)end;function table.mergein(...)local G={...}local y=false;if#G>0 and type(G[#G])~="table"then y=table.remove(G)end;local H=table.remove(G,1)if H==nil then local I="table.mergein(): No table where passed as argument."if#G>0 then table.print(G)I="table.mergein(): First argument is nil. Other arguments are shown above."end;error(I)end;for n,m in ipairs(G)do local J=type(m)if J=="table"then if table.isarray(m)then for A,h in ipairs(m)do table.insert(H,h)end else for A,h in pairs(m)do if H[A]~=nil and y and type(h)=="table"and getmetatable(h)==nil then h=table.merge(H[A],h,true)end;H[A]=h end end end end;return H end;function table.havesamecontent(K,L)if table.getlength(K)~=table.getlength(L)then return false end;for A,h in pairs(K)do if K[A]~=L[A]then return false end end;return true end;function table.combine(M,N)if#M~=#N then print("table.combine( keys, values ) : WARNING : Arguments 'keys' and 'values' have different length :",#M,#N)end;local z={}for n,A in pairs(M)do z[A]=N[n]end;return z end;function table.removevalue(m,h,O)if h==nil then return 0 end;local P=0;for A,C in pairs(m)do if C==h then if math.isinteger(A)then table.remove(m,A)else m[A]=nil end;P=P+1;if O~=nil and P==O then break end end end;return P end;function table.getkeys(m)local M={}for A,h in pairs(m)do table.insert(M,A)end;return M end;function table.getvalues(m)local N={}for A,h in pairs(m)do table.insert(N,h)end;return N end;function table.getkey(m,h)local A=nil;for Q,R in pairs(m)do if h==R then A=Q end end;return A end;function table.sortby(m,S,T)if T==nil or not(T=="asc"or T=="desc")then T="asc"end;local U={}local V={}for n=1,#m do local W=m[n][S]if V[W]==nil then table.insert(U,W)V[W]={}end;table.insert(V[W],m[n])end;if T=="desc"then table.sort(U,function(c,d)return c>d end)else table.sort(U)end;m={}for n=1,#U do for X,Y in pairs(V[U[n]])do table.insert(m,Y)end end;return m end;function table.getvalue(m,M)M=string.split(M,".")local h=m;if h==_G then local Z=false;for A,h in pairs(_G)do if A==M[1]then Z=true;break end end;if not Z then return nil end end;for n,A in ipairs(M)do if h[A]==nil then h=nil;break else h=h[A]end end;return h end;function table.setvalue(m,M,h)if M:find(".",1,true)==nil then m[M]=h else M=string.split(M,".")for n,A in ipairs(M)do if n==#M then m[A]=h else local _=m[A]if _==nil then _={}m[A]=_ end;m=_ end end end end;function table.isarray(m,a0)local a1=0;for Q,R in pairs(m)do a1=a1+1;if type(Q)~="number"or not math.isinteger(Q)then return false end end;if a0==nil or a0 then return a1==#m end;return true end;function table.reverse(m)local z={}for n,R in ipairs(m)do table.insert(z,1,R)end;return z end;function table.shift(m,a2)local A=nil;local h=nil;if table.isarray(m)then if#m>0 then h=table.removevalue(m,1)if h~=nil then A=1 end end else for Q,R in pairs(m)do A=Q;h=R;break end;if A~=nil then m[A]=nil end end;if a2 then return A,h else return h end end;function table.reindex(m)if not table.isarray(m,false)then print("table.reindex( table ) : Provided table '"..tostring(m).."' is not an array.")end;local a3=1;for n,R in pairs(m)do if type(n)=="number"and n>a3 then a3=n end end;local z={}for n=1,a3 do if m[n]~=nil then table.insert(z,m[n])end end;return z end;function table.insertonce(m,a4,h)if h==nil then h=a4;a4=nil end;for A,C in pairs(m)do if h==C then return false end end;if a4==nil then table.insert(m,h)else table.insert(m,a4,h)end;return true end
-- Daneel
Daneel={}Daneel.modules={moduleNames={}}setmetatable(Daneel.modules,{__newindex=function(a,b,c)table.insert(Daneel.modules.moduleNames,b)rawset(Daneel.modules,b,c)end})Daneel.functionsDebugInfo={}function string.split(d,e,f)local g={}if f then local h,i=d:find(e)if h~=nil then local j=e;e=d:sub(h,i)if string.startswith(d,e)then d=d:sub(#e+1,#d)end;if not d:endswith(e)then d=d..e end;if CS.IsWebPlayer then for k in d:gmatch("([^"..j.."]+)"..j)do table.insert(g,k)end else for k in d:gmatch("(.-)"..j)do table.insert(g,k)end end end else if d:find(e,1,true)~=nil then if string.startswith(d,e)then d=d:sub(#e+1,#d)end;if not d:endswith(e)then d=d..e end;local l=""local m=string.totable(d)local n=1;while n<=#m do local o=m[n]if o==e or d:sub(n,n-1+#e)==e then table.insert(g,l)l=""n=n+#e else l=l..o;n=n+1 end end;if#l>0 then table.insert(g,l)end end end;if#g==0 then g={d}end;return g end;function table.deepmerge(...)return table.merge(...,true)end;function table.print(p)if p==nil then print("table.print( t ) : Provided table is nil.")return end;local q=tostring(p)local r=Daneel.Debug.ToRawString(p)if q~=r then q=q.." / "..r end;print("~~~~~ table.print("..q..") ~~~~~ Start ~~~~~")local s=pairs;if table.getlength(p)==0 then print("Table is empty.")elseif table.isarray(p)then s=ipairs end;for t,u in s(p)do print(t,u)end;print("~~~~~ table.print("..q..") ~~~~~ End ~~~~~")end;function table.getlength(p,v)local w=0;if v~=nil then v=v:lower()end;for t,u in pairs(p)do if v==nil or type(t)==v or Daneel.Debug.GetType(t):lower()==v then w=w+1 end end;return w end;local d="string"local x="boolean"local y="number"local p="table"local z="function"local A="userdata"local B={"s",d}local C={"t",p}table.mergein(Daneel.functionsDebugInfo,{["math.isinteger"]={{"number"}},["math.lerp"]={{"a",y},{"b",y},{"factor",y},{"easing",d,isOptional=true}},["math.warpangle"]={{"angle",y}},["math.round"]={{"value",y},{"decimal",y,isOptional=true}},["tonumber2"]={{"data"}},["string.totable"]={B},["string.ucfirst"]={B},["string.lcfirst"]={B},["string.trimstart"]={B},["string.trimend"]={B},["string.trim"]={B},["string.endswith"]={B,{"chunk",d}},["string.startswith"]={B,{"chunk",d}},["string.split"]={B,{"delimiter",d},{"delimiterIsPattern",x,defaultValue=false}},["table.print"]={},["table.merge"]={},["table.mergein"]={},["table.getkeys"]={C},["table.getvalues"]={C},["table.reverse"]={C},["table.reindex"]={C},["table.getvalue"]={C,{"keys",d}},["table.setvalue"]={C,{"keys",d}},["table.getkey"]={C,{"value"}},["table.copy"]={C,{"recursive",x,defaultValue=false}},["table.containsvalue"]={C,{"value"},{"ignoreCase",x,defaultValue=false}},["table.isarray"]={C,{"strict",x,defaultValue=true}},["table.shift"]={C,{"returnKey",x,defaultValue=false}},["table.getlength"]={C,{"keyType",d,isOptional=true}},["table.havesamecontent"]={{"table1",p},{"table2",p}},["table.combine"]={C,{"values","table"},{"returnFalseIfNotSameLength",x,isOptional=true}},["table.removevalue"]={C,{"value"},{"maxRemoveCount",y,isOptional=true}},["table.sortby"]={C,{"property",d},{"orderBy",d,isOptional=true}}})Daneel.Utilities={}function Daneel.Utilities.CaseProof(D,E)if type(E)=="string"then E={E}end;local F=D:lower()for n,G in pairs(E)do if F==G:lower()then D=G;break end end;return D end;function Daneel.Utilities.ReplaceInString(string,H)for I,J in pairs(H)do string=string:gsub(":"..I,J)end;return string end;function Daneel.Utilities.AllowDynamicGettersAndSetters(K,L)function K.__index(M,t)local N=t;if type(t)=="string"then N=string.ucfirst(t)end;if t==N then if K[t]~=nil then return K[t]end;if L~=nil then for n,O in ipairs(L)do if O[t]~=nil then return O[t]end end end else local P="Get"..N;if K[P]~=nil then return K[P](M)elseif K[t]~=nil then return K[t]end;if L~=nil then for n,O in ipairs(L)do if O[P]~=nil then return O[P](M)elseif O[t]~=nil then return O[t]end end end end;return nil end;function K.__newindex(M,t,u)local N=t;if type(t)=="string"then N=string.ucfirst(t)end;if t~=N then local P="Set"..N;if K[P]~=nil then return K[P](M,u)end end;return rawset(M,t,u)end end;function Daneel.Utilities.ToNumber(Q)return tonumber2(Q)end;local R={}function Daneel.Utilities.ButtonExists(S)if R[S]==nil then R[S]=Daneel.Debug.Try(function()CS.Input.WasButtonJustPressed(S)end)end;return R[S]end;Daneel.Utilities.id=0;function Daneel.Utilities.GetId(T)if T~=nil and type(T)=="table"then local U=rawget(T,"id")if U~=nil then return U end;U=Daneel.Utilities.GetId()if T.inner~=nil and not CS.IsWebPlayer then U=tonumber(tostring(T.inner):match("%d+"))end;if U==nil then U="[no id]"end;rawset(T,"id",U)return U else Daneel.Utilities.id=Daneel.Utilities.id+1;return Daneel.Utilities.id end end;Daneel.Cache={GetId=Daneel.Utilities.GetId}table.mergein(Daneel.functionsDebugInfo,{["Daneel.Utilities.CaseProof"]={{"name",d},{"set",{d,p}}},["Daneel.Utilities.ReplaceInString"]={{"string",d},{"replacements",p}},["Daneel.Utilities.ButtonExists"]={{"buttonName",d}}})Daneel.Debug={}function Daneel.Debug.CheckArgType(V,W,X,Y)if type(V)=="table"and getmetatable(V)==GameObject and V.inner==nil then error(Y.."Provided argument '"..W.."' is a destroyed game object '"..tostring(V))end;if not Daneel.Config.debug.enableDebug then return Daneel.Debug.GetType(V)end;local Z="Daneel.Debug.CheckArgType(argument, argumentName, expectedArgumentTypes[, p_errorHead]) : "local _=type(W)if _~="string"then error(Z.."Argument 'argumentName' is of type '".._.."' with value '"..tostring(W).."' instead of 'string'.")end;_=type(X)if _~="string"and _~="table"then error(Z.."Argument 'expectedArgumentTypes' is of type '".._.."' with value '"..tostring(X).."' instead of 'string' or 'table'.")end;if _=="string"then X={X}elseif#X<=0 then error(Z.."Argument 'expectedArgumentTypes' is an empty table.")end;_=type(Y)if _~="nil"and _~="string"then error(Z.."Argument 'p_errorHead' is of type '".._.."' with value '"..tostring(Y).."' instead of 'string'.")end;if Y==nil then Y=""end;_=Daneel.Debug.GetType(V)local a0=type(V)for n,a1 in ipairs(X)do if _==a1 or a0==a1 then return a1 end end;error(Y.."Argument '"..W.."' is of type '".._.."' with value '"..tostring(V).."' instead of '"..table.concat(X,"', '").."'.")end;function Daneel.Debug.CheckOptionalArgType(V,W,X,Y,a2)if V==nil then return a2 end;if not Daneel.Config.debug.enableDebug then return V end;local Z="Daneel.Debug.CheckOptionalArgType(argument, argumentName, expectedArgumentTypes[, p_errorHead, defaultValue]) : "local _=type(W)if _~="string"then error(Z.."Argument 'argumentName' is of type '".._.."' with value '"..tostring(W).."' instead of 'string'.")end;_=type(X)if _~="string"and _~="table"then error(Z.."Argument 'expectedArgumentTypes' is of type '".._.."' with value '"..tostring(X).."' instead of 'string' or 'table'.")end;if _=="string"then X={X}elseif#X<=0 then error(Z.."Argument 'expectedArgumentTypes' is an empty table.")end;_=type(Y)if _~="nil"and _~="string"then error(Z.."Argument 'p_errorHead' is of type '".._.."' with value '"..tostring(Y).."' instead of 'string'.")end;if Y==nil then Z=""end;_=Daneel.Debug.GetType(V)local a0=type(V)for n,a1 in ipairs(X)do if _==a1 or a0==a1 then return V end end;error(Y.."Optional argument '"..W.."' is of type '".._.."' with value '"..tostring(V).."' instead of '"..table.concat(X,"', '").."'.")end;function Daneel.Debug.GetType(T,a3)local Z="Daneel.Debug.GetType( object[, luaTypeOnly] ) : "local _=type(a3)if _~="nil"and _~="boolean"then error(Z.."Argument 'luaTypeOnly' is of type '".._.."' with value '"..tostring(a3).."' instead of 'boolean'.")end;if a3==nil then a3=false end;_=type(T)if not a3 and _=="table"then local a4=getmetatable(T)if a4~=nil then if getmetatable(a4)==Script then return"ScriptedBehavior"end;if Daneel.Config.objects~=nil then for type,T in pairs(Daneel.Config.objects)do if a4==T then return type end end end;for type,T in pairs(_G)do if a4==T then return type end end end end;return _ end;oerror=error;function Daneel.Debug.SetNewError()function error(a5,a6)if Daneel.Config.debug.enableDebug and a6~=true then Daneel.Debug.StackTrace.Print()end;oerror(a5)end end;function Daneel.Debug.Disable(a7)if a7~=nil then a7=" : "..tostring(a7)end;print("Daneel.Debug.Disable()"..a7)error=oerror;Daneel.Config.debug.enableDebug=false end;function Daneel.Debug.ToRawString(Q)if Q==nil and Daneel.Config.debug.enableDebug then print("WARNING : Daneel.Debug.ToRawString( data ) : Argument 'data' is nil.")return nil end;local a8=nil;local a4=getmetatable(Q)if a4~=nil then if a4.__tostring~=nil then local a9=a4.__tostring;a4.__tostring=nil;a8=tostring(Q)a4.__tostring=a9 end end;if a8==nil then a8=tostring(Q)end;return a8 end;function Daneel.Debug.GetNameFromValue(u)Daneel.Debug.StackTrace.BeginFunction("Daneel.Debug.GetNameFromValue",u)local Z="Daneel.Debug.GetNameFromValue(value) : "if u==nil then error(Z.." Argument 'value' is nil.")end;local aa=table.getkey(Daneel.Config.objects,u)if aa==nil then aa=table.getkey(_G,u)end;Daneel.Debug.StackTrace.EndFunction()return aa end;function Daneel.Debug.CheckArgValue(V,W,ab,Y,a2)Daneel.Debug.StackTrace.BeginFunction("Daneel.Debug.CheckArgValue",V,W,ab,Y)local Z="Daneel.Debug.CheckArgValue(argument, argumentName, expectedArgumentValues[, p_errorHead, defaultValue]) : "Daneel.Debug.CheckArgType(W,"argumentName","string",Z)if ab==nil then error(Z.."Argument 'expectedArgumentValues' is nil.")end;Daneel.Debug.CheckOptionalArgType(Y,"p_errorHead","string",Z)if type(ab)~="table"then ab={ab}elseif#ab==0 then error(Z.."Argument 'expectedArgumentValues' is an empty table.")end;local ac=false;if type(V)=="string"then for n,ad in ipairs(ab)do if V:lower()==ad:lower()then V=ad;ac=true;break end end else for n,ad in ipairs(ab)do if V==ad then ac=true;break end end end;if not ac then if a2~=nil then V=a2 else for n,u in ipairs(ab)do ab[n]=tostring(u)end;error(Y.."The value '"..tostring(V).."' of argument '"..W.."' is not one of '"..table.concat(ab,"', '").."'.")end end;Daneel.Debug.StackTrace.EndFunction()return V end;local ae=Behavior;Daneel.Debug.tryGameObject=nil;function Daneel.Debug.Try(af)Daneel.Debug.StackTrace.BeginFunction("Daneel.Debug.Try",af)local Z="Daneel.Debug.Try( _function ) : "Daneel.Debug.CheckArgType(af,"_function",{"function","userdata"},Z)local ag=Daneel.Debug.tryGameObject;if ag==nil or ag.inner==nil then ag=CraftStudio.CreateGameObject("Daneel_Debug_Try")Daneel.Debug.tryGameObject=ag end;local ah=false;ag:CreateScriptedBehavior(ae,{debugTry=true,testFunction=af,successCallback=function()ah=true end})Daneel.Debug.StackTrace.EndFunction()return ah end;function Daneel.Debug.RegisterFunction(D,ai)if not Daneel.Config.debug.enableDebug then return end;local aj=true;if not Daneel.Config.debug.enableStackTrace then aj=false elseif ai.includeInStackTrace~=nil then aj=ai.includeInStackTrace end;local Z=D.."( "for n,ak in ipairs(ai)do if ak.name==nil then ak.name=ak[1]end;Z=Z..ak.name..", "end;Z=Z:sub(1,#Z-2)Z=Z.." ) : "local al=table.getvalue(_G,D)if al~=nil then local am=function(...)local an={...}if aj then Daneel.Debug.StackTrace.BeginFunction(D,...)end;for n,ak in ipairs(ai)do if ak.type==nil then ak.type=ak[2]if ak.type==nil and ak.defaultValue~=nil then ak.type=type(ak.defaultValue)end end;if ak.type~=nil then if ak.defaultValue~=nil or ak.isOptional==true then an[n]=Daneel.Debug.CheckOptionalArgType(an[n],ak.name,ak.type,Z,ak.defaultValue)else Daneel.Debug.CheckArgType(an[n],ak.name,ak.type,Z)end elseif an[n]==nil and not ak.isOptional then error(Z.."Argument '"..ak.name.."' is nil.")end;if ak.value~=nil then an[n]=Daneel.Debug.CheckArgValue(an[n],ak.name,ak.value,Z,ak.defaultValue)end end;local ao={al(unpack(an))}if aj then Daneel.Debug.StackTrace.EndFunction()end;return unpack(ao)end;table.setvalue(_G,D,am)else print("Daneel.Debug.RegisterFunction() : Function with name '"..D.."' was not found in the global table _G.")end end;Daneel.Debug.StackTrace={messages={}}function Daneel.Debug.StackTrace.BeginFunction(ap,...)if not Daneel.Config.debug.enableDebug or not Daneel.Config.debug.enableStackTrace then return end;if#Daneel.Debug.StackTrace.messages>200 then print("WARNING : your StackTrace is more than 200 items long ! Emptying the StackTrace now. Did you forget to write a 'EndFunction()' somewhere ?")Daneel.Debug.StackTrace.messages={}end;local Z="Daneel.Debug.StackTrace.BeginFunction( functionName[, ...] ) : "Daneel.Debug.CheckArgType(ap,"functionName","string",Z)local aq=ap.."( "local ak={...}if#ak>0 then for n,V in ipairs(ak)do if type(V)=="string"then aq=aq..'"'..tostring(V)..'", 'else aq=aq..tostring(V)..", "end end;aq=aq:sub(1,#aq-2)end;aq=aq.." )"table.insert(Daneel.Debug.StackTrace.messages,aq)end;function Daneel.Debug.StackTrace.EndFunction()if not Daneel.Config.debug.enableDebug or not Daneel.Config.debug.enableStackTrace then return end;table.remove(Daneel.Debug.StackTrace.messages)end;function Daneel.Debug.StackTrace.Print()if not Daneel.Config.debug.enableDebug or not Daneel.Config.debug.enableStackTrace then return end;local ar=Daneel.Debug.StackTrace.messages;Daneel.Debug.StackTrace.messages={}print("~~~~~ Daneel.Debug.StackTrace ~~~~~")if#ar<=0 then print("No message in the StackTrace.")else for n,aq in ipairs(ar)do if n<10 then n="0"..n end;print("#"..n.." "..aq)end end end;Daneel.Event={events={},persistentEvents={}}local as={}function Daneel.Event.Listen(at,au,av)local Z="Daneel.Event.Listen( eventName, functionOrObject[, isPersistent] ) : "local aw=type(au)local ax=at;if type(at)=="string"then ax={at}end;for n,at in pairs(ax)do if Daneel.Event.events[at]==nil then Daneel.Event.events[at]={}end;if Daneel.Event.persistentEvents[at]==nil then Daneel.Event.persistentEvents[at]={}end;if not table.containsvalue(Daneel.Event.events[at],au)and not table.containsvalue(Daneel.Event.persistentEvents[at],au)then if not as[at]then as[at]=true;local ay,ay,S=at:find("^On(.+)ButtonJustPressed$")if S==nil then ay,ay,S=at:find("^On(.+)ButtonJustReleased$")end;if S==nil then ay,ay,S=at:find("^On(.+)ButtonDown$")end;if S~=nil then if Daneel.Utilities.ButtonExists(S)then table.insert(Daneel.Config.hotKeys,S)elseif Daneel.Config.debug.enableDebug then print(Z.."You tried to listen to the '"..at.."' event but the '"..S.."' button does not exists in the Game Controls.")end end end;if av and aw=="table"then local a4=getmetatable(au)if a4~=nil and a4==GameObject or table.containsvalue(Daneel.Config.componentObjects,a4)then if Daneel.Config.debug.enableDebug then print(Z.."Game objects and components can't be persistent listeners",au)end;av=false end end;local az=Daneel.Event.events;if av then az=Daneel.Event.persistentEvents end;table.insert(az[at],au)end end end;function Daneel.Event.StopListen(at,au)if type(at)~="string"then au=at;at=nil end;Daneel.Debug.StackTrace.BeginFunction("Daneel.Event.StopListen",at,au)local Z="Daneel.Event.StopListen( eventName, functionOrObject ) : "Daneel.Debug.CheckOptionalArgType(at,"eventName","string",Z)Daneel.Debug.CheckArgType(au,"functionOrObject",{"table","function"},Z)local ax=at;if type(at)=="string"then ax={at}end;if ax==nil then ax=table.merge(table.getkeys(Daneel.Event.events),table.getkeys(Daneel.Event.persistentEvents))end;for n,at in pairs(ax)do local aA=Daneel.Event.events[at]if aA~=nil then table.removevalue(aA,au)end;aA=Daneel.Event.persistentEvents[at]if aA~=nil then table.removevalue(aA,au)end end;Daneel.Debug.StackTrace.EndFunction()end;function Daneel.Event.Fire(T,at,...)local ak={...}Daneel.Debug.StackTrace.BeginFunction("Daneel.Event.Fire",T,at,...)local Z="Daneel.Event.Fire( [object, ]eventName[, ...] ) : "local _=type(T)if _=="string"or _=="nil"then if at~=nil then table.insert(ak,1,at)end;at=T;T=nil else Daneel.Debug.CheckArgType(T,"object","table",Z)Daneel.Debug.CheckArgType(at,"eventName","string",Z)end;local aA={T}if T==nil then if Daneel.Event.events[at]~=nil then aA=Daneel.Event.events[at]end;if Daneel.Event.persistentEvents[at]~=nil then aA=table.merge(aA,Daneel.Event.persistentEvents[at])end end;local aB={}for n,aC in ipairs(aA)do local aw=type(aC)if aw=="function"or aw=="userdata"then if aC(unpack(ak))==false then table.insert(aB,aC)end else local a4=getmetatable(aC)local aD=not aC.isDestroyed;if a4==GameObject and aC.inner==nil then aD=false end;if aD then local a5=at;local aE=rawget(aC,at)local aF=type(aE)if aF=="function"or aF=="userdata"then if aE(unpack(ak))==false then table.insert(aB,aC)end elseif aF=="string"then a5=aE end;if a4==GameObject then aC:SendMessage(a5,ak)end end end end;if#aB>0 then for n,aC in pairs(aB)do Daneel.Event.StopListen(at,aC)end end;Daneel.Debug.StackTrace.EndFunction()end;function GameObject.On(ag,at,af)if not string.startswith(at,"On")then at="On"..at end;ag[at]=af;Daneel.Event.Listen(at,af)Daneel.Event.Fire("GameObject.On",ag,at,af)end;table.mergein(Daneel.functionsDebugInfo,{["Daneel.Event.Listen"]={{"eventName",{d,p}},{"functionOrObject",{p,z,A}},{"isPersistent",defaultValue=false}},["GameObject.On"]={{"gameObject","GameObject"},{"eventName",d},{"_function",z}}})Daneel.Time={realTime=0.0,realDeltaTime=0.0,time=0.0,deltaTime=0.0,timeScale=1.0,frameCount=0}Daneel.Storage={}function Daneel.Storage.Save(D,Q,aG)if Q~=nil and type(Q)~="table"then Q={value=Q,isSavedByDaneel=true}end;CS.Storage.Save(D,Q,function(error)if error~=nil then if Daneel.Config.debug.enableDebug then print("Daneel.Storage.Save( name, data[, callback] ) : Error saving with name, data and error : ",D,Q,error.message)end end;if aG~=nil then if error==nil then error={}end;aG(error.message)end end)end;function Daneel.Storage.Load(D,a2,aG)if aG==nil and type(a2)=="function"then aG=a2;a2=nil end;local u=nil;CS.Storage.Load(D,function(error,Q)if error~=nil then if Daneel.Config.debug.enableDebug then print("Daneel.Storage.Load( name[, defaultValue, callback] ) : Error loading with name, default value and error",D,a2,error.message)end;Q=nil end;u=a2;if Q~=nil then if type(Q)=="table"and Q.value~=nil and Q.isSavedByDaneel then u=Q.value else u=Q end end;if aG~=nil then if error==nil then error={}end;aG(u,error.message)end end)return u end;table.mergein(Daneel.functionsDebugInfo,{["Daneel.Storage.Save"]={{"name",d},{"data",isOptional=true},{"callback","function",isOptional=true}},["Daneel.Storage.Load"]={{"name",d},{"defaultValue",isOptional=true},{"callback","function",isOptional=true}}})function Daneel.DefaultConfig()local aH={debug={enableDebug=false,enableStackTrace=false},scriptPaths={},hotKeys={},objects={GameObject=GameObject,Vector3=Vector3,Quaternion=Quaternion,Plane=Plane,Ray=Ray},componentObjects={ScriptedBehavior=ScriptedBehavior,ModelRenderer=ModelRenderer,MapRenderer=MapRenderer,Camera=Camera,Transform=Transform,Physics=Physics,TextRenderer=TextRenderer,NetworkSync=NetworkSync},componentTypes={},assetObjects={Script=Script,Model=Model,ModelAnimation=ModelAnimation,Map=Map,TileSet=TileSet,Sound=Sound,Scene=Scene,Font=Font},assetTypes={}}return aH end;Daneel.Config=Daneel.DefaultConfig()function Daneel.SetComponents(aI)for aJ,aK in pairs(aI)do Daneel.Utilities.AllowDynamicGettersAndSetters(aK,{Component})if aJ~="ScriptedBehavior"then aK["__tostring"]=function(aL)return aJ..": "..aL:GetId()end end end end;function Daneel.Load()if Daneel.isLoaded then return end;Daneel.isLoading=true;local aM=Daneel.UserConfig;if type(aM)=="function"then aM=aM()end;if aM~=nil then table.mergein(Daneel.Config,aM,true)end;for n,D in ipairs(Daneel.modules.moduleNames)do local aN=Daneel.modules[D]if aN.isConfigLoaded~=true then aN.isConfigLoaded=true;if aN.Config==nil then local aH=aN.DefaultConfig;if type(aH)=="function"then aH=aH()end;if aH==nil then aH={}end;aN.Config=aH end;local aM=aN.UserConfig;if type(aM)=="function"then aM=aM()end;if aM~=nil then table.mergein(aN.Config,aM,true)end;if aN.Config.objects~=nil then table.mergein(Daneel.Config.objects,aN.Config.objects)end;if aN.Config.componentObjects~=nil then table.mergein(Daneel.Config.componentObjects,aN.Config.componentObjects)table.mergein(Daneel.Config.objects,aN.Config.componentObjects)end end end;table.mergein(Daneel.Config.objects,Daneel.Config.componentObjects,Daneel.Config.assetObjects)Daneel.SetComponents(Daneel.Config.componentObjects)table.mergein(Daneel.Config.componentTypes,table.getkeys(Daneel.Config.componentObjects))if Daneel.Config.debug.enableDebug then if Daneel.Config.debug.enableStackTrace then Daneel.Debug.SetNewError()end;for P,Q in pairs(Daneel.functionsDebugInfo)do Daneel.Debug.RegisterFunction(P,Q)end end;for aO,aP in pairs(Daneel.Config.assetObjects)do table.insert(Daneel.Config.assetTypes,aO)Daneel.Utilities.AllowDynamicGettersAndSetters(aP,{Asset})aP["__tostring"]=function(aQ)return aO..": "..Daneel.Utilities.GetId(aQ)..": '"..Map.GetPathInPackage(aQ).."'"end end;for aR,aS in pairs(Daneel.Config.scriptPaths)do local aT=CraftStudio.FindAsset(aS,"Script")if aT~=nil then Daneel.Utilities.AllowDynamicGettersAndSetters(aT,{Script,Component})aT["__tostring"]=function(aU)return"ScriptedBehavior: "..Daneel.Utilities.GetId(aU)..": '"..aS.."'"end else Daneel.Config.scriptPaths[aR]=nil;if Daneel.Config.debug.enableDebug then print("Daneel.Load() : item with key '"..aR.."' and value '"..aS.."' in 'Daneel.Config.scriptPaths' ('DaneelUserConfig()'') is not a valid script path.")end end end;CS.IsWebPlayer=type(Camera.ProjectionMode.Orthographic)=="number"Daneel.Debug.StackTrace.BeginFunction("Daneel.Load")for n,D in ipairs(Daneel.modules.moduleNames)do local aN=Daneel.modules[D]if aN.isLoaded~=true then aN.isLoaded=true;if type(aN.Load)=="function"then aN.Load()end end end;Daneel.isLoaded=true;Daneel.isLoading=false;if Daneel.Config.debug.enableDebug then print("~~~~~ Daneel loaded ~~~~~")end;Daneel.moduleUpdateFunctions={}for n,D in ipairs(Daneel.modules.moduleNames)do local aN=Daneel.modules[D]if aN.doNotCallUpdate~=true then if type(aN.Update)=="function"and not table.containsvalue(Daneel.moduleUpdateFunctions,aN.Update)then table.insert(Daneel.moduleUpdateFunctions,aN.Update)end end end;Daneel.Debug.StackTrace.EndFunction()end;function Behavior.Awake(aV)if aV.debugTry==true then CraftStudio.Destroy(aV)aV.testFunction()aV.successCallback()return end;if table.getvalue(_G,"LOAD_DANEEL")~=nil and LOAD_DANEEL==false then return end;if Daneel.isAwake then if Daneel.Config.debug.enableDebug then print("Daneel:Awake() : You tried to load Daneel twice ! This time the 'Daneel' scripted behavior was on "..tostring(aV.gameObject))end;CS.Destroy(aV)return end;Daneel.isAwake=true;Daneel.Event.Listen("OnSceneLoad",function()Daneel.isAwake=false end)Daneel.Load()Daneel.Debug.StackTrace.messages={}Daneel.Debug.StackTrace.BeginFunction("Daneel.Awake")for n,D in ipairs(Daneel.modules.moduleNames)do local aN=Daneel.modules[D]if type(aN.Awake)=="function"then aN.Awake()end end;if Daneel.Config.debug.enableDebug then print("~~~~~ Daneel awake ~~~~~")end;Daneel.Event.Fire("OnAwake")Daneel.Debug.StackTrace.EndFunction()end;function Behavior.Start(aV)if aV.debugTry then return end;Daneel.Debug.StackTrace.BeginFunction("Daneel.Start")for n,D in ipairs(Daneel.modules.moduleNames)do local aN=Daneel.modules[D]if type(aN.Start)=="function"then aN.Start()end end;if Daneel.Config.debug.enableDebug then print("~~~~~ Daneel started ~~~~~")end;Daneel.Event.Fire("OnStart")Daneel.Debug.StackTrace.EndFunction()end;function Behavior.Update(aV)if aV.debugTry then return end;local aW=os.clock()Daneel.Time.realDeltaTime=aW-Daneel.Time.realTime;Daneel.Time.realTime=aW;Daneel.Time.deltaTime=Daneel.Time.realDeltaTime*Daneel.Time.timeScale;Daneel.Time.time=Daneel.Time.time+Daneel.Time.deltaTime;Daneel.Time.frameCount=Daneel.Time.frameCount+1;for n,S in pairs(Daneel.Config.hotKeys)do if CraftStudio.Input.WasButtonJustPressed(S)then Daneel.Event.Fire("On"..S.."ButtonJustPressed")end;if CraftStudio.Input.IsButtonDown(S)then Daneel.Event.Fire("On"..S.."ButtonDown")end;if CraftStudio.Input.WasButtonJustReleased(S)then Daneel.Event.Fire("On"..S.."ButtonJustReleased")end end;for n,s in ipairs(Daneel.moduleUpdateFunctions)do s()end end
-- CraftStudio
local a="string"local b="boolean"local c="number"local d="table"local e="GameObject"local f="Vector2"local g="Vector3"local h={"params",d}setmetatable(Vector3,{__call=function(i,...)return i:New(...)end})setmetatable(Quaternion,{__call=function(i,...)return i:New(...)end})setmetatable(Plane,{__call=function(i,...)return i:New(...)end})Plane.__tostring=function(j)return"Plane: { normal="..tostring(j.normal)..", distance="..tostring(j.distance).." }"end;Asset={}Asset.__index=Asset;setmetatable(Asset,{__call=function(i,...)return i.Get(...)end})local k={"string"}function Asset.Get(l,m,n)local o="Asset.Get( assetPath[, assetType, errorIfAssetNotFound] ) : "if l==nil then if Daneel.Config.debug.enableDebug then error(o.."Argument 'assetPath' is nil.")end;return nil end;if#k==1 then k=table.merge(k,Daneel.Config.assetTypes)end;local p=Daneel.Debug.CheckArgType(l,"assetPath",k,o)if m~=nil then Daneel.Debug.CheckArgType(m,"assetType","string",o)m=Daneel.Debug.CheckArgValue(m,"assetType",Daneel.Config.assetTypes,o)end;if table.containsvalue(Daneel.Config.assetTypes,p)then if m~=nil and p~=m then error(o.."Provided asset '"..l.."' has a different type '"..p.."' than the provided 'assetType' argument '"..m.."'.")end;return l end;Daneel.Debug.CheckOptionalArgType(n,"errorIfAssetNotFound","boolean",o)local q=l;if Daneel.Config.scriptPaths[q]~=nil then l=Daneel.Config.scriptPaths[q]m="Script"end;local r=nil;if m==nil then r=CraftStudio.FindAsset(l)else r=CraftStudio.FindAsset(l,m)end;if r==nil and n then if m==nil then m="asset"end;error(o.."Argument 'assetPath' : "..m.." with name '"..l.."' was not found.")end;return r end;function Asset.GetPath(r)return Map.GetPathInPackage(r)end;function Asset.GetName(r)local s=rawget(r,"name")if s==nil then s=Asset.GetPath(r):gsub("^(.*/)","")rawset(r,"name",s)end;return s end;function Asset.GetId(r)return Daneel.Utilities.GetId(r)end;Component={}Component.__index=Component;function Component.Set(t,u)for v,w in pairs(u)do t[v]=w end end;function Component.Destroy(t)table.removevalue(t.gameObject,t)CraftStudio.Destroy(t)end;function Component.GetId(t)return Daneel.Utilities.GetId(t)end;table.mergein(Daneel.functionsDebugInfo,{["Asset.Get"]={{"assetPath"},{"assetType",isOptional=true},{"errorIfAssetNotFound",defaultValue=false}},["Asset.GetPath"]={{"asset",Daneel.Config.assetTypes}},["Asset.GetName"]={{"asset",Daneel.Config.assetTypes}},["Component.Set"]={{"component",Daneel.Config.componentTypes},{"params",defaultValue={}}},["Component.Destroy"]={{"component",Daneel.Config.componentTypes}}})Map.oGetPathInPackage=Map.GetPathInPackage;function Map.GetPathInPackage(r)local x=rawget(r,"path")if x==nil then x=Map.oGetPathInPackage(r)end;return x end;Map.oLoadFromPackage=Map.LoadFromPackage;function Map.LoadFromPackage(x,y)Map.oLoadFromPackage(x,function(z)if z~=nil then rawset(z,"path",x)z.isDynamicallyLoaded=true end;y(z)end)end;Transform.oSetLocalScale=Transform.SetLocalScale;function Transform.SetLocalScale(A,B)if type(B)=="number"then B=Vector3:New(B)end;Transform.oSetLocalScale(A,B)end;function Transform.SetScale(A,B)if type(B)=="number"then B=Vector3:New(B)end;local C=A.gameObject:GetParent()if C~=nil then B=B/C.transform:GetScale()end;A:SetLocalScale(B)end;function Transform.GetScale(A)local B=A:GetLocalScale()local C=A.gameObject:GetParent()if C~=nil then B=B*C.transform:GetScale()end;return B end;function Transform.WorldToLocal(A,D)local e=A.worldToLocalGO;if e==nil then e=CS.CreateGameObject("WorldToLocal",A.gameObject)A.worldToLocalGO=e end;e.transform:SetPosition(D)return e.transform:GetLocalPosition()end;function Transform.LocalToWorld(A,D)local e=A.worldToLocalGO;if e==nil then e=CS.CreateGameObject("WorldToLocal",A.gameObject)A.worldToLocalGO=e end;e.transform:SetLocalPosition(D)return e.transform:GetPosition()end;ModelRenderer.oSetModel=ModelRenderer.SetModel;function ModelRenderer.SetModel(E,F)local G=nil;if F~=nil then G=Asset.Get(F,"Model",true)end;ModelRenderer.oSetModel(E,G)end;ModelRenderer.oSetAnimation=ModelRenderer.SetAnimation;function ModelRenderer.SetAnimation(E,H)local I=nil;if H~=nil then I=Asset.Get(H,"ModelAnimation",true)end;ModelRenderer.oSetAnimation(E,I)end;function ModelRenderer.Set(E,u)if u.model~=nil then E:SetModel(u.model)u.model=nil end;if u.animationTime~=nil and u.animation~=nil then E:SetAnimation(u.animation)u.animation=nil end;Component.Set(E,u)end;MapRenderer.oSetMap=MapRenderer.SetMap;function MapRenderer.SetMap(J,K,L)local z=nil;if K~=nil then z=Asset.Get(K,"Map",true)end;if L~=nil then MapRenderer.oSetMap(J,z,L)else MapRenderer.oSetMap(J,z)end end;MapRenderer.oSetTileSet=MapRenderer.SetTileSet;function MapRenderer.SetTileSet(J,M)local N=nil;if M~=nil then N=Asset.Get(M,"TileSet",true)end;MapRenderer.oSetTileSet(J,N)end;function MapRenderer.Set(J,u)if u.map~=nil then J:SetMap(u.map)u.map=nil end;Component.Set(J,u)end;TextRenderer.oSetFont=TextRenderer.SetFont;function TextRenderer.SetFont(O,P)local Q=nil;if P~=nil then Q=Asset.Get(P,"Font",true)end;TextRenderer.oSetFont(O,Q)end;TextRenderer.oSetAlignment=TextRenderer.SetAlignment;function TextRenderer.SetAlignment(O,R)if type(R)=="string"then local S="Center"if Daneel.Config.textRenderer~=nil and Daneel.Config.textRenderer.alignment~=nil then S=Daneel.Config.textRenderer.alignment end;local o="TextRenderer.SetAlignment( textRenderer, alignment ) : "R=Daneel.Debug.CheckArgValue(R,"alignment",{"Left","Center","Right"},o,S)R=TextRenderer.Alignment[R]end;TextRenderer.oSetAlignment(O,R)end;function TextRenderer.SetTextWidth(O,T)local U=O:GetTextWidth()/O.gameObject.transform:GetScale()O.gameObject.transform:SetScale(T/U)end;Camera.oSetProjectionMode=Camera.SetProjectionMode;function Camera.SetProjectionMode(V,W)if type(W)=="string"then local S="Perspective"if Daneel.Config.camera~=nil and Daneel.Config.camera.projectionMode~=nil then S=Daneel.Config.camera.projectionMode end;W=Daneel.Debug.CheckArgValue(W,"projectionMode",{"Perspective","Orthographic"},"Camera.SetProjectionMode( camera[, projectionMode] ) : ",S)W=Camera.ProjectionMode[W]end;Camera.oSetProjectionMode(V,W)end;function Camera.Set(V,u)if u.projectionMode~=nil then V:SetProjectionMode(u.projectionMode)u.projectionMode=nil end;Component.Set(V,u)end;function Camera.GetPixelsToUnits(V)local X=CS.Screen.GetSize()local Y=X.y;if X.x<X.y then Y=X.x end;if V:GetProjectionMode()==Camera.ProjectionMode.Orthographic then return V:GetOrthographicScale()/Y else return math.tan(math.rad(V:GetFOV()/2))/Y*2 end end;function Camera.GetUnitsToPixels(V)local Z=V:GetPixelsToUnits()if Z~=nil and Z~=0 then return 1/Z end end;function Camera.GetBaseDistance(V)if V:GetProjectionMode()==Camera.ProjectionMode.Perspective then return 0.5/math.tan(math.rad(V:GetFOV()/2))end end;function Camera.IsPositionInFrustum(V,D)local _=V.gameObject.transform:WorldToLocal(D)if _.z<0 then local X=CS.Screen.GetSize()local a0=Vector2.New(0)if V:GetProjectionMode()==Camera.ProjectionMode.Orthographic then a0=X*V:GetPixelsToUnits()/2 else local Y=X.y;if X.x<X.y then Y=X.x end;a0=-_.z/V:GetBaseDistance()*X/Y;a0=a0/2 end;if _.x>=-a0.x and _.x<=a0.x and _.y>=-a0.y and _.y<=a0.y then return true end end;return false end;function Camera.WorldToScreenPoint(V,D)local _=V.gameObject.transform:WorldToLocal(D)local a1=V:GetUnitsToPixels()local X=CS.Screen.GetSize()if V:GetProjectionMode()==Camera.ProjectionMode.Orthographic then _.x=_.x*a1+X.x/2;_.y=-_.y*a1+X.y/2 else local a2=math.abs(_.z)_.x=_.x/a2*a1+X.x/2;_.y=-_.y/a2*a1+X.y/2 end;return _ end;Camera.oGetFOV=Camera.GetFOV;function Camera.GetFOV(V)return math.round(Camera.oGetFOV(V),2)end;Camera.GetFov=Camera.GetFOV;Camera.SetFov=Camera.SetFOV;Camera.oProject=Camera.Project;function Camera.Project(V,D)return setmetatable(Camera.oProject(V,D),Vector2)end;table.mergein(Daneel.functionsDebugInfo,{["Transform.SetLocalScale"]={{"transform","Transform"},{"number",{c,g}}},["Transform.SetScale"]={{"transform","Transform"},{"number",{c,g}}},["Transform.GetScale"]={{"transform","Transform"}},["Transform.WorldToLocal"]={{"transform","Transform"},{"position",g}},["Transform.LocalToWorld"]={{"transform","Transform"},{"position",g}},["ModelRenderer.SetModel"]={{"modelRenderer","ModelRenderer"},{"modelNameOrAsset",{a,"Model"},isOptional=true}},["ModelRenderer.SetAnimation"]={{"modelRenderer","ModelRenderer"},{"animationNameOrAsset",{a,"ModelAnimation"},isOptional=true}},["ModelRenderer.Set"]={{"modelRenderer","ModelRenderer"},h},["MapRenderer.SetMap"]={{"mapRenderer","MapRenderer"},{"mapNameOrAsset",{a,"Map"},isOptional=true},{"replaceTileSet",defaultValue=true}},["MapRenderer.SetTileSet"]={{"mapRenderer","MapRenderer"},{"tileSetNameOrAsset",{a,"TileSet"}}},["MapRenderer.Set"]={{"mapRenderer","MapRenderer"},h},["TextRenderer.SetFont"]={{"textRenderer","TextRenderer"},{"fontNameOrAsset",{a,"Font"}}},["TextRenderer.SetAlignment"]={{"textRenderer","TextRenderer"},{"alignment",{a,"userdata",c}}},["TextRenderer.SetTextWidth"]={{"textRenderer","TextRenderer"},{"width",c}},["Camera.SetProjectionMode"]={{"camera","Camera"},{"projectionMode",{a,"userdata",c}}},["Camera.Set"]={{"camera","Camera"},h},["Camera.GetPixelsToUnits"]={{"camera","Camera"}},["Camera.GetUnitsToPixels"]={{"camera","Camera"}},["Camera.GetBaseDistance"]={{"camera","Camera"}},["Camera.IsPositionInFrustum"]={{"camera","Camera"},{"position",g}},["Camera.WorldToScreenPoint"]={{"camera","Camera"},{"position",g}},["Camera.GetFOV"]={{"camera","Camera"}}})Vector2={}Vector2.__index=Vector2;setmetatable(Vector2,{__call=function(i,...)return i.New(...)end})Daneel.modules.Vector2={DefaultConfig={objects={Vector2=Vector2}}}function Vector2.__tostring(a3)return"Vector2: { x="..a3.x..", y="..a3.y.." }"end;function Vector2.New(a4,a5)local a6=setmetatable({x=a4,y=a5},Vector2)if type(a4)=="table"then a6.x=a4.x;a6.y=a4.y elseif a5==nil then a6.y=a4 end;return a6 end;function Vector2.GetLength(a6)return math.sqrt(a6.x^2+a6.y^2)end;function Vector2.GetSqrLength(a6)return a6.x^2+a6.y^2 end;function Vector2.Normalized(a6)return Vector2.New(a6.x,a6.y):Normalize()end;function Vector2.Normalize(a6)local a7=a6:GetLength()if a7~=0 then a6=a6/a7 end end;function Vector2.__add(a8,b)return Vector2.New(a8.x+b.x,a8.y+b.y)end;function Vector2.__sub(a8,b)return Vector2.New(a8.x-b.x,a8.y-b.y)end;function Vector2.__mul(a8,b)local a9=nil;if type(a8)=="number"then a9=Vector2.New(a8*b.x,a8*b.y)elseif type(b)=="number"then a9=Vector2.New(a8.x*b,a8.y*b)else a9=Vector2.New(a8.x*b.x,a8.y*b.y)end;return a9 end;function Vector2.__div(a8,b)local o="Vector2.__div(a, b) : "local a9=nil;if type(a8)=="number"then if b.x==0 or b.y==0 then error(o.."One of the components of the denominator is equal to 0. Can't divide by 0 !",a8,b)end;a9=Vector2.New(a8/b.x,a8/b.y)elseif type(b)=="number"then if b==0 then error(o.."The denominator is equal to 0 ! Can't divide by 0 !",a8,b)end;a9=Vector2.New(a8.x/b,a8.y/b)else if b.x==0 or b.y==0 then error(o.."One of the components of the denominator is equal to 0. Can't divide by 0 !",a8,b)end;a9=Vector2.New(a8.x/b.x,a8.y/b.y)end;return a9 end;function Vector2.__unm(a6)return Vector2.New(-a6.x,-a6.y)end;function Vector2.__pow(a6,aa)return Vector2.New(a6.x^aa,a6.y^aa)end;function Vector2.__eq(a8,b)return a8.x==b.x and a8.y==b.y end;Vector3.tostringRoundValue=3;Vector3.__tostring=function(a6)local ab=Vector3.tostringRoundValue;if ab~=nil and ab>=0 then return"Vector3: { x="..math.round(a6.x,ab)..", y="..math.round(a6.y,ab)..", z="..math.round(a6.z,ab).." }"else return"Vector3: { x="..a6.x..", y="..a6.y..", z="..a6.z.." }"end end;function Vector3.New(a4,a5,ac,ad)if a4==Vector3 then a4=a5;a5=ac;ac=ad end;if type(a4)=="table"then if a4.z==nil then a5=a4.y;a4=a4.x else a5=a4.y;ac=a4.z;a4=a4.x end elseif type(a5)=="table"then ac=a5.y;a5=a5.x end;a4=a4 or 0;a5=a5 or a4;ac=ac or a5;return setmetatable({x=a4,y=a5,z=ac},Vector3)end;function Vector3.GetLength(a6)return math.sqrt(a6.x^2+a6.y^2+a6.z^2)end;function Vector3.GetSqrLength(a6)return a6.x^2+a6.y^2+a6.z^2 end;table.mergein(Daneel.functionsDebugInfo,{["Vector2.New"]={{"x",{a,c,d,f}},{"y",{a,c},isOptional=true}},["Vector2.GetLength"]={{"vector",f}},["Vector2.GetSqrLength"]={{"vector",f}},["Vector2.Normalized"]={{"vector",f}},["Vector2.Normalize"]={{"vector",f}},["Vector2.__add"]={{"a",f},{"b",f}},["Vector2.__sub"]={{"a",f},{"b",f}},["Vector2.__mul"]={{"a",{c,f}},{"b",{c,f}}},["Vector2.__div"]={{"a",{c,f}},{"b",{c,f}}},["Vector2.__unm"]={{"vector",f}},["Vector2.__pow"]={{"vector",f},{"exp","number"}},["Vector2.__add"]={{"a",f},{"b",f}},["Vector3.GetLength"]={{"vector",g}},["Vector3.GetSqrLength"]={{"vector",g}}})CraftStudio.Input.oGetMousePosition=CraftStudio.Input.GetMousePosition;function CraftStudio.Input.GetMousePosition()return setmetatable(CraftStudio.Input.oGetMousePosition(),Vector2)end;CraftStudio.Input.oGetMouseDelta=CraftStudio.Input.GetMouseDelta;function CraftStudio.Input.GetMouseDelta()return setmetatable(CraftStudio.Input.oGetMouseDelta(),Vector2)end;CraftStudio.Screen.oGetSize=CraftStudio.Screen.GetSize;function CraftStudio.Screen.GetSize()return setmetatable(CraftStudio.Screen.oGetSize(),Vector2)end;RaycastHit={}RaycastHit.__index=RaycastHit;setmetatable(RaycastHit,{__call=function(i,...)return i.New(...)end})Daneel.Config.objects.RaycastHit=RaycastHit;function RaycastHit.__tostring(ae)local af="RaycastHit: { "local ag=true;for v,w in pairs(ae)do if ag then af=af..v.."="..tostring(w)ag=false else af=af..", "..v.."="..tostring(w)end end;return af.." }"end;Daneel.functionsDebugInfo["RaycastHit.New"]={{"params",defaultValue={}}}function RaycastHit.New(u)if u==nil then u={}end;return setmetatable(u,RaycastHit)end;setmetatable(Ray,{__call=function(i,...)return i:New(...)end})function Ray.Cast(ah,ai,aj)local ak={}for al,am in pairs(ai)do if am.inner~=nil then local an=ah:IntersectsGameObject(am)if an~=nil then table.insert(ak,an)end end end;if aj==true then ak=table.sortby(ak,"distance")end;return ak end;function Ray.IntersectsGameObject(ah,ao)local am=GameObject.Get(ao,true)local an=nil;if am.inner==nil then return nil end;local t=am.modelRenderer;if t~=nil then an=ah:IntersectsModelRenderer(t,true)end;if an==nil then t=am.mapRenderer;if t~=nil then an=ah:IntersectsMapRenderer(t,true)end end;if an==nil then t=am.textRenderer;if t~=nil then an=ah:IntersectsTextRenderer(t,true)end end;if an~=nil then an.gameObject=am end;return an end;Ray.oIntersectsPlane=Ray.IntersectsPlane;function Ray.IntersectsPlane(ah,ap,aq)local a2=Ray.oIntersectsPlane(ah,ap)if aq and a2~=nil then return RaycastHit.New({distance=a2,hitLocation=ah.position+ah.direction*a2,hitObject=ap})end;return a2 end;Ray.oIntersectsModelRenderer=Ray.IntersectsModelRenderer;function Ray.IntersectsModelRenderer(ah,E,aq)local a2,ar=Ray.oIntersectsModelRenderer(ah,E)if aq and a2~=nil then return RaycastHit.New({distance=a2,normal=ar,hitLocation=ah.position+ah.direction*a2,hitObject=E,gameObject=E.gameObject})end;return a2,ar end;Ray.oIntersectsMapRenderer=Ray.IntersectsMapRenderer;function Ray.IntersectsMapRenderer(ah,J,aq)local a2,ar,as,at=Ray.oIntersectsMapRenderer(ah,J)if as~=nil then setmetatable(as,Vector3)end;if at~=nil then setmetatable(at,Vector3)end;if aq and a2~=nil then return RaycastHit.New({distance=a2,normal=ar,hitBlockLocation=as,adjacentBlockLocation=at,hitLocation=ah.position+ah.direction*a2,hitObject=J,gameObject=J.gameObject})end;return a2,ar,as,at end;Ray.oIntersectsTextRenderer=Ray.IntersectsTextRenderer;function Ray.IntersectsTextRenderer(ah,O,aq)local a2,ar=Ray.oIntersectsTextRenderer(ah,O)if aq and a2~=nil then return RaycastHit.New({distance=a2,normal=ar,hitLocation=ah.position+ah.direction*a2,hitObject=O,gameObject=O.gameObject})end;return a2,ar end;function Scene.Load(au)CraftStudio.LoadScene(au)end;CraftStudio.oLoadScene=CraftStudio.LoadScene;function CraftStudio.LoadScene(au)local av=Asset.Get(au,"Scene",true)Daneel.Event.Fire("OnSceneLoad",av)Daneel.Event.events={}Scene.current=av;CraftStudio.oLoadScene(av)end;function Scene.Append(au,aw)local av=Asset.Get(au,"Scene",true)local C=nil;if aw~=nil then C=GameObject.Get(aw,true)end;return CraftStudio.AppendScene(av,C)end;CraftStudio.oDestroy=CraftStudio.Destroy;function CraftStudio.Destroy(ax)if type(ax)=="table"then Daneel.Event.Fire(ax,"OnDestroy",ax)Daneel.Event.StopListen(ax)ax.isDestroyed=true end;CraftStudio.oDestroy(ax)end;local ay={"ray","Ray"}local az={"returnRaycastHit",defaultValue=false}table.mergein(Daneel.functionsDebugInfo,{["Ray.Cast"]={ay,{"gameObjects",d},{"sortByDistance",defaultValue=false}},["Ray.IntersectsGameObject"]={ay,{"gameObjectNameOrInstance",{a,e}},az},["Ray.IntersectsPlane"]={ay,{"plane","Plane"},az},["Ray.IntersectsModelRenderer"]={ay,{"modelRenderer","ModelRenderer"},az},["Ray.IntersectsMapRenderer"]={ay,{"mapRenderer","MapRenderer"},az},["Ray.IntersectsTextRenderer"]={ay,{"textRenderer","TextRenderer"},az},["Scene.Load"]={{"sceneNameOrAsset",{a,"Scene"}}},["CraftStudio.LoadScene"]={{"sceneNameOrAsset",{a,"Scene"}}},["Scene.Append"]={{"sceneNameOrAsset",{a,"Scene"}},{"parentNameOrInstance",{a,e},isOptional=true}},["CraftStudio.Destroy"]={{"object"}}})CraftStudio.Input.isMouseLocked=false;CraftStudio.Input.oLockMouse=CraftStudio.Input.LockMouse;function CraftStudio.Input.LockMouse()CraftStudio.Input.isMouseLocked=true;CraftStudio.Input.oLockMouse()end;CraftStudio.Input.oUnlockMouse=CraftStudio.Input.UnlockMouse;function CraftStudio.Input.UnlockMouse()CraftStudio.Input.isMouseLocked=false;CraftStudio.Input.oUnlockMouse()end;function CraftStudio.Input.ToggleMouseLock()if CraftStudio.Input.isMouseLocked then CraftStudio.Input.UnlockMouse()else CraftStudio.Input.LockMouse()end end;setmetatable(GameObject,{__call=function(i,...)return i.New(...)end})function GameObject.__tostring(am)if rawget(am,"inner")==nil then return"Destroyed GameObject: "..tostring(am:GetId())..": '"..tostring(am._name).."': "..Daneel.Debug.ToRawString(am)end;return"GameObject: "..am:GetId()..": '"..am:GetName().."'"end;function GameObject.__index(am,v)if GameObject[v]~=nil then return GameObject[v]end;local x=Daneel.Config.scriptPaths[v]if x~=nil then local aA=am:GetScriptedBehavior(x)if aA~=nil then rawset(am,v,aA)return aA end end;if type(v)=="string"then local aB=string.ucfirst(v)if v~=aB then local aC="Get"..aB;if GameObject[aC]~=nil then return GameObject[aC](am)end end end;return nil end;function GameObject.__newindex(am,v,w)local aB=v;if type(v)=="string"then aB=string.ucfirst(v)end;if v~=aB and v~="transform"then local aC="Set"..aB;if GameObject[aC]~=nil then return GameObject[aC](am,w)end end;rawset(am,v,w)end;function GameObject.New(s,u)local am=nil;local av=Asset.Get(s,"Scene")if av~=nil then am=CraftStudio.AppendScene(av)else am=CraftStudio.CreateGameObject(s)end;if u~=nil and am~=nil then am:Set(u)end;return am end;function GameObject.Instantiate(aD,au,u)local av=Asset.Get(au,"Scene",true)local am=CraftStudio.Instantiate(aD,av)if u~=nil then am:Set(u)end;return am end;function GameObject.Set(am,u)local o="GameObject.Set( gameObject[, params] ) :"if u.parent~=nil then am:SetParent(u.parent)u.parent=nil end;if u.transform~=nil then am.transform:Set(u.transform)u.transform=nil end;for al,aE in pairs(Daneel.Config.componentTypes)do local t=nil;if aE~="ScriptedBehavior"then aE=aE:lower()local aF=nil;for v,w in pairs(u)do if v:lower()==aE then aF=w;Daneel.Debug.CheckArgType(aF,"params."..v,"table",o)break end end;if aF~=nil then for v,w in pairs(am)do if v:lower()==aE then t=w;break end end;if t==nil then t=am:GetComponent(aE)end;if t==nil then t=am:AddComponent(aE,aF)else t:Set(aF)end;table.removevalue(u,aF)end end end;for v,w in pairs(u)do if Daneel.Config.scriptPaths[v]~=nil or table.containsvalue(Daneel.Config.scriptPaths,v)then local aG=v;if Daneel.Config.scriptPaths[v]~=nil then aG=Daneel.Config.scriptPaths[v]end;local t=am:GetScriptedBehavior(aG)if t==nil then t=am:AddComponent(aG)end;t:Set(w)elseif v=="tags"then am:RemoveTag()am:AddTag(w)else am[v]=w end end end;function GameObject.Get(s,aH)if getmetatable(s)==GameObject then return s end;local o="GameObject.Get( name[, errorIfGameObjectNotFound] ) : "local am=nil;local aI=string.split(s,".")am=CraftStudio.FindGameObject(aI[1])if am==nil and aH==true then error(o.."GameObject with name '"..aI[1].."' (from '"..s.."') was not found.")end;if am~=nil then local aJ=s;local aK=table.remove(aI,1)for al,s in ipairs(aI)do am=am:GetChild(s)aK=aK.."."..s;if am==nil then if aH==true then error(o.."GameObject with name '"..aK.."' (from '"..aJ.."') was not found.")end;break end end end;return am end;function GameObject.GetId(am)return Daneel.Utilities.GetId(am)end;GameObject.oSetParent=GameObject.SetParent;function GameObject.SetParent(am,aw,aL)local C=nil;if aw~=nil then C=GameObject.Get(aw,true)end;if aL==nil then aL=false end;GameObject.oSetParent(am,C,aL)end;function GameObject.GetChild(am,s,aM)if aM==nil then aM=false end;local aN=nil;if s==nil then local aO=am:GetChildren()aN=aO[1]else local aI=string.split(s,".")for al,s in ipairs(aI)do am=am:FindChild(s,aM)if am==nil then break end end;aN=am end;return aN end;GameObject.oGetChildren=GameObject.GetChildren;function GameObject.GetChildren(am,aM,aP)local aQ=GameObject.oGetChildren(am)if aM then for al,aN in ipairs(table.copy(aQ))do aQ=table.merge(aQ,aN:GetChildren(true))end end;if aP then table.insert(aQ,1,am)end;return aQ end;function GameObject.GetChildrenByName(am,aM,aP)local aR=am:GetChildren(aM,aP)local aS={}for al=1,#aR do local aN=aR[al]aS[aN:GetName()]=aN end;return aS end;GameObject.oSendMessage=GameObject.SendMessage;function GameObject.GetInAncestors(am,aT)local C=am:GetParent()if C==nil then return end;if aT(C)==true then return C end;return C:GetInAncestors(aT)end;function GameObject.SendMessage(am,aU,aV)if Daneel.Config.debug.enableDebug then local aW=Daneel.Debug.Try(function()GameObject.oSendMessage(am,aU,aV)end)if not aW then local aX="No data"local a7=0;if aV~=nil then a7=table.getlength(aV)aX="Data with "..a7 .." entries"end;print("GameObject.SendMessage( gameObject, functionName[, data] ) : Error sending message with parameters : ",am,aU,aX)if a7>0 then table.print(aV)end end else GameObject.oSendMessage(am,aU,aV)end end;function GameObject.BroadcastMessage(am,aU,aV)local aY=am:GetChildren(true,true)for al,e in ipairs(aY)do e:SendMessage(aU,aV)end end;function GameObject.AddComponent(am,aE,u)local o="GameObject.AddComponent( gameObject, componentType[, params] ) : "aE=Daneel.Debug.CheckArgValue(aE,"componentType",Daneel.Config.componentTypes,o,aE)local t=nil;if Daneel.Config.componentObjects[aE]==nil then local aZ=Asset.Get(aE,"Script")if aZ==nil then if Daneel.Config.debug.enableDebug then error(o.."Provided component type '"..tostring(aE).."' in not one of the component types, nor a script asset, path or alias.")end;return end;if u==nil then u={}end;t=am:CreateScriptedBehavior(aZ,u)u=nil elseif Daneel.DefaultConfig().componentObjects[aE]~=nil then if aE=="Transform"then if Daneel.Config.debug.enableDebug then print(o.."Can't add a transform component because gameObjects may only have one transform.")end;return elseif aE=="ScriptedBehavior"then if Daneel.Config.debug.enableDebug then print(o.."To add a scripted behavior, pass the script asset, path or alias instead of 'ScriptedBehavior' as argument 'componentType'.")end;return end;t=am:CreateComponent(aE)local a_=Daneel.Config[string.lcfirst(aE)]if a_~=nil then u=table.merge(a_,u)end;if u~=nil then t:Set(u)end else local b0=Daneel.Config.componentObjects[aE]if b0~=nil and type(b0.New)=="function"then t=b0.New(am,u)else if Daneel.Config.debug.enableDebug then error(o.."Custom component of type '"..aE.."' does not provide a New() function; Can't create the component.")end;return end end;Daneel.Event.Fire(am,"OnNewComponent",t)return t end;GameObject.oGetComponent=GameObject.GetComponent;GameObject.oGetScriptedBehavior=GameObject.GetScriptedBehavior;function GameObject.GetComponent(am,aE)local o="GameObject.GetComponent( gameObject, componentType ) : "aE=Daneel.Debug.CheckArgValue(aE,"componentType",Daneel.Config.componentTypes,o,aE)local b1=aE;if type(aE)=="string"then b1=string.lcfirst(aE)end;local t=nil;if b1~="scriptedBehavior"then t=am[b1]end;if t==nil then if Daneel.DefaultConfig().componentObjects[aE]~=nil then t=GameObject.oGetComponent(am,aE)elseif Daneel.Config.componentObjects[aE]==nil then local aZ=Asset.Get(aE,"Script",true)t=GameObject.oGetScriptedBehavior(am,aZ)end end;return t end;function GameObject.GetScriptedBehavior(am,b2)local aZ=Asset.Get(b2,"Script",true)return GameObject.oGetScriptedBehavior(am,aZ)end;function GameObject.Destroy(am)for al,e in pairs(am:GetChildren(true,true))do e:RemoveTag()end;for v,w in pairs(am)do if v~="inner"and type(w)=="table"then Daneel.Event.Fire(w,"OnDestroy",w)end end;am._name=am:GetName()CraftStudio.Destroy(am)end;GameObject.Tags={}function GameObject.GetWithTag(b3)local b4=b3;if type(b4)=="string"then b4={b4}end;local b5={}local b6=false;for al,b3 in pairs(b4)do local ai=GameObject.Tags[b3]if ai~=nil then for b7,am in pairs(ai)do if am.inner~=nil then if am:HasTag(b4)and not table.containsvalue(b5,am)then table.insert(b5,am)end else ai[b7]=nil;b6=true end end;if b6 then GameObject.Tags[b3]=table.reindex(ai)b6=false end end end;return b5 end;function GameObject.GetTags(am)local b4={}for b3,ai in pairs(GameObject.Tags)do if table.containsvalue(ai,am)then table.insert(b4,b3)end end;return b4 end;function GameObject.AddTag(am,b3)local b4=b3;if type(b4)=="string"then b4={b4}end;for al,b3 in pairs(b4)do if GameObject.Tags[b3]==nil then GameObject.Tags[b3]={am}elseif not table.containsvalue(GameObject.Tags[b3],am)then table.insert(GameObject.Tags[b3],am)end end end;function GameObject.RemoveTag(am,b3)local b4=b3;if type(b4)=="string"then b4={b4}end;for b3,ai in pairs(GameObject.Tags)do if b4==nil or table.containsvalue(b4,b3)then table.removevalue(GameObject.Tags[b3],am)end end end;function GameObject.HasTag(am,b3,b8)local b4=b3;if type(b4)=="string"then b4={b4}end;local b9=false;if b8==true then for al,b3 in pairs(b4)do if GameObject.Tags[b3]~=nil and table.containsvalue(GameObject.Tags[b3],am)then b9=true;break end end else b9=true;for al,b3 in pairs(b4)do if GameObject.Tags[b3]==nil or not table.containsvalue(GameObject.Tags[b3],am)then b9=false;break end end end;return b9 end;local ba={"tag",{"string","table"}}local bb={"gameObject","GameObject"}table.mergein(Daneel.functionsDebugInfo,{["GameObject.New"]={{"name",{a,"Scene"}},{"params",d,isOptional=true}},["GameObject.Instantiate"]={{"name",a},{"sceneNameOrAsset",{a,"Scene"}},{"params",d,isOptional=true}},["GameObject.Set"]={bb,h},["GameObject.Get"]={{"name",{a,"GameObject"}},{"errorIfGameObjectNotFound",defaultValue=false}},["GameObject.Destroy"]={bb},["GameObject.SetParent"]={bb,{"parentNameOrInstance",{a,"GameObject"},isOptional=true},{"keepLocalTransform",defaultValue=false}},["GameObject.GetChild"]={bb,{"name",a,isOptional=true},{"recursive",defaultValue=false}},["GameObject.GetChildren"]={bb,{"recursive",defaultValue=false},{"includeSelf",defaultValue=false}},["GameObject.GetChildrenByName"]={bb,{"recursive",defaultValue=false},{"includeSelf",defaultValue=false}},["GameObject.GetInAncestors"]={bb,{"searchFunction","function"}},["GameObject.SendMessage"]={bb,{"functionName",a},{"data",d,isOptional=true}},["GameObject.BroadcastMessage"]={bb,{"functionName",a},{"data",d,isOptional=true}},["GameObject.AddComponent"]={bb,{"componentType",{a,"Script"}},{"params",d,isOptional=true}},["GameObject.GetComponent"]={bb,{"componentType",{a,"Script"}}},["GameObject.GetScriptedBehavior"]={bb,{"scriptNameOrAsset",{a,"Script"}}},["GameObject.GetWithTag"]={ba},["GameObject.GetTags"]={bb},["GameObject.AddTag"]={bb,ba},["GameObject.RemoveTag"]={bb,{"tag",{"string","table"},isOptional=true}},["GameObject.HasTag"]={bb,ba,{"atLeastOneTag",defaultValue=false}}})Daneel.modules.Tags={Awake=function()GameObject.Tags={}end}
-- GUI/GUI
GUI={}local a="string"local b="boolean"local c="number"local d="table"local e="GameObject"local f="Vector2"local g="Vector3"local h={"gameObject",e}local i={"params",d,defaultValue={}}local j={"params",d}function GUI.ToSceneUnit(k,l)if type(k)=="string"then k=k:trim()if k:find("px")then if l~=nil and getmetatable(l)==GameObject then l=l.camera end;if l==nil then error("GUI.ToSceneUnit(value, camera) : Can't convert the value '"..k.."' from pixels to scene units because no camera component has been passed as argument.")end;k=tonumber(k:sub(0,#k-2))*l:GetPixelsToUnits()elseif k:find("u")then k=tonumber(k:sub(0,#k-1))else k=tonumber(k)end end;return k end;function GUI.ToPixel(k,m,l)if type(k)=="string"then if type(m)=="table"then l=m;m=nil end;k=k:trim()local n=CS.Screen.GetSize()if k:find("px")then k=tonumber(k:sub(0,#k-2))elseif k:find("%",1,true)and m~=nil then k=n[m]*tonumber(k:sub(0,#k-1))/100 elseif k:find("s")and m~=nil then k=k:sub(2)if k==""then k=0 end;k=n[m]+tonumber(k)elseif k:find("u")then if l==nil then error("GUI.ToPixel(value, camera) : Can't convert the value '"..k.."' from pixels to scene units because no camera component has been passed as argument.")end;k=tonumber(k:sub(0,#k-1))/l:GetPixelsToUnits()else k=tonumber(k)end end;return k end;local function o(p,q)local r=p:GetInAncestors(function(e)if e.camera~=nil then return true end end)if r==nil and q~=nil then error(q..": The "..tostring(p).." isn't a child of a game object with a camera component and no camera game object is passed via the 'params' argument.")end;return r end;GUI.Hud={}GUI.Hud.__index=GUI.Hud;function GUI.Hud.CreateOriginGO(p)if p.camera==nil then error("GUI.Hud.CreateOriginGO(): Provided game object "..tostring(p).." has no camera component.")end;local s=p.camera:GetPixelsToUnits()local n=CS.Screen.GetSize()local t=CS.CreateGameObject("Hud Origin for camera "..p:GetName(),p)t.transform:SetLocalPosition(Vector3:New(-n.x*s/2,n.y*s/2,0))p.hudOriginGO=t end;function GUI.Hud.ToHudPosition()error("GUI.Hud.ToHudPosition() is deprecated since v1.5.0. Use Camera.WorldToScreenPoint() or Camera.Project() instead.")end;function Vector2.EnsureNumberPixel(u,l)u.x=GUI.ToPixel(u.x,"x",l)u.y=GUI.ToPixel(u.y,"y",l)return u end;function GUI.Hud.New(p,v)local w=setmetatable({},GUI.Hud)w.gameObject=p;p.hud=w;w.id=Daneel.Utilities.GetId()v=v or{}w.cameraGO=v.cameraGO or o(p,"GUI.Hud.New()")if w.cameraGO.hudOriginGO==nil then GUI.Hud.CreateOriginGO(w.cameraGO)end;w:Set(table.merge(GUI.Config.hud,v))return w end;function GUI.Hud.SetPosition(w,x)x:EnsureNumberPixel(w.cameraGO.camera)local y=w.cameraGO.hudOriginGO.transform:GetPosition()+Vector3:New(x.x*w.cameraGO.camera:GetPixelsToUnits(),-x.y*w.cameraGO.camera:GetPixelsToUnits(),0)y.z=w.gameObject.transform:GetPosition().z;w.gameObject.transform:SetPosition(y)end;function GUI.Hud.GetPosition(w)local x=w.gameObject.transform:GetPosition()-w.cameraGO.hudOriginGO.transform:GetPosition()x=x/w.cameraGO.camera:GetPixelsToUnits()return Vector2.New(math.round(x.x),math.round(-x.y))end;function GUI.Hud.SetLocalPosition(w,x)x:EnsureNumberPixel(w.cameraGO.camera)local z=w.gameObject.parent or w.cameraGO.hudOriginGO;local y=z.transform:GetPosition()+Vector3:New(x.x*w.cameraGO.camera:GetPixelsToUnits(),-x.y*w.cameraGO.camera:GetPixelsToUnits(),0)y.z=w.gameObject.transform:GetPosition().z;w.gameObject.transform:SetPosition(y)end;function GUI.Hud.GetLocalPosition(w)local z=w.gameObject.parent or w.cameraGO.hudOriginGO;local x=w.gameObject.transform:GetPosition()-z.transform:GetPosition()x=x/w.cameraGO.camera:GetPixelsToUnits()return Vector2.New(math.round(x.x),math.round(-x.y))end;function GUI.Hud.SetLayer(w,A)local B=w.cameraGO.hudOriginGO.transform:GetPosition().z;local C=w.gameObject.transform:GetPosition()w.gameObject.transform:SetPosition(Vector3:New(C.x,C.y,B-A))end;function GUI.Hud.GetLayer(w)local B=w.cameraGO.hudOriginGO.transform:GetPosition().z;return math.round(B-w.gameObject.transform:GetPosition().z,1)end;function GUI.Hud.SetLocalLayer(w,A)local z=w.gameObject.parent or w.cameraGO.hudOriginGO;local B=z.transform:GetPosition().z;local C=w.gameObject.transform:GetPosition()w.gameObject.transform:SetPosition(Vector3:New(C.x,C.y,B-A))end;function GUI.Hud.GetLocalLayer(w)local z=w.gameObject.parent or w.cameraGO.hudOriginGO;local B=z.transform:GetPosition().z;return math.round(B-w.gameObject.transform:GetPosition().z,1)end;local D={"hud","Hud"}table.mergein(Daneel.functionsDebugInfo,{["GUI.Hud.CreateOriginGO"]={h},["GUI.Hud.New"]={h,i},["GUI.Hud.SetPosition"]={D,{"position",f}},["GUI.Hud.GetPosition"]={D},["GUI.Hud.SetLocalPosition"]={D,{"position",f}},["GUI.Hud.GetLocalPosition"]={D},["GUI.Hud.SetLayer"]={D,{"layer",c}},["GUI.Hud.GetLayer"]={D},["GUI.Hud.SetLocalLayer"]={D,{"layer",c}},["GUI.Hud.GetLocalLayer"]={D}})GUI.Toggle={}GUI.Toggle.__index=GUI.Toggle;function GUI.Toggle.New(p,v)if Daneel.modules.MouseInput==nil then error("GUI.Toggle.New(): The 'Mouse Input' module is missing from your project. It is required for the player to interact with the GUI.Toggle, GUI.Input and GUI.Slider components.")end;local E=table.copy(GUI.Config.toggle)E.defaultText=E.text;E.text=nil;E.gameObject=p;E.id=Daneel.Utilities.GetId()setmetatable(E,GUI.Toggle)if v~=nil then E:Set(v)end;p.toggle=E;p:AddTag("guiComponent")p.OnNewComponent=function(F)if F==nil then return end;local G=getmetatable(F)if G==TextRenderer then local H=F:GetText()if H==nil then H=E.defaultText end;E:SetText(H)elseif G==ModelRenderer and E.checkedModel~=nil then if E.isChecked and E.checkedModel~=nil then F:SetModel(E.checkedModel)elseif not E.isChecked and E.uncheckedModel~=nil then F:SetModel(E.uncheckedModel)end end end;p.OnClick=function()if not(E.group~=nil and E.isChecked)then E:Check(not E.isChecked)end end;if p.textRenderer~=nil and p.textRenderer:GetText()~=nil then E:SetText(p.textRenderer:GetText())end;if p.modelRenderer~=nil then if E.isChecked and E.checkedModel~=nil then E.gameObject.modelRenderer:SetModel(E.checkedModel)elseif not E.isChecked and E.uncheckedModel~=nil then E.gameObject.modelRenderer:SetModel(E.uncheckedModel)end end;E:Check(E.isChecked,true)return E end;function GUI.Toggle.SetText(E,H)if E.gameObject.textRenderer~=nil then if E.isChecked==true then H=Daneel.Utilities.ReplaceInString(E.checkedMark,{text=H})else H=Daneel.Utilities.ReplaceInString(E.uncheckedMark,{text=H})end;E.gameObject.textRenderer:SetText(H)else if Daneel.Config.debug.enableDebug then print("WARNING: GUI.Toggle.SetText(toggle, text): Can't set the toggle's text because no TextRenderer component has been found on the gameObject '"..tostring(E.gameObject).."'. Waiting for a TextRenderer to be added.")end;E.defaultText=H end end;function GUI.Toggle.GetText(E)local H=nil;if E.gameObject.textRenderer~=nil then H=E.gameObject.textRenderer:GetText()if H==nil then H=E.defaultText end;local I=E.checkedMark;if not E.isChecked then I=E.uncheckedMark end;local J,K=I:find(":text")if J~=nil and K~=nil then local L=I:sub(1,J-1)local M=I:sub(K+1)H=H:gsub(L,""):gsub(M,"")end elseif Daneel.Config.debug.enableDebug then print("WARNING: GUI.Toggle.GetText(toggle): Can't get the toggle's text because no TextRenderer component has been found on the gameObject '"..tostring(E.gameObject).."'. Returning nil.")end;return H end;function GUI.Toggle.Check(E,N,O)if N==nil then N=true end;if O==true or E.isChecked~=N then local H=nil;if E.gameObject.textRenderer~=nil then H=E:GetText()end;E.isChecked=N;if E.gameObject.textRenderer~=nil then E:SetText(H)end;if E.gameObject.modelRenderer~=nil then if N==true and E.checkedModel~=nil then E.gameObject.modelRenderer:SetModel(E.checkedModel)elseif N==false and E.uncheckedModel~=nil then E.gameObject.modelRenderer:SetModel(E.uncheckedModel)end end;Daneel.Event.Fire(E,"OnUpdate",E)if E.Group~=nil and N==true then local P=GameObject.GetWithTag(E.Group)for Q,p in ipairs(P)do if p~=E.gameObject then p.toggle:Check(false,true)end end end end end;function GUI.Toggle.SetGroup(E,R)if R==nil and E.Group~=nil then E.gameObject:RemoveTag(E.Group)else if E.Group~=nil then E.gameObject:RemoveTag(E.Group)end;E:Check(false)E.Group=R;E.gameObject:AddTag(E.Group)end end;function GUI.Toggle.GetGroup(E)return E.Group end;function GUI.Toggle.Set(E,v)local R=v.group;v.group=nil;local S=v.isChecked;v.isChecked=nil;for T,k in pairs(v)do E[T]=k end;if R~=nil then E:SetGroup(R)end;if S~=nil then E:Check(S)end end;local U={"toggle","Toggle"}table.mergein(Daneel.functionsDebugInfo,{["GUI.Toggle.New"]={h,i},["GUI.Toggle.Set"]={U,j},["GUI.Toggle.SetText"]={U,{"text",a}},["GUI.Toggle.GetText"]={U},["GUI.Toggle.Check"]={U,{"state",defaultValue=true},{"forceUpdate",defaultValue=false}},["GUI.Toggle.SetGroup"]={U,{"group",a,isOptional=true}},["GUI.Toggle.GetGroup"]={U}})GUI.ProgressBar={}GUI.ProgressBar.__index=GUI.ProgressBar;function GUI.ProgressBar.New(p,v)local V=table.copy(GUI.Config.progressBar)V.gameObject=p;V.id=Daneel.Utilities.GetId()V.value=nil;setmetatable(V,GUI.ProgressBar)v=v or{}if v.value==nil then v.value=GUI.Config.progressBar.value end;V.cameraGO=v.cameraGO or o(p)V:Set(v)p.progressBar=V;return V end;function GUI.ProgressBar.SetValue(V,k)local q="GUI.ProgressBar.SetValue(progressBar, value) : "local W=V.minValue;local X=V.maxValue;local Y=nil;if type(k)=="string"then if k:endswith("%")then Y=tonumber(k:sub(1,#k-1))/100;local Z=Y;Y=math.clamp(Y,0.0,1.0)if Y~=Z and Daneel.Config.debug.enableDebug then print(q.."WARNING : value in percentage with value '"..k.."' is below 0% or above 100%.")end;k=(X-W)*Y+W else k=tonumber(k)end end;local _=k;k=math.clamp(k,W,X)V.minLength=GUI.ToSceneUnit(V.minLength,V.cameraGO)V.maxLength=GUI.ToSceneUnit(V.maxLength,V.cameraGO)local a0=V:GetValue()if k~=a0 then if k~=_ and Daneel.Config.debug.enableDebug then print(q.." WARNING : value with value '".._.."' is out of its boundaries : min='"..W.."', max='"..X.."'")end;local a1=X-W;Y=(k-W)/a1;V.height=GUI.ToSceneUnit(V.height,V.cameraGO)local a2=(V.maxLength-V.minLength)*Y+V.minLength;local a3=V.gameObject.transform:GetLocalScale()V.gameObject.transform:SetLocalScale(Vector3:New(a2,V.height,a3.z))Daneel.Event.Fire(V,"OnUpdate",V)end end;GUI.ProgressBar.SetProgress=GUI.ProgressBar.SetValue;function GUI.ProgressBar.UpdateValue(V,k,a4)if k==V._value then return end;V._value=k;local W=V.minValue;local X=V.maxValue;local a5=V.minLength;local Y=nil;if type(k)=="string"then local a6=k;k=tonumber(k)if k==nil then Y=tonumber(a6:sub(1,#a6-1))/100 end end;if Y==nil then local a1=X-W;Y=(k-W)/a1 end;Y=math.clamp(Y,0.0,1.0)local a2=(V.maxLength-a5)*Y+a5;local a3=V.gameObject.transform:GetLocalScale()V.gameObject.transform:SetLocalScale(Vector3:New(a2,V.height,a3.z))if a4==true then Daneel.Event.Fire(V,"OnUpdate",V)end end;GUI.ProgressBar.UpdateProgress=GUI.ProgressBar.UpdateValue;function GUI.ProgressBar.GetValue(V,a7)local a8=math.round(V.gameObject.transform:GetLocalScale().x,2)local a1=V.maxLength-V.minLength;local k=(a8-V.minLength)/a1;if a7==true then k=k*100 else k=(V.maxValue-V.minValue)*k+V.minValue end;return k end;GUI.ProgressBar.GetProgress=GUI.ProgressBar.GetValue;function GUI.ProgressBar.SetHeight(V,a9)local a3=V.gameObject.transform:GetLocalScale()local a9=GUI.ToSceneUnit(a9,V.cameraGO)V.gameObject.transform:SetLocalScale(Vector3:New(a3.x,a9,a3.z))end;function GUI.ProgressBar.GetHeight(V)return V.gameObject.transform:GetLocalScale().y end;function GUI.ProgressBar.Set(V,v)local k=v.value;v.value=nil;if k==nil then k=V:GetValue()end;for T,k in pairs(v)do V[T]=k end;V:SetValue(k)end;local aa={"progressBar","ProgressBar"}table.mergein(Daneel.functionsDebugInfo,{["GUI.ProgressBar.New"]={h,i},["GUI.ProgressBar.Set"]={aa,j},["GUI.ProgressBar.SetValue"]={aa,{"value",{a,c}}},["GUI.ProgressBar.GetValue"]={aa,{"getAsPercentage",defaultValue=false}},["GUI.ProgressBar.SetHeight"]={aa,{"height",{a,c}}},["GUI.ProgressBar.GetHeight"]={aa}})GUI.Slider={}GUI.Slider.__index=GUI.Slider;function GUI.Slider.New(p,v)if Daneel.modules.MouseInput==nil then error("GUI.Slider.New(): The 'Mouse Input' module is missing from your project. It is required for the player to interact with the GUI.Toggle, GUI.Input and GUI.Slider components.")end;local ab=table.copy(GUI.Config.slider)ab.gameObject=p;ab.id=Daneel.Utilities.GetId()ab.value=nil;ab.parent=ab.gameObject:GetParent()if ab.parent==nil then local e=CS.CreateGameObject("SliderParent")e.transform:SetPosition(ab.gameObject.transform:GetPosition())ab.gameObject:SetParent(e)end;setmetatable(ab,GUI.Slider)p.slider=ab;p:AddTag("guiComponent")p.OnDrag=function()local ac=CraftStudio.Input.GetMouseDelta()local ad=Vector3:New(ac.x,0,0)if ab.axis=="y"then ad=Vector3:New(0,-ac.y,0,0)end;p.transform:Move(ad*ab.cameraGO.camera:GetPixelsToUnits())local ae=p.transform:GetPosition()local af=ab.parent.transform:GetPosition()if ab.axis=="x"and ae.x<af.x then ab:SetValue(ab.minValue)elseif ab.axis=="y"and ae.y<af.y then ab:SetValue(ab.minValue)elseif ab:GetValue()>ab.maxValue then ab:SetValue(ab.maxValue)else Daneel.Event.Fire(ab,"OnUpdate",ab)end end;v=v or{}ab.cameraGO=v.cameraGO or o(p,"GUI.Slider.New()")if v.value==nil then v.value=GUI.Config.slider.value end;ab:Set(v)return ab end;function GUI.Slider.SetValue(ab,k)local q="GUI.Slider.SetValue( slider, value ) : "local X=ab.maxValue;local W=ab.minValue;local ag=nil;if type(k)=="string"then if k:endswith("%")then ag=tonumber(k:sub(1,#k-1))/100;k=(X-W)*ag+W else k=tonumber(k)end end;local _=k;k=math.clamp(k,W,X)if k~=_ and Daneel.Config.debug.enableDebug then print(q.."WARNING : Argument 'value' with value '".._.."' is out of its boundaries : min='"..W.."', max='"..X.."'")end;local a1=X-W;ag=(k-W)/a1;ab.length=GUI.ToSceneUnit(ab.length,ab.cameraGO)local ah=-Vector3:Left()if ab.axis=="y"then ah=Vector3:Up()end;local ai=Vector3.Rotate(ah,ab.gameObject.transform:GetOrientation())local y=ab.parent.transform:GetPosition()+ai*ab.length*ag;ab.gameObject.transform:SetPosition(y)Daneel.Event.Fire(ab,"OnUpdate",ab)end;function GUI.Slider.GetValue(ab,a7)local ag=Vector3.Distance(ab.parent.transform:GetPosition(),ab.gameObject.transform:GetPosition())/ab.length;local k=ag*100;if a7~=true then k=(ab.maxValue-ab.minValue)*ag+ab.minValue end;return k end;function GUI.Slider.Set(ab,v)local k=v.value;v.value=nil;if k==nil then k=ab:GetValue()end;for T,k in pairs(v)do ab[T]=k end;ab:SetValue(k)end;GUI.Input={}GUI.Input.__index=GUI.Input;function GUI.Input.New(p,v)if Daneel.modules.MouseInput==nil then error("GUI.Input.New(): The 'Mouse Input' module is missing from your project. It is required for the player to interact with the GUI.Toggle, GUI.Input and GUI.Slider components.")end;v=v or{}local aj=table.merge(GUI.Config.input,v)aj.gameObject=p;aj.id=Daneel.Utilities.GetId()setmetatable(aj,GUI.Input)if aj.OnTextEntered==nil then aj.OnTextEntered=function(ak)if aj.isFocused then local al=string.byte(ak)if al==8 then local H=p.textRenderer:GetText()aj:Update(H:sub(1,#H-1),true)elseif al>=32 and al<=127 then if aj.characterRange~=nil and aj.characterRange:find(ak,1,true)==nil then return end;aj:Update(ak)end end end end;local am=p:GetChild("Cursor")if am~=nil then aj.cursorGO=am;am.tweener=Tween.Timer(aj.cursorBlinkInterval,function(an)if an.gameObject==nil or an.gameObject.inner==nil then an:Destroy()return end;local ao=1;if an.gameObject.modelRenderer:GetOpacity()==1 then ao=0 end;an.gameObject.modelRenderer:SetOpacity(ao)end,true)am.tweener.isPaused=true;am.tweener.gameObject=am end;local ap=aj.isFocused;aj.isFocused=nil;aj:Focus(ap)p.input=aj;p:AddTag("guiComponent")local aq=p:GetChild("Background")if aq~=nil then aj.backgroundGO=aq;if aj.focusOnBackgroundClick then aq:AddTag("guiComponent")end end;aj.OnLeftMouseButtonJustPressed=function()local ar=p.isMouseOver;if ar~=true and aj.focusOnBackgroundClick and aj.backgroundGO~=nil then ar=aj.backgroundGO.isMouseOver end;if ar==nil then ar=false end;aj:Focus(ar)end;Daneel.Event.Listen("OnLeftMouseButtonJustPressed",aj)aj.OnValidateInputButtonJustPressed=function()if aj.isFocused then Daneel.Event.Fire(aj,"OnValidate",aj)end end;Daneel.Event.Listen("OnValidateInputButtonJustPressed",aj)return aj end;function GUI.Input.Focus(aj,ar)if ar==nil then ar=true end;if aj.isFocused~=ar then aj.isFocused=ar;local H=string.trim(aj.gameObject.textRenderer:GetText())if ar==true then CS.Input.OnTextEntered(aj.OnTextEntered)if H==aj.defaultValue then aj.gameObject.textRenderer:SetText("")end else CS.Input.OnTextEntered(nil)if aj.defaultValue~=nil and aj.defaultValue~=""and H==""then aj.gameObject.textRenderer:SetText(aj.defaultValue)end end;Daneel.Event.Fire(aj,"OnFocus",aj)aj:UpdateCursor()end end;function GUI.Input.UpdateCursor(aj)if aj.cursorGO~=nil then local as=aj.gameObject.textRenderer:GetAlignment()if as~=TextRenderer.Alignment.Right then local at=aj.gameObject.textRenderer:GetTextWidth()if as==TextRenderer.Alignment.Center then at=at/2 end;aj.cursorGO.transform:SetLocalPosition(Vector3:New(at,0,0))end;local ao=0;if aj.isFocused then ao=1 end;aj.cursorGO.modelRenderer:SetOpacity(ao)aj.cursorGO.tweener.isPaused=not aj.isFocused;Daneel.Event.Fire(aj.cursorGO,"OnUpdate",aj)end end;function GUI.Input.Update(aj,H,au)local av=aj.gameObject.textRenderer:GetText()if not au then H=av..H end;if#H>aj.maxLength then H=H:sub(1,aj.maxLength)end;if av~=H then aj.gameObject.textRenderer:SetText(H)Daneel.Event.Fire(aj,"OnUpdate",aj)aj:UpdateCursor()end end;local aw={"slider","Slider"}local ax={"input","Input"}table.mergein(Daneel.functionsDebugInfo,{["GUI.Slider.New"]={h,i},["GUI.Slider.Set"]={aw,j},["GUI.Slider.SetValue"]={aw,{"value",{a,c}}},["GUI.Slider.GetValue"]={aw,{"getAsPercentage",defaultValue=false}},["GUI.Input.New"]={h,i},["GUI.Input.Focus"]={ax,{"focus",defaultValue=true}},["GUI.Input.UpdateCursor"]={ax},["GUI.Input.Update"]={ax,{"text",a},{"replaceText",defaultValue=false}}})GUI.TextArea={}GUI.TextArea.__index=GUI.TextArea;function GUI.TextArea.New(p,v)local ay={}ay.gameObject=p;p.textArea=ay;ay.id=Daneel.Utilities.GetId()ay.lineGOs={}setmetatable(ay,GUI.TextArea)ay.textRuler=p.textRenderer;if ay.textRuler==nil then ay.textRuler=p:CreateComponent("TextRenderer")end;ay.textRuler:SetText("")v=v or{}ay.cameraGO=v.cameraGO or o(p)ay:Set(table.merge(GUI.Config.textArea,v))return ay end;function GUI.TextArea.Set(ay,v)local az=ay.lineGOs;ay.lineGOs={}local H=v.text;v.text=nil;for T,k in pairs(v)do ay[T]=k end;ay.lineGOs=az;if H==nil then H=ay.Text end;ay:SetText(H)end;function GUI.TextArea.SetText(ay,H)ay.Text=H;local aA={H}if ay.newLine~=""then aA=string.split(H,ay.NewLine)end;local aB=ay.gameObject.transform:GetLocalScale()local aC=ay.AreaWidth;if aC~=nil and aC>0 then local aD=table.copy(aA)aA={}for Q=1,#aD do local aE=aD[Q]if ay.textRuler:GetTextWidth(aE)*aB.x>aC then aE=string.totable(aE)local aF={}for aG,ak in ipairs(aE)do table.insert(aF,ak)if ay.textRuler:GetTextWidth(table.concat(aF))*aB.x>aC then table.remove(aF)table.insert(aA,table.concat(aF))aF={ak}if not ay.WordWrap then aF=nil;break end end end;if aF~=nil then table.insert(aA,table.concat(aF))end else table.insert(aA,aE)end end end;if type(ay.linesFilter)=="function"then aA=ay.linesFilter(ay,aA)or aA end;local aH=#aA;local az=ay.lineGOs;local aI=#az;local aJ=ay.LineHeight/aB.y;local p=ay.gameObject;local aK={font=ay.Font,alignment=ay.Alignment,opacity=ay.Opacity}local aL=-aJ/2;if ay.VerticalAlignment=="middle"then aL=aJ*aH/2-aJ/2 elseif ay.VerticalAlignment=="bottom"then aL=aJ*aH-aJ/2 end;for Q=1,aH do local aE=aA[Q]aK.text=aE;if az[Q]~=nil then az[Q].transform:SetLocalPosition(Vector3:New(0,aL,0))az[Q].textRenderer:Set(aK)else local aM=CS.CreateGameObject("TextArea"..ay.id.."-Line"..Q,p)aM.transform:SetLocalPosition(Vector3:New(0,aL,0))aM.transform:SetLocalScale(Vector3:New(1))aM:CreateComponent("TextRenderer")aM.textRenderer:Set(aK)table.insert(az,aM)end;aL=aL-aJ end;if aH<aI then for Q=aH+1,aI do az[Q].textRenderer:SetText("")end end;Daneel.Event.Fire(ay,"OnUpdate",ay)end;function GUI.TextArea.GetText(ay)return ay.Text end;function GUI.TextArea.AddLine(ay,aE,aN)local H=ay.Text;if aN==true then H=aE..ay.NewLine..H else if H~=""and not string.endswith(H,ay.NewLine)then aE=ay.NewLine..aE end;H=H..aE end;ay:SetText(H)end;function GUI.TextArea.SetAreaWidth(ay,aC)aC=math.clamp(GUI.ToSceneUnit(aC,ay.cameraGO),0,999)if ay.AreaWidth~=aC then ay.AreaWidth=aC;if#ay.lineGOs>0 then ay:SetText(ay.Text)end end end;function GUI.TextArea.GetAreaWidth(ay)return ay.AreaWidth end;function GUI.TextArea.SetWordWrap(ay,aO)if ay.WordWrap~=aO then ay.WordWrap=aO;if#ay.lineGOs>0 then ay:SetText(ay.Text)end end end;function GUI.TextArea.GetWordWrap(ay)return ay.WordWrap end;function GUI.TextArea.SetNewLine(ay,aF)if ay.NewLine~=aF then ay.NewLine=aF;if#ay.lineGOs>0 then ay:SetText(ay.Text)end end end;function GUI.TextArea.GetNewLine(ay)return ay.NewLine end;function GUI.TextArea.SetLineHeight(ay,aJ)local aJ=GUI.ToSceneUnit(aJ,ay.cameraGO)if ay.LineHeight~=aJ then ay.LineHeight=aJ;if#ay.lineGOs>0 then ay:SetText(ay.Text)end end end;function GUI.TextArea.GetLineHeight(ay)return ay.LineHeight end;function GUI.TextArea.SetVerticalAlignment(ay,aP)local q="GUI.TextArea.SetVerticalAlignment( textArea, verticalAlignment ) : "aP=Daneel.Debug.CheckArgValue(aP,"verticalAlignment",{"top","middle","bottom"},q,GUI.Config.textArea.verticalAlignment)aP=string.trim(aP:lower())if ay.VerticalAlignment~=aP then ay.VerticalAlignment=aP;if#ay.lineGOs>0 then ay:SetText(ay.Text)end end end;function GUI.TextArea.GetVerticalAlignment(ay)return ay.VerticalAlignment end;function GUI.TextArea.SetFont(ay,aQ)ay.textRuler:SetFont(aQ)aQ=ay.textRuler:GetFont()if ay.Font~=aQ then ay.Font=aQ;if#ay.lineGOs>0 then for Q=1,#ay.lineGOs do ay.lineGOs[Q].textRenderer:SetFont(ay.Font)end;ay:SetText(ay.Text)end end end;function GUI.TextArea.GetFont(ay)return ay.Font end;function GUI.TextArea.SetAlignment(ay,as)ay.textRuler:SetAlignment(as)as=ay.textRuler:GetAlignment()if ay.Alignment~=as then ay.Alignment=as;for Q=1,#ay.lineGOs do ay.lineGOs[Q].textRenderer:SetAlignment(ay.Alignment)end end end;function GUI.TextArea.GetAlignment(ay)return ay.Alignment end;function GUI.TextArea.SetOpacity(ay,ao)if ay.Opacity~=ao then ay.Opacity=ao;for Q=1,#ay.lineGOs do ay.lineGOs[Q].textRenderer:SetOpacity(ao)end end end;function GUI.TextArea.GetOpacity(ay)return ay.Opacity end;local aR={"textArea","TextArea"}table.mergein(Daneel.functionsDebugInfo,{["GUI.TextArea.New"]={{"gameObject",e},{"params",d,isOptional=true}},["GUI.TextArea.Set"]={aR,j},["GUI.TextArea.SetText"]={aR,{"text",a}},["GUI.TextArea.GetText"]={aR},["GUI.TextArea.AddLine"]={aR,{"line",a},{"prepend",defaultValue=false}},["GUI.TextArea.SetAreaWidth"]={aR,{"areaWidth",{a,c},defaultValue=0}},["GUI.TextArea.GetAreaWidth"]={aR},["GUI.TextArea.SetWordWrap"]={aR,{"wordWrap",defaultValue=false}},["GUI.TextArea.GetWordWrap"]={aR},["GUI.TextArea.SetNewLine"]={aR,{"newLine",a}},["GUI.TextArea.GetNewLine"]={aR},["GUI.TextArea.SetLineHeight"]={aR,{"lineHeight",{a,c}}},["GUI.TextArea.GetLineHeight"]={aR},["GUI.TextArea.SetVerticalAlignment"]={aR,{"verticalAlignment",a}},["GUI.TextArea.GetVerticalAlignment"]={aR},["GUI.TextArea.SetFont"]={aR,{"font",{a,"Font"}}},["GUI.TextArea.GetFont"]={aR},["GUI.TextArea.SetAlignment"]={aR,{"alignment",{a,"unserdata",c}}},["GUI.TextArea.GetAlignment"]={aR},["GUI.TextArea.SetOpacity"]={aR,{"opacity",c}},["GUI.TextArea.GetOpacity"]={aR}})Daneel.modules.GUI=GUI;function GUI.DefaultConfig()local aS={cameraName="HUD Camera",cameraGO=nil,originGO=nil,hud={},toggle={isChecked=false,text="Toggle",checkedMark=":text",uncheckedMark=":text",checkedModel=nil,uncheckedModel=nil},progressBar={height=1,minValue=0,maxValue=100,minLength=0,maxLength=5,value="100%"},slider={minValue=0,maxValue=100,length=5,axis="x",value="0%",OnTextEntered=nil},input={isFocused=false,maxLength=9999,defaultValue=nil,characterRange=nil,focusOnBackgroundClick=true,cursorBlinkInterval=0.5},textArea={areaWidth=0,wordWrap=false,newLine="<br>",lineHeight=1,verticalAlignment="top",font=nil,text="",alignment=nil,opacity=nil},componentObjects={Hud=GUI.Hud,Toggle=GUI.Toggle,ProgressBar=GUI.ProgressBar,Slider=GUI.Slider,Input=GUI.Input,TextArea=GUI.TextArea},componentTypes={},propertiesByComponentName={hud={"position","localPosition","layer","localLayer"},progressBar={"value","height"},slider={"value"},textArea={"areaWidth","lineHeight","opacity"}}}return aS end;GUI.Config=GUI.DefaultConfig()function GUI.Load()if Daneel.modules.Tween then table.mergein(Tween.Config.propertiesByComponentName,GUI.Config.propertiesByComponentName)end end
-- Draw/Draw
Draw={}Daneel.modules.Draw=Draw;local a={}local b="string"local c="boolean"local d="number"local e="table"local f="Vector3"local g={"gameObject","GameObject"}local h={"params",e,defaultValue={}}local i={"line","LineRenderer"}local j={"circle","CircleRenderer"}local k={"draw",c,defaultValue=true}Draw.LineRenderer={}a["Draw.LineRenderer.New"]={g,h}function Draw.LineRenderer.New(l,m)local n={origin=l.transform:GetPosition(),_direction=Vector3:Left(),_length=1,_width=1,gameObject=l}n._endPosition=n.origin;l.lineRenderer=n;setmetatable(n,Draw.LineRenderer)m=table.merge(Draw.Config.lineRenderer,m)if m.endPosition~=nil then m.length=nil;m.direction=nil end;n:Set(m)return n end;a["Draw.LineRenderer.Set"]={i,h}function Draw.LineRenderer.Set(n,m)if m.endPosition then if m.length or m.direction then if Daneel.Config.debug.enableDebug then local o="Draw.LineRenderer.Set( line, params ) : The 'endPosition' property is set with value "..tostring(m.endPosition)if m.length then o=o.." The 'length' property with value '"..tostring(m.length).."' has been ignored."end;if m.direction then o=o.." The 'direction' property with value '"..tostring(m.direction).."' has been ignored."end;print(o)end;m.length=nil;m.direction=nil end end;local draw=false;for p,q in pairs(m)do local r="Set"..string.ucfirst(p)if Draw.LineRenderer[r]~=nil then draw=true;if r=="SetDirection"then Draw.LineRenderer[r](n,q,nil,false)else Draw.LineRenderer[r](n,q,false)end else n[p]=q end end;if draw then n:Draw()end end;a["Draw.LineRenderer.Draw"]={i}function Draw.LineRenderer.Draw(n)n.gameObject.transform:LookAt(n._endPosition)n.gameObject.transform:SetLocalScale(Vector3:New(n._width,n._width,n._length))Daneel.Event.Fire(n,"OnDraw",n)end;a["Draw.LineRenderer.SetEndPosition"]={i,{"endPosition",f},k}function Draw.LineRenderer.SetEndPosition(n,s,draw)n._endPosition=s;n._direction=n._endPosition-n.origin;n._length=n._direction:Length()if draw==nil or draw then n:Draw()end end;a["Draw.LineRenderer.GetEndPosition"]={i}function Draw.LineRenderer.GetEndPosition(n)return n._endPosition end;a["Draw.LineRenderer.SetLength"]={i,{"length",d},k}function Draw.LineRenderer.SetLength(n,t,draw)n._length=t;n._endPosition=n.origin+n._direction*t;if draw==nil or draw then n:Draw()end end;a["Draw.LineRenderer.GetLength"]={i}function Draw.LineRenderer.GetLength(n)return n._length end;a["Draw.LineRenderer.SetWidth"]={i,{"direction",f},{"useDirectionAsLength",c,defaultValue=false},k}function Draw.LineRenderer.SetDirection(n,u,v,draw)n._direction=u:Normalized()if v then n._length=u:Length()end;n._endPosition=n.origin+n._direction*n._length;if draw==nil or draw then n:Draw()end end;a["Draw.LineRenderer.GetDirection"]={i}function Draw.LineRenderer.GetDirection(n)return n._direction end;a["Draw.LineRenderer.SetWidth"]={i,{"width",d},k}function Draw.LineRenderer.SetWidth(n,w,draw)n._width=w;if draw==nil or draw then n:Draw()end end;a["Draw.LineRenderer.GetWidth"]={i}function Draw.LineRenderer.GetWidth(n)return n._width end;Draw.CircleRenderer={}a["Draw.CircleRenderer.New"]={g,h}function Draw.CircleRenderer.New(l,m)local x={gameObject=l,origin=l.transform:GetPosition(),segments={},_segmentCount=6,_radius=1,_width=1,_model=nil}x._endPosition=x.origin;l.circleRenderer=x;if m.model==nil and l.modelRenderer~=nil then m.model=l.modelRenderer:GetModel()l.modelRenderer:SetModel(nil)end;setmetatable(x,Draw.CircleRenderer)x:Set(table.merge(Draw.Config.circleRenderer,m))return x end;a["Draw.CircleRenderer.Set"]={j,h}function Draw.CircleRenderer.Set(x,m)local draw=false;for p,q in pairs(m)do local r="Set"..string.ucfirst(p)if Draw.CircleRenderer[r]~=nil then draw=true;Draw.CircleRenderer[r](x,q,false)else x[p]=q end end;if draw then x:Draw()end end;a["Draw.CircleRenderer.Draw"]={j}function Draw.CircleRenderer.Draw(x)local y=2*math.pi/x._segmentCount;local z=-y;local A=x:GetId()for B=1,x._segmentCount do z=z+y;local C=Vector3:New(x._radius*math.cos(z),x._radius*math.sin(z),0)if x.segments[B]==nil then local D=CS.CreateGameObject("Circle "..A.." Segment "..B,x.gameObject)D:CreateComponent("ModelRenderer")if x._model~=nil then D.modelRenderer:SetModel(x._model)end;table.insert(x.segments,B,D)end;x.segments[B].transform:SetLocalPosition(C)end;while#x.segments>x._segmentCount do table.remove(x.segments):Destroy()end;local E=x.segments[1].transform:GetPosition()local F=Vector3.Distance(E,x.segments[2].transform:GetPosition())for B,G in ipairs(x.segments)do if x.segments[B+1]~=nil then G.transform:LookAt(x.segments[B+1].transform:GetPosition())else G.transform:LookAt(E)end;G.transform:SetLocalScale(Vector3:New(x._width,x._width,F))end;Daneel.Event.Fire(x,"OnDraw",x)end;a["Draw.CircleRenderer.SetRadius"]={j,{"radius",d},k}function Draw.CircleRenderer.SetRadius(x,H,draw)x._radius=H;if draw==nil or draw then x:Draw()end end;a["Draw.CircleRenderer.GetRadius"]={j}function Draw.CircleRenderer.GetRadius(x)return x._radius end;a["Draw.CircleRenderer.SetSegmentCount"]={j,{"count",d},k}function Draw.CircleRenderer.SetSegmentCount(x,I,draw)if I<3 then I=3 end;if x._segmentCount~=I then x._segmentCount=I;if draw==nil or draw then x:Draw()end end end;a["Draw.CircleRenderer.GetSegmentCount"]={j}function Draw.CircleRenderer.GetSegmentCount(x)return x._segmentCount end;a["Draw.CircleRenderer.SetWidth"]={j,{"width",d}}function Draw.CircleRenderer.SetWidth(x,w)if x._width~=w then x._width=w;if#x.segments>0 and draw then local J=Vector3:New(x._width,x._width,x.segments[1].transform:GetLocalScale().z)for B,n in pairs(x.segments)do n.transform:SetLocalScale(J)end end end end;a["Draw.CircleRenderer.GetWidth"]={j}function Draw.CircleRenderer.GetWidth(x)return x._width end;a["Draw.CircleRenderer.SetModel"]={j,{"model",{"string","Model"},isOptional=true}}function Draw.CircleRenderer.SetModel(x,K)if x._model~=K then if type(K)=="sting"and x._model~=nil and x._model:GetPath()==K then return end;if K~=nil then x._model=Asset.Get(K,"Model",true)else x._model=nil end;for B,n in pairs(x.segments)do n.modelRenderer:SetModel(x._model)end end end;a["Draw.CircleRenderer.GetModel"]={j}function Draw.CircleRenderer.GetModel(x)return x._model end;a["Draw.CircleRenderer.SetOpacity"]={j,{"opacity","number"}}function Draw.CircleRenderer.SetOpacity(x,L)for B=1,#cicle.segments do x.segments[B].modelRenderer:SetOpacity(L)end end;a["Draw.CircleRenderer.GetOpacity"]={j}function Draw.CircleRenderer.GetOpacity(x)if x.segments[1]~=nil then return x.segments[1].modelRenderer:GetOpacity()end;return nil end;table.mergein(Daneel.functionsDebugInfo,a)function Draw.DefaultConfig()local M={lineRenderer={direction=Vector3:Left(),length=2,width=0.1},circleRenderer={segmentCount=6,radius=1,width=1,model=nil},componentObjects={LineRenderer=Draw.LineRenderer,CircleRenderer=Draw.CircleRenderer},propertiesByComponentName={lineRenderer={"length","endPosition","direction","width"},circleRenderer={"radius","segmentCount","direction","width","opacity"}}}return M end;Draw.Config=Draw.DefaultConfig()function Draw.Load()if Daneel.modules.Tween then table.mergein(Tween.Config.propertiesByComponentName,Draw.Config.propertiesByComponentName)end end
-- Tween/Tween
Tween={}local function a(b)if b.target~=nil then Daneel.Debug.StackTrace.BeginFunction("GetTweenerProperty",b)local c=nil;c=b.target[b.property]if c==nil then local d="Get"..string.ucfirst(b.property)if b.target[d]~=nil then c=b.target[d](b.target)end end;Daneel.Debug.StackTrace.EndFunction()return c end end;local function e(b,c)if b.target~=nil then Daneel.Debug.StackTrace.BeginFunction("SetTweenerProperty",b,c)if b.valueType=="string"then if type(c)=="number"and c>=#b.stringValue+1 then local f=b.startStringValue..b.endStringValue:sub(1,c)if f~=b.stringValue then b.stringValue=f;c=f else return end else return end end;if b.target[b.property]==nil then local d="Set"..string.ucfirst(b.property)if b.target[d]~=nil then b.target[d](b.target,b.property)end else b.target[b.property]=c end;Daneel.Debug.StackTrace.EndFunction()end end;Tween.Tweener={tweeners={}}Tween.Tweener.__index=Tween.Tweener;setmetatable(Tween.Tweener,{__call=function(g,...)return g.New(...)end})function Tween.Tweener.__tostring(b)return"Tweener: "..b.id end;function Tween.Tweener.New(h,i,j,k,l,m)Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.New",h,i,j,k,m)local n="Tween.Tweener.New(target, property, endValue, duration[, params]) : "local b=table.copy(Tween.Config.tweener)setmetatable(b,Tween.Tweener)b.id=Daneel.Utilities.GetId()local o=type(h)local p=nil;if o=="table"then p=getmetatable(h)end;if o=="number"or o=="string"or p==Vector2 or p==Vector3 then m=l;l=k;k=j;j=i;local q=h;n="Tween.Tweener.New(startValue, endValue, duration[, onCompleteCallback, params]) : "Daneel.Debug.CheckArgType(k,"duration","number",n)if type(l)=="table"then m=l;l=nil end;Daneel.Debug.CheckOptionalArgType(l,"onCompleteCallback","function",n)Daneel.Debug.CheckOptionalArgType(m,"params","table",n)b.startValue=q;b.endValue=j;b.duration=k;if l~=nil then b.OnComplete=l end;if m~=nil then b:Set(m)end elseif i==nil then Daneel.Debug.CheckArgType(h,"params","table",n)n="Tween.Tweener.New(params) : "b:Set(h)else Daneel.Debug.CheckArgType(h,"target","table",n)Daneel.Debug.CheckArgType(i,"property","string",n)Daneel.Debug.CheckArgType(k,"duration","number",n)if type(l)=="table"then m=l;l=nil end;Daneel.Debug.CheckOptionalArgType(l,"onCompleteCallback","function",n)Daneel.Debug.CheckOptionalArgType(m,"params","table",n)b.target=h;b.property=i;b.endValue=j;b.duration=k;if l~=nil then b.OnComplete=l end;if m~=nil then b:Set(m)end end;if b.endValue==nil then error("Tween.Tweener.New(): 'endValue' property is nil for tweener: "..tostring(b))end;if b.startValue==nil then b.startValue=a(b)end;if b.target~=nil then b.gameObject=b.target.gameObject end;b.valueType=Daneel.Debug.GetType(b.startValue)if b.valueType=="string"then b.startStringValue=b.startValue;b.stringValue=b.startStringValue;b.endStringValue=b.endValue;b.startValue=1;b.endValue=#b.endStringValue end;Tween.Tweener.tweeners[b.id]=b;Daneel.Debug.StackTrace.EndFunction()return b end;function Tween.Tweener.Set(b,m)Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.Set",b,m)local n="Tween.Tweener.Set(tweener, params) : "Daneel.Debug.CheckArgType(b,"tweener","Tween.Tweener",n)for r,c in pairs(m)do b[r]=c end;Daneel.Debug.StackTrace.EndFunction()return b end;function Tween.Tweener.Play(b)if b.isEnabled==false then return end;Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.Play",b)local n="Tween.Tweener.Play(tweener) : "Daneel.Debug.CheckArgType(b,"tweener","Tween.Tweener",n)b.isPaused=false;Daneel.Event.Fire(b,"OnPlay",b)Daneel.Debug.StackTrace.EndFunction()end;function Tween.Tweener.Pause(b)if b.isEnabled==false then return end;Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.Pause",b)local n="Tween.Tweener.Pause(tweener) : "Daneel.Debug.CheckArgType(b,"tweener","Tween.Tweener",n)b.isPaused=true;Daneel.Event.Fire(b,"OnPause",b)Daneel.Debug.StackTrace.EndFunction()end;function Tween.Tweener.Restart(b)if b.isEnabled==false then return end;Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.Restart",b)local n="Tween.Tweener.Restart(tweener) : "Daneel.Debug.CheckArgType(b,"tweener","Tween.Tweener",n)b.elapsed=0;b.fullElapsed=0;b.elapsedDelay=0;b.completedLoops=0;b.isCompleted=false;b.hasStarted=false;local q=b.startValue;if b.loopType=="yoyo"and b.completedLoops%2~=0 then q=b.endValue end;if b.target~=nil then e(b,q)end;b.value=q;Daneel.Debug.StackTrace.EndFunction()end;function Tween.Tweener.Complete(b)if b.isEnabled==false or b.loops==-1 then return end;Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.Complete",b)local n="Tween.Tweener.Complete( tweener ) : "Daneel.Debug.CheckArgType(b,"tweener","Tween.Tweener",n)b.isCompleted=true;local j=b.endValue;if b.loopType=="yoyo"then if b.loops%2==0 and b.completedLoops%2==0 then j=b.startValue elseif b.loops%2~=0 and b.completedLoops%2~=0 then j=b.startValue end end;if b.target~=nil then e(b,j)end;b.value=j;Daneel.Event.Fire(b,"OnComplete",b)if b.destroyOnComplete then b:Destroy()end;Daneel.Debug.StackTrace.EndFunction()end;local function s(t)return t.isDestroyed==true or t.inner==nil end;function Tween.Tweener.IsTargetDestroyed(b)if b.target~=nil then if b.target.isDestroyed then return true end;if b.target.gameObject~=nil and s(b.target.gameObject)then return true end end;if b.gameObject~=nil and s(b.gameObject)then return true end;return false end;function Tween.Tweener.Destroy(b)Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.Destroy",b)local n="Tween.Tweener.Destroy( tweener ) : "Daneel.Debug.CheckArgType(b,"tweener","Tween.Tweener",n)b.isEnabled=false;b.isPaused=true;b.target=nil;b.duration=0;Tween.Tweener.tweeners[b.id]=nil;CraftStudio.Destroy(b)Daneel.Debug.StackTrace.EndFunction()end;function Tween.Tweener.Update(b,u)if b.isEnabled==false then return end;Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.Update",b,u)local n="Tween.Tweener.Update(tweener[, deltaDuration]) : "Daneel.Debug.CheckArgType(b,"tweener","Tween.Tweener",n)Daneel.Debug.CheckArgType(u,"deltaDuration","number",n)if Tween.Ease[b.easeType]==nil then if Daneel.Config.debug.enableDebug then print("Tween.Tweener.Update() : Easing '"..tostring(b.easeType).."' for tweener ID '"..tween.id.."' does not exists. Setting it back for the default easing '"..Tween.Config.tweener.easeType.."'.")end;b.easeType=Tween.Config.tweener.easeType end;if u~=nil then b.elapsed=b.elapsed+u;b.fullElapsed=b.fullElapsed+u end;local c=nil;if b.elapsed>b.duration then b.isCompleted=true;b.elapsed=b.duration;if b.isRelative==true then c=b.startValue+b.endValue else c=b.endValue end else if b.valueType=="Vector3"then c=Vector3:New(Tween.Ease[b.easeType](b.elapsed,b.startValue.x,b.diffValue.x,b.duration),Tween.Ease[b.easeType](b.elapsed,b.startValue.y,b.diffValue.y,b.duration),Tween.Ease[b.easeType](b.elapsed,b.startValue.z,b.diffValue.z,b.duration))elseif b.valueType=="Vector2"then c=Vector2.New(Tween.Ease[b.easeType](b.elapsed,b.startValue.x,b.diffValue.x,b.duration),Tween.Ease[b.easeType](b.elapsed,b.startValue.y,b.diffValue.y,b.duration))else c=Tween.Ease[b.easeType](b.elapsed,b.startValue,b.diffValue,b.duration)end end;if b.target~=nil then e(b,c)end;b.value=c;Daneel.Event.Fire(b,"OnUpdate",b)Daneel.Debug.StackTrace.EndFunction()end;Tween.Timer={}Tween.Timer.__index=Tween.Tweener;setmetatable(Tween.Timer,{__call=function(g,...)return g.New(...)end})function Tween.Timer.New(k,v,w,m)Daneel.Debug.StackTrace.BeginFunction("Tween.Timer.New",k,v,w,m)local n="Tween.Timer.New( duration, callback[, isInfiniteLoop, params] ) : "if type(w)=="table"then m=w;n="Tween.Timer.New( duration, callback[, params] ) : "end;Daneel.Debug.CheckArgType(k,"duration","number",n)Daneel.Debug.CheckArgType(v,"callback",{"function","userdata"},n)Daneel.Debug.CheckOptionalArgType(m,"params","table",n)local b=table.copy(Tween.Config.tweener)setmetatable(b,Tween.Tweener)b.id=Daneel.Utilities.GetId()b.startValue=k;b.endValue=0;b.duration=k;if w==true then b.loops=-1;b.OnLoopComplete=v else b.OnComplete=v end;if m~=nil then b:Set(m)end;Tween.Tweener.tweeners[b.id]=b;Daneel.Debug.StackTrace.EndFunction()return b end;Daneel.modules.Tween=Tween;function Tween.DefaultConfig()local x={tweener={isEnabled=true,isPaused=false,delay=0.0,duration=0.0,durationType="time",startValue=nil,endValue=0.0,loops=0,loopType="simple",easeType="linear",isRelative=false,destroyOnComplete=true,destroyOnSceneLoad=true,updateInterval=1,Id=-1,hasStarted=false,isCompleted=false,elapsed=0,fullElapsed=0,elapsedDelay=0,completedLoops=0,diffValue=0.0,value=0.0,frameCount=0},objects={["Tween.Tweener"]=Tween.Tweener},propertiesByComponentName={transform={"scale","localScale","position","localPosition","eulerAngles","localEulerAngles"},modelRenderer={"opacity"},mapRenderer={"opacity"},textRenderer={"text","opacity"},camera={"fov"}}}return x end;Tween.Config=Tween.DefaultConfig()function Tween.Awake()if Tween.Config.componentNamesByProperty==nil then local y={}for z,A in pairs(Tween.Config.propertiesByComponentName)do for B=1,#A do local i=A[B]y[i]=y[i]or{}table.insert(y[i],z)end end;Tween.Config.componentNamesByProperty=y end;for C,b in pairs(Tween.Tweener.tweeners)do if b.destroyOnSceneLoad then b:Destroy()end end end;function Tween.Update()for C,b in pairs(Tween.Tweener.tweeners)do if b:IsTargetDestroyed()then b:Destroy()end;if b.isEnabled==true and b.isPaused==false and b.isCompleted==false and b.duration>0 then b.frameCount=b.frameCount+1;if b.frameCount%b.updateInterval==0 then local u=Daneel.Time.deltaTime*b.updateInterval;if b.durationType=="realTime"then u=Daneel.Time.realDeltaTime*b.updateInterval elseif b.durationType=="frame"then u=b.updateInterval end;if u>0 then if b.elapsedDelay>=b.delay then if b.hasStarted==false then b.hasStarted=true;if b.startValue==nil then if b.target~=nil then b.startValue=a(b)else error("Tween.Update() : startValue is nil but no target is set for tweener: "..tostring(b))end elseif b.target~=nil then e(b,b.startValue)end;b.value=b.startValue;if b.isRelative==true then b.diffValue=b.endValue else b.diffValue=b.endValue-b.startValue end;Daneel.Event.Fire(b,"OnStart",b)end;b:Update(u)else b.elapsedDelay=b.elapsedDelay+u end;if b.isCompleted==true then b.completedLoops=b.completedLoops+1;if b.loops==-1 or b.completedLoops<b.loops then b.isCompleted=false;b.elapsed=0;if b.loopType:lower()=="yoyo"then local q=b.startValue;if b.isRelative then b.startValue=b.value;b.endValue=-b.endValue;b.diffValue=b.endValue else b.startValue=b.endValue;b.endValue=q;b.diffValue=-b.diffValue end elseif b.target~=nil then e(b,b.startValue)end;b.value=b.startValue;Daneel.Event.Fire(b,"OnLoopComplete",b)else Daneel.Event.Fire(b,"OnComplete",b)if b.destroyOnComplete and b.Destroy~=nil then b:Destroy()end end end end end end end end;local function D(t,i)local E=nil;if Daneel.modules.GUI~=nil and t.hud~=nil and i=="position"or i=="localPosition"then E=t.hud else local F=Tween.Config.componentNamesByProperty[i]if F~=nil then for B=1,#F do E=t[F[B]]if E~=nil then break end end end end;if E==nil then error("Tween: resolveTarget(): Couldn't resolve the target for property '"..i.."' and gameObject: "..tostring(t))end;return E end;function GameObject.Animate(t,i,j,k,l,m)local E=nil;if type(l)=="table"and m==nil then m=l;l=nil end;if m~=nil and m.target~=nil then E=m.target else E=D(t,i)end;return Tween.Tweener.New(E,i,j,k,l,m)end;function GameObject.AnimateAndDestroy(t,i,j,k,m)local E=nil;if m~=nil and m.target~=nil then E=m.target else E=D(t,i)end;return Tween.Tweener.New(E,i,j,k,function()t:Destroy()end,m)end
-- Easing equations
-- From Emmanuel Oga's easing equations : https://github.com/EmmanuelOga/easing

--
-- Adapted from
-- Tweener's easing functions (Penner's Easing Equations)
-- and http://code.google.com/p/tweener/ (jstweener javascript version)
--

--[[
Disclaimer for Robert Penner's Easing Equations license:

TERMS OF USE - EASING EQUATIONS

Open source under the BSD License.

Copyright © 2001 Robert Penner
All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
* Neither the name of the author nor the names of contributors may be used to endorse or promote products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
]]

-- For all easing functions:
-- t = elapsed time
-- b = begin
-- c = change == ending - beginning
-- d = duration (total time)

local pow = math.pow
local sin = math.sin
local cos = math.cos
local pi = math.pi
local sqrt = math.sqrt
local abs = math.abs
local asin = math.asin

local function linear(t, b, c, d)
  return c * t / d + b
end

local function inQuad(t, b, c, d)
  t = t / d
  return c * pow(t, 2) + b
end

local function outQuad(t, b, c, d)
  t = t / d
  return -c * t * (t - 2) + b
end

local function inOutQuad(t, b, c, d)
  t = t / d * 2
  if t < 1 then
    return c / 2 * pow(t, 2) + b
  else
    return -c / 2 * ((t - 1) * (t - 3) - 1) + b
  end
end

local function outInQuad(t, b, c, d)
  if t < d / 2 then
    return outQuad (t * 2, b, c / 2, d)
  else
    return inQuad((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inCubic (t, b, c, d)
  t = t / d
  return c * pow(t, 3) + b
end

local function outCubic(t, b, c, d)
  t = t / d - 1
  return c * (pow(t, 3) + 1) + b
end

local function inOutCubic(t, b, c, d)
  t = t / d * 2
  if t < 1 then
    return c / 2 * t * t * t + b
  else
    t = t - 2
    return c / 2 * (t * t * t + 2) + b
  end
end

local function outInCubic(t, b, c, d)
  if t < d / 2 then
    return outCubic(t * 2, b, c / 2, d)
  else
    return inCubic((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inQuart(t, b, c, d)
  t = t / d
  return c * pow(t, 4) + b
end

local function outQuart(t, b, c, d)
  t = t / d - 1
  return -c * (pow(t, 4) - 1) + b
end

local function inOutQuart(t, b, c, d)
  t = t / d * 2
  if t < 1 then
    return c / 2 * pow(t, 4) + b
  else
    t = t - 2
    return -c / 2 * (pow(t, 4) - 2) + b
  end
end

local function outInQuart(t, b, c, d)
  if t < d / 2 then
    return outQuart(t * 2, b, c / 2, d)
  else
    return inQuart((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inQuint(t, b, c, d)
  t = t / d
  return c * pow(t, 5) + b
end

local function outQuint(t, b, c, d)
  t = t / d - 1
  return c * (pow(t, 5) + 1) + b
end

local function inOutQuint(t, b, c, d)
  t = t / d * 2
  if t < 1 then
    return c / 2 * pow(t, 5) + b
  else
    t = t - 2
    return c / 2 * (pow(t, 5) + 2) + b
  end
end

local function outInQuint(t, b, c, d)
  if t < d / 2 then
    return outQuint(t * 2, b, c / 2, d)
  else
    return inQuint((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inSine(t, b, c, d)
  return -c * cos(t / d * (pi / 2)) + c + b
end

local function outSine(t, b, c, d)
  return c * sin(t / d * (pi / 2)) + b
end

local function inOutSine(t, b, c, d)
  return -c / 2 * (cos(pi * t / d) - 1) + b
end

local function outInSine(t, b, c, d)
  if t < d / 2 then
    return outSine(t * 2, b, c / 2, d)
  else
    return inSine((t * 2) -d, b + c / 2, c / 2, d)
  end
end

local function inExpo(t, b, c, d)
  if t == 0 then
    return b
  else
    return c * pow(2, 10 * (t / d - 1)) + b - c * 0.001
  end
end

local function outExpo(t, b, c, d)
  if t == d then
    return b + c
  else
    return c * 1.001 * (-pow(2, -10 * t / d) + 1) + b
  end
end

local function inOutExpo(t, b, c, d)
  if t == 0 then return b end
  if t == d then return b + c end
  t = t / d * 2
  if t < 1 then
    return c / 2 * pow(2, 10 * (t - 1)) + b - c * 0.0005
  else
    t = t - 1
    return c / 2 * 1.0005 * (-pow(2, -10 * t) + 2) + b
  end
end

local function outInExpo(t, b, c, d)
  if t < d / 2 then
    return outExpo(t * 2, b, c / 2, d)
  else
    return inExpo((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inCirc(t, b, c, d)
  t = t / d
  return(-c * (sqrt(1 - pow(t, 2)) - 1) + b)
end

local function outCirc(t, b, c, d)
  t = t / d - 1
  return(c * sqrt(1 - pow(t, 2)) + b)
end

local function inOutCirc(t, b, c, d)
  t = t / d * 2
  if t < 1 then
    return -c / 2 * (sqrt(1 - t * t) - 1) + b
  else
    t = t - 2
    return c / 2 * (sqrt(1 - t * t) + 1) + b
  end
end

local function outInCirc(t, b, c, d)
  if t < d / 2 then
    return outCirc(t * 2, b, c / 2, d)
  else
    return inCirc((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inElastic(t, b, c, d, a, p)
  if t == 0 then return b end

  t = t / d

  if t == 1 then return b + c end

  if not p then p = d * 0.3 end

  local s

  if not a or a < abs(c) then
    a = c
    s = p / 4
  else
    s = p / (2 * pi) * asin(c/a)
  end

  t = t - 1

  return -(a * pow(2, 10 * t) * sin((t * d - s) * (2 * pi) / p)) + b
end

-- a: amplitud
-- p: period
local function outElastic(t, b, c, d, a, p)
  if t == 0 then return b end

  t = t / d

  if t == 1 then return b + c end

  if not p then p = d * 0.3 end

  local s

  if not a or a < abs(c) then
    a = c
    s = p / 4
  else
    s = p / (2 * pi) * asin(c/a)
  end

  return a * pow(2, -10 * t) * sin((t * d - s) * (2 * pi) / p) + c + b
end

-- p = period
-- a = amplitud
local function inOutElastic(t, b, c, d, a, p)
  if t == 0 then return b end

  t = t / d * 2

  if t == 2 then return b + c end

  if not p then p = d * (0.3 * 1.5) end
  if not a then a = 0 end

  if not a or a < abs(c) then
    a = c
    s = p / 4
  else
    s = p / (2 * pi) * asin(c / a)
  end

  if t < 1 then
    t = t - 1
    return -0.5 * (a * pow(2, 10 * t) * sin((t * d - s) * (2 * pi) / p)) + b
  else
    t = t - 1
    return a * pow(2, -10 * t) * sin((t * d - s) * (2 * pi) / p ) * 0.5 + c + b
  end
end

-- a: amplitud
-- p: period
local function outInElastic(t, b, c, d, a, p)
  if t < d / 2 then
    return outElastic(t * 2, b, c / 2, d, a, p)
  else
    return inElastic((t * 2) - d, b + c / 2, c / 2, d, a, p)
  end
end

local function inBack(t, b, c, d, s)
  if not s then s = 1.70158 end
  t = t / d
  return c * t * t * ((s + 1) * t - s) + b
end

local function outBack(t, b, c, d, s)
  if not s then s = 1.70158 end
  t = t / d - 1
  return c * (t * t * ((s + 1) * t + s) + 1) + b
end

local function inOutBack(t, b, c, d, s)
  if not s then s = 1.70158 end
  s = s * 1.525
  t = t / d * 2
  if t < 1 then
    return c / 2 * (t * t * ((s + 1) * t - s)) + b
  else
    t = t - 2
    return c / 2 * (t * t * ((s + 1) * t + s) + 2) + b
  end
end

local function outInBack(t, b, c, d, s)
  if t < d / 2 then
    return outBack(t * 2, b, c / 2, d, s)
  else
    return inBack((t * 2) - d, b + c / 2, c / 2, d, s)
  end
end

local function outBounce(t, b, c, d)
  t = t / d
  if t < 1 / 2.75 then
    return c * (7.5625 * t * t) + b
  elseif t < 2 / 2.75 then
    t = t - (1.5 / 2.75)
    return c * (7.5625 * t * t + 0.75) + b
  elseif t < 2.5 / 2.75 then
    t = t - (2.25 / 2.75)
    return c * (7.5625 * t * t + 0.9375) + b
  else
    t = t - (2.625 / 2.75)
    return c * (7.5625 * t * t + 0.984375) + b
  end
end

local function inBounce(t, b, c, d)
  return c - outBounce(d - t, 0, c, d) + b
end

local function inOutBounce(t, b, c, d)
  if t < d / 2 then
    return inBounce(t * 2, 0, c, d) * 0.5 + b
  else
    return outBounce(t * 2 - d, 0, c, d) * 0.5 + c * .5 + b
  end
end

local function outInBounce(t, b, c, d)
  if t < d / 2 then
    return outBounce(t * 2, b, c / 2, d)
  else
    return inBounce((t * 2) - d, b + c / 2, c / 2, d)
  end
end

-- Modifications for Daneel : replaced 'return {' by 'Tween.Ease = {'
Tween.Ease = {
  linear = linear,
  inQuad = inQuad,
  outQuad = outQuad,
  inOutQuad = inOutQuad,
  outInQuad = outInQuad,
  inCubic = inCubic ,
  outCubic = outCubic,
  inOutCubic = inOutCubic,
  outInCubic = outInCubic,
  inQuart = inQuart,
  outQuart = outQuart,
  inOutQuart = inOutQuart,
  outInQuart = outInQuart,
  inQuint = inQuint,
  outQuint = outQuint,
  inOutQuint = inOutQuint,
  outInQuint = outInQuint,
  inSine = inSine,
  outSine = outSine,
  inOutSine = inOutSine,
  outInSine = outInSine,
  inExpo = inExpo,
  outExpo = outExpo,
  inOutExpo = inOutExpo,
  outInExpo = outInExpo,
  inCirc = inCirc,
  outCirc = outCirc,
  inOutCirc = inOutCirc,
  outInCirc = outInCirc,
  inElastic = inElastic,
  outElastic = outElastic,
  inOutElastic = inOutElastic,
  outInElastic = outInElastic,
  inBack = inBack,
  outBack = outBack,
  inOutBack = inOutBack,
  outInBack = outInBack,
  inBounce = inBounce,
  outBounce = outBounce,
  inOutBounce = inOutBounce,
  outInBounce = outInBounce,
}

