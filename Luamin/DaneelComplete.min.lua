function math.isinteger(a)local b=false;if type(a)=="number"then b=a==math.floor(a)end;return b end;function math.lerp(c,d,e,f)if f=="smooth"then e=e*2;if e<1 then e=0.5*e*e*e else e=e-2;e=0.5*e*e*e+2 end elseif f=="smooth in"then e=e*e*e elseif f=="smooth out"then e=e-1;e=e*e*e+1 end;return c+(d-c)*e end;function math.warpangle(g)if g>180 then g=g-360 elseif g<-180 then g=g+360 end;return g end;function math.round(h,i)if i~=nil then h=math.floor(h*10^i+0.5)/10^i else h=math.floor(h+0.5)end;return h end;function tonumber2(j)local a=tonumber(j)if a==nil then j=tostring(j)local k="(%d+)"if j:find(".",1,true)then k="(%d+%.%d+)"end;a=j:match(j:gsub(k,"(%1)"))a=tonumber(a)end;return a end;function math.clamp(h,l,m)h=math.max(h,l)h=math.min(h,m)return h end;function string.totable(n)local o={}for p=1,#n do table.insert(o,n:sub(p,p))end;return o end;function string.ucfirst(n)local q=n:gsub("^%l",string.upper)return q end;function string.lcfirst(n)local q=n:gsub("^%u",string.lower)return q end;function string.split(n,r,s)local t={}if s then local u,v=n:find(r)if u~=nil then local k=r;r=n:sub(u,v)if string.startswith(n,r)then n=n:sub(#r+1,#n)end;if not n:endswith(r)then n=n..r end;for w in n:gmatch("(.-)"..k)do table.insert(t,w)end end else if n:find(r,1,true)~=nil then if string.startswith(n,r)then n=n:sub(#r+1,#n)end;if not n:endswith(r)then n=n..r end;local x=""local y=string.totable(n)local p=1;while p<=#y do local z=y[p]if z==r or n:sub(p,p-1+#r)==r then table.insert(t,x)x=""p=p+#r else x=x..z;p=p+1 end end;if#x>0 then table.insert(t,x)end end end;if#t==0 then t={n}end;return t end;function string.startswith(n,x)local q=n:sub(1,#x)==x;return q end;function string.endswith(n,x)local q=n:sub(#n-#x+1,#n)==x;return q end;function string.trimstart(n)local q=n:gsub("^%s+","")return q end;function string.trimend(n)local q=n:gsub("%s+$","")return q end;function string.trim(n)local q=n:gsub("^%s+",""):gsub("%s+$","")return q end;function string.reverse(n)local A=""for p=#n,1,-1 do A=A..n:sub(p,p)end;return A end;function table.copy(o,B)local C={}if table.isarray(o)then for D,h in ipairs(o)do if type(h)=="table"and B then h=table.copy(h,B)end;table.insert(C,h)end else for D,h in pairs(o)do if type(h)=="table"and B then h=table.copy(h,B)end;C[D]=h end end;return C end;function table.containsvalue(o,h,E)if h==nil then return false end;if E and type(h)=='string'then h=h:lower()end;for D,F in pairs(o)do if E and type(F)=="string"then F=F:lower()end;if h==F then return true end end;return false end;function table.getlength(o,G)local H=0;if G~=nil then G=G:lower()end;for D,h in pairs(o)do if G==nil or type(D)==G then H=H+1 end end;return H end;function table.print(o)if o==nil then print("table.print( t ) : Provided table is nil.")return end;print("~~~~~ table.print("..tostring(o)..") ~~~~~ Start ~~~~~")local I=pairs;if table.getlength(o)==0 then print("Table is empty.")elseif table.isarray(o)then I=ipairs end;for D,h in I(o)do if type(D)=="string"then D='"'..D..'"'end;if type(h)=="string"then h='"'..h..'"'end;print(D,h)end;print("~~~~~ table.print("..tostring(o)..") ~~~~~ End ~~~~~")end;local J={}function table.rprint(o,K)K=K or""if o==nil then print(K.."table.rprint( t ) : Provided table is nil.")return end;if K==""then print("~~~~~ table.rprint("..tostring(o)..") ~~~~~ Start ~~~~~")end;local I=pairs;if table.getlength(o)==0 then print(K,"Table is empty.")elseif table.isarray(o)then I=ipairs end;for D,h in I(o)do if type(D)=="string"then D='"'..D..'"'end;if type(h)=="string"then h='"'..h..'"'end;if type(h)=="table"and getmetatable(h)==nil then local L=J[h]if L~=nil then print(K..tostring(D),"Already printed table with key "..L..": "..tostring(h))else J[h]=D;print(K..tostring(D),h)table.rprint(h,K.."| - - - ")end else print(K..tostring(D),h)end end;if K==""then print("~~~~~ table.rprint("..tostring(o)..") ~~~~~ End ~~~~~")J={}end end;function table.merge(...)return table.mergein({},...)end;function table.mergein(...)local M={...}local B=false;if#M>0 and type(M[#M])~="table"then B=table.remove(M)end;local N=table.remove(M,1)if N==nil then local O="table.mergein(): No table where passed as argument."if#M>0 then table.print(M)O="table.mergein(): First argument is nil. Other arguments are shown above."end;error(O)end;for p,o in ipairs(M)do local P=type(o)if P=="table"then if table.isarray(o)then for D,h in ipairs(o)do table.insert(N,h)end else for D,h in pairs(o)do if N[D]~=nil and B and type(h)=="table"and getmetatable(h)==nil then h=table.merge(N[D],h,true)end;N[D]=h end end end end;return N end;function table.havesamecontent(Q,R)if table.getlength(Q)~=table.getlength(R)then return false end;for D,h in pairs(Q)do if Q[D]~=R[D]then return false end end;return true end;function table.combine(S,T)if#S~=#T then print("table.combine( keys, values ) : WARNING : Arguments 'keys' and 'values' have different length :",#S,#T)end;local C={}for p,D in pairs(S)do C[D]=T[p]end;return C end;function table.removevalue(o,h,U)if h==nil then return 0 end;local V=0;for D,F in pairs(o)do if F==h then if math.isinteger(D)then table.remove(o,D)else o[D]=nil end;V=V+1;if U~=nil and V==U then break end end end;return V end;function table.getkeys(o)local S={}for D,h in pairs(o)do table.insert(S,D)end;return S end;function table.getvalues(o)local T={}for D,h in pairs(o)do table.insert(T,h)end;return T end;function table.getkey(o,h)local D=nil;for W,X in pairs(o)do if h==X then D=W end end;return D end;function table.sortby(o,Y,Z)if Z==nil or not(Z=="asc"or Z=="desc")then Z="asc"end;local _={}local a0={}for p=1,#o do local a1=o[p][Y]if a0[a1]==nil then table.insert(_,a1)a0[a1]={}end;table.insert(a0[a1],o[p])end;if Z=="desc"then table.sort(_,function(c,d)return c>d end)else table.sort(_)end;o={}for p=1,#_ do for a2,a3 in pairs(a0[_[p]])do table.insert(o,a3)end end;return o end;function table.getvalue(o,S)S=string.split(S,".")local h=o;if h==_G then local a4=false;for D,h in pairs(_G)do if D==S[1]then a4=true;break end end;if not a4 then return nil end end;for p,D in ipairs(S)do if h[D]==nil then h=nil;break else h=h[D]end end;return h end;function table.setvalue(o,S,h)if S:find(".",1,true)==nil then o[S]=h else S=string.split(S,".")for p,D in ipairs(S)do if p==#S then o[D]=h else local a5=o[D]if a5==nil then a5={}o[D]=a5 end;o=a5 end end end end;function table.isarray(o,a6)local a7=0;for W,X in pairs(o)do a7=a7+1;if type(W)~="number"or not math.isinteger(W)then return false end end;if a6==nil or a6 then return a7==#o end;return true end;function table.reverse(o)local C={}for p,X in ipairs(o)do table.insert(C,1,X)end;return C end;function table.shift(o,a8)local D=nil;local h=nil;if table.isarray(o)then if#o>0 then h=table.removevalue(o,1)if h~=nil then D=1 end end else for W,X in pairs(o)do D=W;h=X;break end;if D~=nil then o[D]=nil end end;if a8 then return D,h else return h end end;function table.reindex(o)if not table.isarray(o,false)then print("table.reindex( table ) : Provided table '"..tostring(o).."' is not an array.")end;local a9=1;for p,X in pairs(o)do if type(p)=="number"and p>a9 then a9=p end end;local C={}for p=1,a9 do if o[p]~=nil then table.insert(C,o[p])end end;return C end;function table.insertonce(o,aa,h)if h==nil then h=aa;aa=nil end;for D,F in pairs(o)do if h==F then return false end end;if aa==nil then table.insert(o,h)else table.insert(o,aa,h)end;return true end;Daneel={}Daneel.modules={moduleNames={}}setmetatable(Daneel.modules,{__newindex=function(ab,ac,ad)table.insert(Daneel.modules.moduleNames,ac)rawset(Daneel.modules,ac,ad)end})function string.split(n,r,s)local t={}if s then local u,v=n:find(r)if u~=nil then local k=r;r=n:sub(u,v)if string.startswith(n,r)then n=n:sub(#r+1,#n)end;if not n:endswith(r)then n=n..r end;if CS.IsWebPlayer then for w in n:gmatch("([^"..k.."]+)"..k)do table.insert(t,w)end else for w in n:gmatch("(.-)"..k)do table.insert(t,w)end end end else if n:find(r,1,true)~=nil then if string.startswith(n,r)then n=n:sub(#r+1,#n)end;if not n:endswith(r)then n=n..r end;local x=""local y=string.totable(n)local p=1;while p<=#y do local z=y[p]if z==r or n:sub(p,p-1+#r)==r then table.insert(t,x)x=""p=p+#r else x=x..z;p=p+1 end end;if#x>0 then table.insert(t,x)end end end;if#t==0 then t={n}end;return t end;function table.deepmerge(...)return table.merge(...,true)end;function table.print(o)if o==nil then print("table.print( t ) : Provided table is nil.")return end;local ae=tostring(o)local af=Daneel.Debug.ToRawString(o)if ae~=af then ae=ae.." / "..af end;print("~~~~~ table.print("..ae..") ~~~~~ Start ~~~~~")local I=pairs;if table.getlength(o)==0 then print("Table is empty.")elseif table.isarray(o)then I=ipairs end;for D,h in I(o)do print(D,h)end;print("~~~~~ table.print("..ae..") ~~~~~ End ~~~~~")end;function table.getlength(o,G)local H=0;if G~=nil then G=G:lower()end;for D,h in pairs(o)do if G==nil or type(D)==G or Daneel.Debug.GetType(D):lower()==G then H=H+1 end end;return H end;Daneel.Utilities={}function Daneel.Utilities.CaseProof(n,ag)if type(ag)=="string"then ag={ag}end;local ah=n:lower()for p,ai in pairs(ag)do if ah==ai:lower()then n=ai;break end end;return n end;function Daneel.Utilities.ReplaceInString(string,aj)for ak,al in pairs(aj)do string=string:gsub(":"..ak,al)end;return string end;function Daneel.Utilities.AllowDynamicGettersAndSetters(am,an)function am.__index(ao,D)local ap=D;if type(D)=="string"then ap=string.ucfirst(D)end;if D==ap then if am[D]~=nil then return am[D]end;if an~=nil then for p,aq in ipairs(an)do if aq[D]~=nil then return aq[D]end end end else local ar="Get"..ap;if am[ar]~=nil then return am[ar](ao)elseif am[D]~=nil then return am[D]end;if an~=nil then for p,aq in ipairs(an)do if aq[ar]~=nil then return aq[ar](ao)elseif aq[D]~=nil then return aq[D]end end end end;return nil end;function am.__newindex(ao,D,h)local ap=D;if type(D)=="string"then ap=string.ucfirst(D)end;if D~=ap then local ar="Set"..ap;if am[ar]~=nil then return am[ar](ao,h)end end;return rawset(ao,D,h)end end;Daneel.Utilities.ToNumber=tonumber2;local as={}function Daneel.Utilities.ButtonExists(at)if as[at]==nil then as[at]=Daneel.Debug.Try(function()CS.Input.WasButtonJustPressed(at)end)end;return as[at]end;Daneel.Utilities.id=0;function Daneel.Utilities.GetId(au)if au~=nil and type(au)=="table"then local av=rawget(au,"id")if av~=nil then return av end;av=Daneel.Utilities.GetId()if au.inner~=nil and not CS.IsWebPlayer then av=tonumber(tostring(au.inner):match("%d+"))end;if av==nil then av="[no id]"end;rawset(au,"id",av)return av else Daneel.Utilities.id=Daneel.Utilities.id+1;return Daneel.Utilities.id end end;Daneel.Cache={GetId=Daneel.Utilities.GetId}Daneel.Debug={}local n="string"local d="boolean"local aw="number"local o="table"local ax="function"local ay="userdata"local az={"s",n}local aA={"t",o}Daneel.Debug.functionArgumentsInfo={["math.isinteger"]={{"number"}},["math.lerp"]={{"a",aw},{"b",aw},{"factor",aw},{"easing",n,isOptional=true}},["math.warpangle"]={{"angle",aw}},["math.round"]={{"value",aw},{"decimal",aw,isOptional=true}},["tonumber2"]={{"data"}},["math.clamp"]={{"value",aw},{"min",aw},{"max",aw}},["string.totable"]={az},["string.ucfirst"]={az},["string.lcfirst"]={az},["string.trimstart"]={az},["string.trimend"]={az},["string.trim"]={az},["string.endswith"]={az,{"chunk",n}},["string.startswith"]={az,{"chunk",n}},["string.split"]={az,{"delimiter",n},{"delimiterIsPattern",d,defaultValue=false}},["string.reverse"]={az},["table.print"]={},["table.merge"]={},["table.mergein"]={},["table.getkeys"]={aA},["table.getvalues"]={aA},["table.reverse"]={aA},["table.reindex"]={aA},["table.getvalue"]={aA,{"keys",n}},["table.setvalue"]={aA,{"keys",n}},["table.getkey"]={aA,{"value"}},["table.copy"]={aA,{"recursive",d,defaultValue=false}},["table.containsvalue"]={aA,{"value"},{"ignoreCase",d,defaultValue=false}},["table.isarray"]={aA,{"strict",d,defaultValue=true}},["table.shift"]={aA,{"returnKey",d,defaultValue=false}},["table.getlength"]={aA,{"keyType",n,isOptional=true}},["table.havesamecontent"]={{"table1",o},{"table2",o}},["table.combine"]={aA,{"values","table"},{"returnFalseIfNotSameLength",d,isOptional=true}},["table.removevalue"]={aA,{"value"},{"maxRemoveCount",aw,isOptional=true}},["table.sortby"]={aA,{"property",n},{"orderBy",n,isOptional=true}},["Daneel.Utilities.CaseProof"]={{"name",n},{"set",{n,o}}},["Daneel.Utilities.ReplaceInString"]={{"string",n},{"replacements",o}},["Daneel.Utilities.ButtonExists"]={{"buttonName",n}}}function Daneel.Debug.CheckArgType(aB,aC,aD,aE)if type(aB)=="table"and getmetatable(aB)==GameObject and aB.inner==nil then error(aE.."Provided argument '"..aC.."' is a destroyed game object '"..tostring(aB))end;if not Daneel.Config.debug.enableDebug then return Daneel.Debug.GetType(aB)end;local aF="Daneel.Debug.CheckArgType(argument, argumentName, expectedArgumentTypes[, p_errorHead]) : "local P=type(aC)if P~="string"then error(aF.."Argument 'argumentName' is of type '"..P.."' with value '"..tostring(aC).."' instead of 'string'.")end;P=type(aD)if P~="string"and P~="table"then error(aF.."Argument 'expectedArgumentTypes' is of type '"..P.."' with value '"..tostring(aD).."' instead of 'string' or 'table'.")end;if P=="string"then aD={aD}elseif#aD<=0 then error(aF.."Argument 'expectedArgumentTypes' is an empty table.")end;P=type(aE)if P~="nil"and P~="string"then error(aF.."Argument 'p_errorHead' is of type '"..P.."' with value '"..tostring(aE).."' instead of 'string'.")end;if aE==nil then aE=""end;P=Daneel.Debug.GetType(aB)local aG=type(aB)for p,aH in ipairs(aD)do if P==aH or aG==aH then return aH end end;error(aE.."Argument '"..aC.."' is of type '"..P.."' with value '"..tostring(aB).."' instead of '"..table.concat(aD,"', '").."'.")end;function Daneel.Debug.CheckOptionalArgType(aB,aC,aD,aE,aI)if aB==nil then return aI end;if not Daneel.Config.debug.enableDebug then return aB end;local aF="Daneel.Debug.CheckOptionalArgType(argument, argumentName, expectedArgumentTypes[, p_errorHead, defaultValue]) : "local P=type(aC)if P~="string"then error(aF.."Argument 'argumentName' is of type '"..P.."' with value '"..tostring(aC).."' instead of 'string'.")end;P=type(aD)if P~="string"and P~="table"then error(aF.."Argument 'expectedArgumentTypes' is of type '"..P.."' with value '"..tostring(aD).."' instead of 'string' or 'table'.")end;if P=="string"then aD={aD}elseif#aD<=0 then error(aF.."Argument 'expectedArgumentTypes' is an empty table.")end;P=type(aE)if P~="nil"and P~="string"then error(aF.."Argument 'p_errorHead' is of type '"..P.."' with value '"..tostring(aE).."' instead of 'string'.")end;if aE==nil then aF=""end;P=Daneel.Debug.GetType(aB)local aG=type(aB)for p,aH in ipairs(aD)do if P==aH or aG==aH then return aB end end;error(aE.."Optional argument '"..aC.."' is of type '"..P.."' with value '"..tostring(aB).."' instead of '"..table.concat(aD,"', '").."'.")end;function Daneel.Debug.GetType(au,aJ)local aF="Daneel.Debug.GetType( object[, luaTypeOnly] ) : "local P=type(aJ)if P~="nil"and P~="boolean"then error(aF.."Argument 'luaTypeOnly' is of type '"..P.."' with value '"..tostring(aJ).."' instead of 'boolean'.")end;if aJ==nil then aJ=false end;P=type(au)if not aJ and P=="table"then local aK=getmetatable(au)if aK~=nil then if getmetatable(aK)==Script then return"ScriptedBehavior"end;if Daneel.Config.objects~=nil then for type,au in pairs(Daneel.Config.objects)do if aK==au then return type end end end;for type,au in pairs(_G)do if aK==au then return type end end end end;return P end;oerror=error;function Daneel.Debug.SetNewError()function error(aL,aM)if Daneel.Config.debug.enableDebug and aM~=true then Daneel.Debug.StackTrace.Print()end;oerror(aL)end end;function Daneel.Debug.Disable(aN)if aN~=nil then aN=" : "..tostring(aN)end;print("Daneel.Debug.Disable()"..aN)error=oerror;Daneel.Config.debug.enableDebug=false end;function Daneel.Debug.ToRawString(j)if j==nil and Daneel.Config.debug.enableDebug then print("WARNING : Daneel.Debug.ToRawString( data ) : Argument 'data' is nil.")return nil end;local aO=nil;local aK=getmetatable(j)if aK~=nil then if aK.__tostring~=nil then local aP=aK.__tostring;aK.__tostring=nil;aO=tostring(j)aK.__tostring=aP end end;if aO==nil then aO=tostring(j)end;return aO end;function Daneel.Debug.GetNameFromValue(h)Daneel.Debug.StackTrace.BeginFunction("Daneel.Debug.GetNameFromValue",h)local aF="Daneel.Debug.GetNameFromValue(value) : "if h==nil then error(aF.." Argument 'value' is nil.")end;local aQ=table.getkey(Daneel.Config.objects,h)if aQ==nil then aQ=table.getkey(_G,h)end;Daneel.Debug.StackTrace.EndFunction()return aQ end;function Daneel.Debug.CheckArgValue(aB,aC,aR,aE,aI)Daneel.Debug.StackTrace.BeginFunction("Daneel.Debug.CheckArgValue",aB,aC,aR,aE)local aF="Daneel.Debug.CheckArgValue(argument, argumentName, expectedArgumentValues[, p_errorHead, defaultValue]) : "Daneel.Debug.CheckArgType(aC,"argumentName","string",aF)if aR==nil then error(aF.."Argument 'expectedArgumentValues' is nil.")end;Daneel.Debug.CheckOptionalArgType(aE,"p_errorHead","string",aF)if type(aR)~="table"then aR={aR}elseif#aR==0 then error(aF.."Argument 'expectedArgumentValues' is an empty table.")end;local aS=false;if type(aB)=="string"then for p,aT in ipairs(aR)do if aB:lower()==aT:lower()then aB=aT;aS=true;break end end else for p,aT in ipairs(aR)do if aB==aT then aS=true;break end end end;if not aS then if aI~=nil then aB=aI else for p,h in ipairs(aR)do aR[p]=tostring(h)end;error(aE.."The value '"..tostring(aB).."' of argument '"..aC.."' is not one of '"..table.concat(aR,"', '").."'.")end end;Daneel.Debug.StackTrace.EndFunction()return aB end;local aU=Behavior;Daneel.Debug.tryGameObject=nil;function Daneel.Debug.Try(aV)Daneel.Debug.StackTrace.BeginFunction("Daneel.Debug.Try",aV)local aF="Daneel.Debug.Try( _function ) : "Daneel.Debug.CheckArgType(aV,"_function",{"function","userdata"},aF)local aW=Daneel.Debug.tryGameObject;if aW==nil or aW.inner==nil then aW=CraftStudio.CreateGameObject("Daneel_Debug_Try")Daneel.Debug.tryGameObject=aW end;local aX=false;aW:CreateScriptedBehavior(aU,{debugTry=true,testFunction=aV,successCallback=function()aX=true end})Daneel.Debug.StackTrace.EndFunction()return aX end;function Daneel.Debug.RegisterFunction(aY,aZ)if not Daneel.Config.debug.enableDebug then return end;local a_=true;if not Daneel.Config.debug.enableStackTrace then a_=false elseif aZ.includeInStackTrace~=nil then a_=aZ.includeInStackTrace end;local aF=aY.."( "for p,M in ipairs(aZ)do if M.name==nil then M.name=M[1]end;aF=aF..M.name..", "end;aF=aF:sub(1,#aF-2)aF=aF.." ) : "local b0=table.getvalue(_G,aY)if b0~=nil then local b1=function(...)local b2={...}if a_ then Daneel.Debug.StackTrace.BeginFunction(aY,...)end;for p,M in ipairs(aZ)do if M.type==nil then M.type=M[2]if M.type==nil and M.defaultValue~=nil then M.type=type(M.defaultValue)end end;if M.type~=nil then if M.defaultValue~=nil or M.isOptional==true then b2[p]=Daneel.Debug.CheckOptionalArgType(b2[p],M.name,M.type,aF,M.defaultValue)else Daneel.Debug.CheckArgType(b2[p],M.name,M.type,aF)end elseif b2[p]==nil and not M.isOptional then error(aF.."Argument '"..M.name.."' is nil.")end;if M.value~=nil then b2[p]=Daneel.Debug.CheckArgValue(b2[p],M.name,M.value,aF,M.defaultValue)end end;local b3={b0(unpack(b2))}if a_ then Daneel.Debug.StackTrace.EndFunction()end;return unpack(b3)end;table.setvalue(_G,aY,b1)else print("Daneel.Debug.RegisterFunction() : Function with name '"..aY.."' was not found in the global table _G.")end end;Daneel.Debug.StackTrace={messages={}}function Daneel.Debug.StackTrace.BeginFunction(b4,...)if not Daneel.Config.debug.enableDebug or not Daneel.Config.debug.enableStackTrace then return end;if#Daneel.Debug.StackTrace.messages>200 then print("WARNING : your StackTrace is more than 200 items long ! Emptying the StackTrace now. Did you forget to write a 'EndFunction()' somewhere ?")Daneel.Debug.StackTrace.messages={}end;local aF="Daneel.Debug.StackTrace.BeginFunction( functionName[, ...] ) : "Daneel.Debug.CheckArgType(b4,"functionName","string",aF)local O=b4 .."( "local M={...}if#M>0 then for p,aB in ipairs(M)do if type(aB)=="string"then O=O..'"'..tostring(aB)..'", 'else O=O..tostring(aB)..", "end end;O=O:sub(1,#O-2)end;O=O.." )"table.insert(Daneel.Debug.StackTrace.messages,O)end;function Daneel.Debug.StackTrace.EndFunction()if not Daneel.Config.debug.enableDebug or not Daneel.Config.debug.enableStackTrace then return end;table.remove(Daneel.Debug.StackTrace.messages)end;function Daneel.Debug.StackTrace.Print()if not Daneel.Config.debug.enableDebug or not Daneel.Config.debug.enableStackTrace then return end;local b5=Daneel.Debug.StackTrace.messages;Daneel.Debug.StackTrace.messages={}print("~~~~~ Daneel.Debug.StackTrace ~~~~~")if#b5<=0 then print("No message in the StackTrace.")else for p,O in ipairs(b5)do if p<10 then p="0"..p end;print("#"..p.." "..O)end end end;Daneel.Event={events={},persistentEvents={}}function Daneel.Event.Listen(b6,b7,b8)local aF="Daneel.Event.Listen( eventName, functionOrObject[, isPersistent] ) : "local b9=type(b7)local ba=b6;if type(b6)=="string"then ba={b6}end;for p,b6 in pairs(ba)do if Daneel.Event.events[b6]==nil then Daneel.Event.events[b6]={}end;if Daneel.Event.persistentEvents[b6]==nil then Daneel.Event.persistentEvents[b6]={}end;if not table.containsvalue(Daneel.Event.events[b6],b7)and not table.containsvalue(Daneel.Event.persistentEvents[b6],b7)then if b8 and b9=="table"then local aK=getmetatable(b7)if aK~=nil and aK==GameObject or table.containsvalue(Daneel.Config.componentObjects,aK)then if Daneel.Config.debug.enableDebug then print(aF.."Game objects and components can't be persistent listeners",b7)end;b8=false end end;local bb=Daneel.Event.events;if b8 then bb=Daneel.Event.persistentEvents end;table.insert(bb[b6],b7)end end end;function Daneel.Event.StopListen(b6,b7)if type(b6)~="string"then b7=b6;b6=nil end;Daneel.Debug.StackTrace.BeginFunction("Daneel.Event.StopListen",b6,b7)local aF="Daneel.Event.StopListen( eventName, functionOrObject ) : "Daneel.Debug.CheckOptionalArgType(b6,"eventName","string",aF)Daneel.Debug.CheckArgType(b7,"functionOrObject",{"table","function"},aF)local ba=b6;if type(b6)=="string"then ba={b6}end;if ba==nil then ba=table.merge(table.getkeys(Daneel.Event.events),table.getkeys(Daneel.Event.persistentEvents))end;for p,b6 in pairs(ba)do local bc=Daneel.Event.events[b6]if bc~=nil then table.removevalue(bc,b7)end;bc=Daneel.Event.persistentEvents[b6]if bc~=nil then table.removevalue(bc,b7)end end;Daneel.Debug.StackTrace.EndFunction()end;function Daneel.Event.Fire(au,b6,...)local M={...}Daneel.Debug.StackTrace.BeginFunction("Daneel.Event.Fire",au,b6,...)local aF="Daneel.Event.Fire( [object, ]eventName[, ...] ) : "local P=type(au)if P=="string"or P=="nil"then if b6~=nil then table.insert(M,1,b6)end;b6=au;au=nil else Daneel.Debug.CheckArgType(au,"object","table",aF)Daneel.Debug.CheckArgType(b6,"eventName","string",aF)end;local bc={au}if au==nil then if Daneel.Event.events[b6]~=nil then bc=Daneel.Event.events[b6]end;if Daneel.Event.persistentEvents[b6]~=nil then bc=table.merge(bc,Daneel.Event.persistentEvents[b6])end end;local bd={}for p,be in ipairs(bc)do local b9=type(be)if b9=="function"or b9=="userdata"then if be(unpack(M))==false then table.insert(bd,be)end else local aK=getmetatable(be)local bf=not be.isDestroyed;if aK==GameObject and be.inner==nil then bf=false end;if bf then local aL=b6;local bg=rawget(be,b6)local bh=type(bg)if bh=="function"or bh=="userdata"then if bg(unpack(M))==false then table.insert(bd,be)end elseif bh=="string"then aL=bg end;if aK==GameObject then be:SendMessage(aL,M)end end end end;if#bd>0 then for p,be in pairs(bd)do Daneel.Event.StopListen(b6,be)end end;Daneel.Debug.StackTrace.EndFunction()end;table.mergein(Daneel.Debug.functionArgumentsInfo,{["Daneel.Event.Listen"]={{"eventName",{n,o}},{"functionOrObject",{o,ax,ay}},{"isPersistent",defaultValue=false}}})Daneel.Time={realTime=0.0,realDeltaTime=0.0,time=0.0,deltaTime=0.0,timeScale=1.0,frameCount=0}Daneel.Storage={}function Daneel.Storage.Save(aY,j,bi)if j~=nil and type(j)~="table"then j={value=j,isSavedByDaneel=true}end;CS.Storage.Save(aY,j,function(error)if error~=nil then if Daneel.Config.debug.enableDebug then print("Daneel.Storage.Save( name, data[, callback] ) : Error saving with name, data and error : ",aY,j,error.message)end end;if bi~=nil then if error==nil then error={}end;bi(error.message)end end)end;function Daneel.Storage.Load(aY,aI,bi)if bi==nil and type(aI)=="function"then bi=aI;aI=nil end;local h=nil;CS.Storage.Load(aY,function(error,j)if error~=nil then if Daneel.Config.debug.enableDebug then print("Daneel.Storage.Load( name[, defaultValue, callback] ) : Error loading with name, default value and error",aY,aI,error.message)end;j=nil end;h=aI;if j~=nil then if type(j)=="table"and j.value~=nil and j.isSavedByDaneel then h=j.value else h=j end end;if bi~=nil then if error==nil then error={}end;bi(h,error.message)end end)return h end;table.mergein(Daneel.Debug.functionArgumentsInfo,{["Daneel.Storage.Save"]={{"name",n},{"data",isOptional=true},{"callback","function",isOptional=true}},["Daneel.Storage.Load"]={{"name",n},{"defaultValue",isOptional=true},{"callback","function",isOptional=true}}})function Daneel.DefaultConfig()local bj={debug={enableDebug=false,enableStackTrace=false},objects={GameObject=GameObject,Vector3=Vector3,Quaternion=Quaternion,Plane=Plane,Ray=Ray},componentObjects={ScriptedBehavior=ScriptedBehavior,ModelRenderer=ModelRenderer,MapRenderer=MapRenderer,Camera=Camera,Transform=Transform,Physics=Physics,TextRenderer=TextRenderer,NetworkSync=NetworkSync},componentTypes={},assetObjects={Script=Script,Model=Model,ModelAnimation=ModelAnimation,Map=Map,TileSet=TileSet,Sound=Sound,Scene=Scene,Font=Font},assetTypes={}}return bj end;Daneel.Config=Daneel.DefaultConfig()Daneel.Config.assetTypes=table.getkeys(Daneel.Config.assetObjects)function Daneel.Load()if Daneel.isLoaded then return end;Daneel.isLoading=true;local bk=Daneel.UserConfig;if type(bk)=="function"then bk=bk()end;if bk~=nil then table.mergein(Daneel.Config,bk,true)end;for p,aY in ipairs(Daneel.modules.moduleNames)do local bl=Daneel.modules[aY]if bl.isConfigLoaded~=true then bl.isConfigLoaded=true;if bl.Config==nil then local bj=bl.DefaultConfig;if type(bj)=="function"then bj=bj()end;if bj==nil then bj={}end;bl.Config=bj end;local bk=bl.UserConfig;if type(bk)=="function"then bk=bk()end;if bk~=nil then table.mergein(bl.Config,bk,true)end;if bl.Config.objects~=nil then table.mergein(Daneel.Config.objects,bl.Config.objects)end;if bl.Config.componentObjects~=nil then table.mergein(Daneel.Config.componentObjects,bl.Config.componentObjects)table.mergein(Daneel.Config.objects,bl.Config.componentObjects)end end end;table.mergein(Daneel.Config.objects,Daneel.Config.componentObjects,Daneel.Config.assetObjects)for bm,bn in pairs(Daneel.Config.componentObjects)do Daneel.Utilities.AllowDynamicGettersAndSetters(bn,{Component})if bm~="ScriptedBehavior"then bn["__tostring"]=function(bo)return bm..": "..bo:GetId()end end end;table.mergein(Daneel.Config.componentTypes,table.getkeys(Daneel.Config.componentObjects))if Daneel.Config.debug.enableDebug then if Daneel.Config.debug.enableStackTrace then Daneel.Debug.SetNewError()end;for ar,j in pairs(Daneel.Debug.functionArgumentsInfo)do Daneel.Debug.RegisterFunction(ar,j)end end;for bp,bq in pairs(Daneel.Config.assetObjects)do Daneel.Utilities.AllowDynamicGettersAndSetters(bq,{Asset})bq["__tostring"]=function(br)return bp..": "..Daneel.Utilities.GetId(br)..": '"..Map.GetPathInPackage(br).."'"end end;CS.IsWebPlayer=type(Camera.ProjectionMode.Orthographic)=="number"Daneel.Debug.StackTrace.BeginFunction("Daneel.Load")for p,aY in ipairs(Daneel.modules.moduleNames)do local bl=Daneel.modules[aY]if bl.isLoaded~=true then bl.isLoaded=true;if type(bl.Load)=="function"then bl.Load()end end end;Daneel.isLoaded=true;Daneel.isLoading=false;if Daneel.Config.debug.enableDebug then print("~~~~~ Daneel loaded ~~~~~")end;Daneel.moduleUpdateFunctions={}for p,aY in ipairs(Daneel.modules.moduleNames)do local bl=Daneel.modules[aY]if bl.doNotCallUpdate~=true then if type(bl.Update)=="function"and not table.containsvalue(Daneel.moduleUpdateFunctions,bl.Update)then table.insert(Daneel.moduleUpdateFunctions,bl.Update)end end end;Daneel.Debug.StackTrace.EndFunction()end;function Behavior.Awake(bs)if bs.debugTry==true then CraftStudio.Destroy(bs)bs.testFunction()bs.successCallback()return end;if table.getvalue(_G,"LOAD_DANEEL")~=nil and LOAD_DANEEL==false then return end;if Daneel.isAwake then if Daneel.Config.debug.enableDebug then print("Daneel:Awake() : You tried to load Daneel twice ! The 'Daneel' scripted behavior is on two game objects inside the same scene. This time, it was on "..tostring(bs.gameObject))end;CS.Destroy(bs)return end;Daneel.isAwake=true;Daneel.Event.Listen("OnSceneLoad",function()Daneel.isAwake=false end)Daneel.Load()Daneel.Debug.StackTrace.messages={}Daneel.Debug.StackTrace.BeginFunction("Daneel.Awake")for p,aY in ipairs(Daneel.modules.moduleNames)do local bl=Daneel.modules[aY]if type(bl.Awake)=="function"then bl.Awake()end end;if Daneel.Config.debug.enableDebug then print("~~~~~ Daneel awake ~~~~~")end;Daneel.Event.Fire("OnAwake")Daneel.Debug.StackTrace.EndFunction()end;function Behavior.Start(bs)if bs.debugTry then return end;Daneel.Debug.StackTrace.BeginFunction("Daneel.Start")for p,aY in ipairs(Daneel.modules.moduleNames)do local bl=Daneel.modules[aY]if type(bl.Start)=="function"then bl.Start()end end;if Daneel.Config.debug.enableDebug then print("~~~~~ Daneel started ~~~~~")end;Daneel.Event.Fire("OnStart")Daneel.Debug.StackTrace.EndFunction()end;function Behavior.Update(bs)if bs.debugTry then return end;local bt=os.clock()Daneel.Time.realDeltaTime=bt-Daneel.Time.realTime;Daneel.Time.realTime=bt;Daneel.Time.deltaTime=Daneel.Time.realDeltaTime*Daneel.Time.timeScale;Daneel.Time.time=Daneel.Time.time+Daneel.Time.deltaTime;Daneel.Time.frameCount=Daneel.Time.frameCount+1;for p=1,#Daneel.moduleUpdateFunctions do Daneel.moduleUpdateFunctions[p]()end end;local n="string"local d="boolean"local aw="number"local o="table"local bu="GameObject"local bv="Vector2"local bw="Vector3"local bx={"params",o}setmetatable(Vector3,{__call=function(am,...)return am:New(...)end})setmetatable(Quaternion,{__call=function(am,...)return am:New(...)end})setmetatable(Plane,{__call=function(am,...)return am:New(...)end})Plane.__tostring=function(by)return"Plane: { normal="..tostring(by.normal)..", distance="..tostring(by.distance).." }"end;Asset={}Asset.__index=Asset;setmetatable(Asset,{__call=function(am,...)return am.Get(...)end})local bz=table.merge("string",Daneel.Config.assetTypes)function Asset.Get(bA,bp,bB)local aF="Asset.Get( assetPath[, assetType, errorIfAssetNotFound] ) : "if bA==nil then if Daneel.Config.debug.enableDebug then error(aF.."Argument 'assetPath' is nil.")end;return nil end;local P=Daneel.Debug.CheckArgType(bA,"assetPath",bz,aF)if bp~=nil then Daneel.Debug.CheckArgType(bp,"assetType","string",aF)bp=Daneel.Debug.CheckArgValue(bp,"assetType",Daneel.Config.assetTypes,aF)end;if P~="string"then if bp~=nil and P~=bp then error(aF.."Provided asset '"..bA.."' has a different type '"..P.."' than the provided 'assetType' argument '"..bp.."'.")end;return bA end;Daneel.Debug.CheckOptionalArgType(bB,"errorIfAssetNotFound","boolean",aF)local br=nil;if bp==nil then br=CraftStudio.FindAsset(bA)else br=CraftStudio.FindAsset(bA,bp)end;if br==nil and bB then if bp==nil then bp="asset"end;error(aF.."Argument 'assetPath' : "..bp.." with name '"..bA.."' was not found.")end;return br end;function Asset.GetPath(br)return Map.GetPathInPackage(br)end;function Asset.GetName(br)local aY=rawget(br,"name")if aY==nil then aY=Asset.GetPath(br):gsub("^(.*/)","")rawset(br,"name",aY)end;return aY end;function Asset.GetId(br)return Daneel.Utilities.GetId(br)end;Component={}Component.__index=Component;function Component.Set(bo,bC)for D,h in pairs(bC)do bo[D]=h end end;function Component.Destroy(bo)table.removevalue(bo.gameObject,bo)CraftStudio.Destroy(bo)end;function Component.GetId(bo)return Daneel.Utilities.GetId(bo)end;table.mergein(Daneel.Debug.functionArgumentsInfo,{["Asset.Get"]={{"assetPath"},{"assetType",isOptional=true},{"errorIfAssetNotFound",defaultValue=false}},["Asset.GetPath"]={{"asset",Daneel.Config.assetTypes}},["Asset.GetName"]={{"asset",Daneel.Config.assetTypes}},["Component.Set"]={{"component",Daneel.Config.componentTypes},{"params",defaultValue={}}},["Component.Destroy"]={{"component",Daneel.Config.componentTypes}}})Map.oGetPathInPackage=Map.GetPathInPackage;function Map.GetPathInPackage(br)local bD=rawget(br,"path")if bD==nil then bD=Map.oGetPathInPackage(br)end;return bD end;Map.oLoadFromPackage=Map.LoadFromPackage;function Map.LoadFromPackage(bD,bi)Map.oLoadFromPackage(bD,function(bE)if bE~=nil then rawset(bE,"path",bD)bE.isDynamicallyLoaded=true end;bi(bE)end)end;Map.oGetBlockIDAt=Map.GetBlockIDAt;function Map.GetBlockIDAt(bE,bF,bG,bH)if type(bF)=="table"then bH=bF.z;bG=bF.y;bF=bF.x end;return Map.oGetBlockIDAt(bE,bF,bG,bH)end;Map.oGetBlockOrientationAt=Map.GetBlockOrientationAt;function Map.GetBlockOrientationAt(bE,bF,bG,bH)if type(bF)=="table"then bH=bF.z;bG=bF.y;bF=bF.x end;return Map.GetBlockOrientationAt(bE,bF,bG,bH)end;Map.oSetBlockAt=Map.SetBlockAt;function Map.SetBlockAt(bE,bF,bG,bH,av,bI)if type(bF)=="table"then av=bG;bI=bH;bH=bF.z;bG=bF.y;bF=bF.x end;if bI==nil then Map.oSetBlockAt(bE,bF,bG,bH,av)else Map.oSetBlockAt(bE,bF,bG,bH,av,bI)end end;Transform.oSetLocalScale=Transform.SetLocalScale;function Transform.SetLocalScale(bJ,bK)if type(bK)=="number"then bK=Vector3:New(bK)end;Transform.oSetLocalScale(bJ,bK)end;function Transform.SetScale(bJ,bK)if type(bK)=="number"then bK=Vector3:New(bK)end;local bL=bJ.gameObject:GetParent()if bL~=nil then bK=bK/bL.transform:GetScale()end;bJ:SetLocalScale(bK)end;function Transform.GetScale(bJ)local bK=bJ:GetLocalScale()local bL=bJ.gameObject:GetParent()if bL~=nil then bK=bK*bL.transform:GetScale()end;return bK end;function Transform.WorldToLocal(bJ,bM)local bu=bJ.worldToLocalGO;if bu==nil then bu=CS.CreateGameObject("WorldToLocal",bJ.gameObject)bJ.worldToLocalGO=bu end;bu.transform:SetPosition(bM)return bu.transform:GetLocalPosition()end;function Transform.LocalToWorld(bJ,bM)local bu=bJ.worldToLocalGO;if bu==nil then bu=CS.CreateGameObject("WorldToLocal",bJ.gameObject)bJ.worldToLocalGO=bu end;bu.transform:SetLocalPosition(bM)return bu.transform:GetPosition()end;ModelRenderer.oSetModel=ModelRenderer.SetModel;function ModelRenderer.SetModel(bN,bO)local bP=nil;if bO~=nil then bP=Asset.Get(bO,"Model",true)end;ModelRenderer.oSetModel(bN,bP)end;ModelRenderer.oSetAnimation=ModelRenderer.SetAnimation;function ModelRenderer.SetAnimation(bN,bQ)local bR=nil;if bQ~=nil then bR=Asset.Get(bQ,"ModelAnimation",true)end;ModelRenderer.oSetAnimation(bN,bR)end;function ModelRenderer.Set(bN,bC)if bC.model~=nil then bN:SetModel(bC.model)bC.model=nil end;if bC.animationTime~=nil and bC.animation~=nil then bN:SetAnimation(bC.animation)bC.animation=nil end;Component.Set(bN,bC)end;MapRenderer.oSetMap=MapRenderer.SetMap;function MapRenderer.SetMap(bS,bT,bU)local bE=nil;if bT~=nil then bE=Asset.Get(bT,"Map",true)end;if bU~=nil then MapRenderer.oSetMap(bS,bE,bU)else MapRenderer.oSetMap(bS,bE)end end;MapRenderer.oSetTileSet=MapRenderer.SetTileSet;function MapRenderer.SetTileSet(bS,bV)local bW=nil;if bV~=nil then bW=Asset.Get(bV,"TileSet",true)end;MapRenderer.oSetTileSet(bS,bW)end;function MapRenderer.Set(bS,bC)if bC.map~=nil then bS:SetMap(bC.map)bC.map=nil end;Component.Set(bS,bC)end;function MapRenderer.LoadNewMap(bS,bi)local bE=bS:GetMap()if bE~=nil then Map.LoadFromPackage(Map.GetPathInPackage(bE),function(bE)bS:SetMap(bE)if bi~=nil then bi(bE)end end)elseif Daneel.Config.debug.enableDebug==true then print("ERROR: MapRenderer.LoadNewMap(): No map is set on the provided map renderer. Can't load new map.")end end;TextRenderer.oSetFont=TextRenderer.SetFont;function TextRenderer.SetFont(bX,bY)local bZ=nil;if bY~=nil then bZ=Asset.Get(bY,"Font",true)end;TextRenderer.oSetFont(bX,bZ)end;TextRenderer.oSetAlignment=TextRenderer.SetAlignment;function TextRenderer.SetAlignment(bX,b_)if type(b_)=="string"then local c0="Center"if Daneel.Config.textRenderer~=nil and Daneel.Config.textRenderer.alignment~=nil then c0=Daneel.Config.textRenderer.alignment end;local aF="TextRenderer.SetAlignment( textRenderer, alignment ) : "b_=Daneel.Debug.CheckArgValue(b_,"alignment",{"Left","Center","Right"},aF,c0)b_=TextRenderer.Alignment[b_]end;TextRenderer.oSetAlignment(bX,b_)end;function TextRenderer.SetTextWidth(bX,c1)local c2=bX:GetTextWidth()/bX.gameObject.transform:GetScale()bX.gameObject.transform:SetScale(c1/c2)end;Camera.oSetProjectionMode=Camera.SetProjectionMode;function Camera.SetProjectionMode(c3,c4)if type(c4)=="string"then local c0="Perspective"if Daneel.Config.camera~=nil and Daneel.Config.camera.projectionMode~=nil then c0=Daneel.Config.camera.projectionMode end;c4=Daneel.Debug.CheckArgValue(c4,"projectionMode",{"Perspective","Orthographic"},"Camera.SetProjectionMode( camera[, projectionMode] ) : ",c0)c4=Camera.ProjectionMode[c4]end;Camera.oSetProjectionMode(c3,c4)end;function Camera.Set(c3,bC)if bC.projectionMode~=nil then c3:SetProjectionMode(bC.projectionMode)bC.projectionMode=nil end;Component.Set(c3,bC)end;function Camera.GetPixelsToUnits(c3)local c5=CS.Screen.GetSize()local c6=c5.y;if c5.x<c5.y then c6=c5.x end;if c3:GetProjectionMode()==Camera.ProjectionMode.Orthographic then return c3:GetOrthographicScale()/c6 else return math.tan(math.rad(c3:GetFOV()/2))/c6*2 end end;function Camera.GetUnitsToPixels(c3)local c7=c3:GetPixelsToUnits()if c7~=nil and c7~=0 then return 1/c7 end end;function Camera.GetBaseDistance(c3)if c3:GetProjectionMode()==Camera.ProjectionMode.Perspective then return 0.5/math.tan(math.rad(c3:GetFOV()/2))end end;function Camera.IsPositionInFrustum(c3,bM)local c8=c3.gameObject.transform:WorldToLocal(bM)if c8.z<0 then local c5=CS.Screen.GetSize()local c9=Vector2.New(0)if c3:GetProjectionMode()==Camera.ProjectionMode.Orthographic then c9=c5*c3:GetPixelsToUnits()/2 else local c6=c5.y;if c5.x<c5.y then c6=c5.x end;c9=-c8.z/c3:GetBaseDistance()*c5/c6;c9=c9/2 end;if c8.x>=-c9.x and c8.x<=c9.x and c8.y>=-c9.y and c8.y<=c9.y then return true end end;return false end;function Camera.WorldToScreenPoint(c3,bM)local c8=c3.gameObject.transform:WorldToLocal(bM)local ca=c3:GetUnitsToPixels()local c5=CS.Screen.GetSize()if c3:GetProjectionMode()==Camera.ProjectionMode.Orthographic then c8.x=c8.x*ca+c5.x/2;c8.y=-c8.y*ca+c5.y/2 else local cb=math.abs(c8.z)c8.x=c8.x/cb*ca+c5.x/2;c8.y=-c8.y/cb*ca+c5.y/2 end;return c8 end;Camera.oGetFOV=Camera.GetFOV;function Camera.GetFOV(c3)return math.round(Camera.oGetFOV(c3),2)end;Camera.GetFov=Camera.GetFOV;Camera.SetFov=Camera.SetFOV;Camera.oProject=Camera.Project;function Camera.Project(c3,bM)return setmetatable(Camera.oProject(c3,bM),Vector2)end;table.mergein(Daneel.Debug.functionArgumentsInfo,{["Transform.SetLocalScale"]={{"transform","Transform"},{"number",{aw,bw}}},["Transform.SetScale"]={{"transform","Transform"},{"number",{aw,bw}}},["Transform.GetScale"]={{"transform","Transform"}},["Transform.WorldToLocal"]={{"transform","Transform"},{"position",bw}},["Transform.LocalToWorld"]={{"transform","Transform"},{"position",bw}},["ModelRenderer.SetModel"]={{"modelRenderer","ModelRenderer"},{"modelNameOrAsset",{n,"Model"},isOptional=true}},["ModelRenderer.SetAnimation"]={{"modelRenderer","ModelRenderer"},{"animationNameOrAsset",{n,"ModelAnimation"},isOptional=true}},["ModelRenderer.Set"]={{"modelRenderer","ModelRenderer"},bx},["MapRenderer.SetMap"]={{"mapRenderer","MapRenderer"},{"mapNameOrAsset",{n,"Map"},isOptional=true},{"replaceTileSet",defaultValue=true}},["MapRenderer.SetTileSet"]={{"mapRenderer","MapRenderer"},{"tileSetNameOrAsset",{n,"TileSet"},isOptional=true}},["MapRenderer.Set"]={{"mapRenderer","MapRenderer"},bx},["MapRenderer.LoadNewMap"]={{"mapRenderer","MapRenderer"},{"callback","function",isOptional=true}},["TextRenderer.SetFont"]={{"textRenderer","TextRenderer"},{"fontNameOrAsset",{n,"Font"},isOptional=true}},["TextRenderer.SetAlignment"]={{"textRenderer","TextRenderer"},{"alignment",{n,"userdata",aw}}},["TextRenderer.SetTextWidth"]={{"textRenderer","TextRenderer"},{"width",aw}},["Camera.SetProjectionMode"]={{"camera","Camera"},{"projectionMode",{n,"userdata",aw}}},["Camera.Set"]={{"camera","Camera"},bx},["Camera.GetPixelsToUnits"]={{"camera","Camera"}},["Camera.GetUnitsToPixels"]={{"camera","Camera"}},["Camera.GetBaseDistance"]={{"camera","Camera"}},["Camera.IsPositionInFrustum"]={{"camera","Camera"},{"position",bw}},["Camera.WorldToScreenPoint"]={{"camera","Camera"},{"position",bw}},["Camera.GetFOV"]={{"camera","Camera"}}})Vector2={}Vector2.__index=Vector2;setmetatable(Vector2,{__call=function(am,...)return am.New(...)end})Daneel.Config.objects.Vector2=Vector2;function Vector2.__tostring(cc)return"Vector2: { x="..cc.x..", y="..cc.y.." }"end;function Vector2.New(bF,bG)local cd=setmetatable({x=bF,y=bG},Vector2)if type(bF)=="table"then cd.x=bF.x;cd.y=bF.y elseif bG==nil then cd.y=bF end;return cd end;function Vector2.GetLength(cd)return math.sqrt(cd.x^2+cd.y^2)end;function Vector2.GetSqrLength(cd)return cd.x^2+cd.y^2 end;function Vector2.Normalized(cd)return Vector2.New(cd.x,cd.y):Normalize()end;function Vector2.Normalize(cd)local H=cd:GetLength()if H~=0 then cd=cd/H end end;function Vector2.__add(c,d)return Vector2.New(c.x+d.x,c.y+d.y)end;function Vector2.__sub(c,d)return Vector2.New(c.x-d.x,c.y-d.y)end;function Vector2.__mul(c,d)local ce=nil;if type(c)=="number"then ce=Vector2.New(c*d.x,c*d.y)elseif type(d)=="number"then ce=Vector2.New(c.x*d,c.y*d)else ce=Vector2.New(c.x*d.x,c.y*d.y)end;return ce end;function Vector2.__div(c,d)local aF="Vector2.__div(a, b) : "local ce=nil;if type(c)=="number"then if d.x==0 or d.y==0 then error(aF.."One of the components of the denominator is equal to 0. Can't divide by 0 !",c,d)end;ce=Vector2.New(c/d.x,c/d.y)elseif type(d)=="number"then if d==0 then error(aF.."The denominator is equal to 0 ! Can't divide by 0 !",c,d)end;ce=Vector2.New(c.x/d,c.y/d)else if d.x==0 or d.y==0 then error(aF.."One of the components of the denominator is equal to 0. Can't divide by 0 !",c,d)end;ce=Vector2.New(c.x/d.x,c.y/d.y)end;return ce end;function Vector2.__unm(cd)return Vector2.New(-cd.x,-cd.y)end;function Vector2.__pow(cd,cf)return Vector2.New(cd.x^cf,cd.y^cf)end;function Vector2.__eq(c,d)return c.x==d.x and c.y==d.y end;Vector3.tostringRoundValue=3;Vector3.__tostring=function(cd)local cg=Vector3.tostringRoundValue;if cg~=nil and cg>=0 then return"Vector3: { x="..math.round(cd.x,cg)..", y="..math.round(cd.y,cg)..", z="..math.round(cd.z,cg).." }"else return"Vector3: { x="..cd.x..", y="..cd.y..", z="..cd.z.." }"end end;function Vector3.New(bF,bG,bH,ch)if bF==Vector3 then bF=bG;bG=bH;bH=ch end;if type(bF)=="table"then if bF.z==nil then bG=bF.y;bF=bF.x else bG=bF.y;bH=bF.z;bF=bF.x end elseif type(bG)=="table"then bH=bG.y;bG=bG.x end;bF=bF or 0;bG=bG or bF;bH=bH or bG;return setmetatable({x=bF,y=bG,z=bH},Vector3)end;function Vector3.GetLength(cd)return math.sqrt(cd.x^2+cd.y^2+cd.z^2)end;function Vector3.GetSqrLength(cd)return cd.x^2+cd.y^2+cd.z^2 end;function Vector3.ToString(cd)for p,ci in pairs({"x","y","z"})do if tostring(cd[ci])=="-0"then cd[ci]=0 end end;return cd.x.." "..cd.y.." "..cd.z end;function string.tovector(cj)local cd=Vector3:New(0)local S={"z","y","x"}for w in string.gmatch(cj,"[0-9.-]+")do cd[table.remove(S)]=tonumber(w)end;if table.remove(S)=="z"then setmetatable(cd,Vector2)cd.z=nil end;return cd end;table.mergein(Daneel.Debug.functionArgumentsInfo,{["Vector2.New"]={{"x",{n,aw,o,bv,bw}},{"y",{n,aw},isOptional=true}},["Vector2.GetLength"]={{"vector",bv}},["Vector2.GetSqrLength"]={{"vector",bv}},["Vector2.Normalized"]={{"vector",bv}},["Vector2.Normalize"]={{"vector",bv}},["Vector2.__add"]={{"a",bv},{"b",bv}},["Vector2.__sub"]={{"a",bv},{"b",bv}},["Vector2.__mul"]={{"a",{aw,bv}},{"b",{aw,bv}}},["Vector2.__div"]={{"a",{aw,bv}},{"b",{aw,bv}}},["Vector2.__unm"]={{"vector",bv}},["Vector2.__pow"]={{"vector",bv},{"exp","number"}},["Vector2.__add"]={{"a",bv},{"b",bv}},["Vector3.GetLength"]={{"vector",bw}},["Vector3.GetSqrLength"]={{"vector",bw}},["Vector3.ToString"]={{"vector",bw}},["string.tovector"]={{"sVector",n}}})CraftStudio.Input.oGetMousePosition=CraftStudio.Input.GetMousePosition;function CraftStudio.Input.GetMousePosition()return setmetatable(CraftStudio.Input.oGetMousePosition(),Vector2)end;CraftStudio.Input.oGetMouseDelta=CraftStudio.Input.GetMouseDelta;function CraftStudio.Input.GetMouseDelta()return setmetatable(CraftStudio.Input.oGetMouseDelta(),Vector2)end;CraftStudio.Screen.oSetSize=CraftStudio.Screen.SetSize;function CraftStudio.Screen.SetSize(bF,bG)if type(bF)=="table"then bG=bF.y;bF=bF.x end;CraftStudio.Screen.oSetSize(bF,bG)CraftStudio.Screen.GetSize()end;CraftStudio.Screen.oGetSize=CraftStudio.Screen.GetSize;function CraftStudio.Screen.GetSize()local c5=CraftStudio.Screen.oGetSize()CraftStudio.Screen.aspectRatio=c5.x/c5.y;return setmetatable(c5,Vector2)end;CraftStudio.Screen.GetSize()RaycastHit={}RaycastHit.__index=RaycastHit;setmetatable(RaycastHit,{__call=function(am,...)return am.New(...)end})Daneel.Config.objects.RaycastHit=RaycastHit;RaycastHit.__index=function(ck,D)if D=="hitLocation"then return ck.hitPosition end end;function RaycastHit.__tostring(ao)local O="RaycastHit: { "local cl=true;for D,h in pairs(ao)do if cl then O=O..D.."="..tostring(h)cl=false else O=O..", "..D.."="..tostring(h)end end;return O.." }"end;Daneel.Debug.functionArgumentsInfo["RaycastHit.New"]={{"params",defaultValue={}}}function RaycastHit.New(bC)if bC==nil then bC={}end;return setmetatable(bC,RaycastHit)end;setmetatable(Ray,{__call=function(am,...)return am:New(...)end})function Ray.Cast(cm,cn,co)local cp={}for p,aW in pairs(cn)do if aW.inner~=nil then local ck=cm:IntersectsGameObject(aW)if ck~=nil then table.insert(cp,ck)end end end;if co==true then cp=table.sortby(cp,"distance")end;return cp end;function Ray.IntersectsGameObject(cm,cq)local aW=GameObject.Get(cq,true)local ck=nil;if aW.inner==nil then return nil end;local bo=aW.modelRenderer;if bo~=nil then ck=cm:IntersectsModelRenderer(bo,true)end;if ck==nil then bo=aW.mapRenderer;if bo~=nil then ck=cm:IntersectsMapRenderer(bo,true)end end;if ck==nil then bo=aW.textRenderer;if bo~=nil then ck=cm:IntersectsTextRenderer(bo,true)end end;if ck~=nil then ck.gameObject=aW end;return ck end;Ray.oIntersectsPlane=Ray.IntersectsPlane;function Ray.IntersectsPlane(cm,cr,cs)local cb=Ray.oIntersectsPlane(cm,cr)if cs and cb~=nil then return RaycastHit.New({distance=cb,hitPosition=cm.position+cm.direction*cb,hitObject=cr})end;return cb end;Ray.oIntersectsModelRenderer=Ray.IntersectsModelRenderer;function Ray.IntersectsModelRenderer(cm,bN,cs)local cb,ct=Ray.oIntersectsModelRenderer(cm,bN)if cs and cb~=nil then return RaycastHit.New({distance=cb,normal=ct,hitPosition=cm.position+cm.direction*cb,hitObject=bN,gameObject=bN.gameObject})end;return cb,ct end;Ray.oIntersectsMapRenderer=Ray.IntersectsMapRenderer;function Ray.IntersectsMapRenderer(cm,bS,cs)local cb,ct,cu,cv=Ray.oIntersectsMapRenderer(cm,bS)if cu~=nil then setmetatable(cu,Vector3)end;if cv~=nil then setmetatable(cv,Vector3)end;if cs and cb~=nil then return RaycastHit.New({distance=cb,normal=ct,hitBlockLocation=cu,adjacentBlockLocation=cv,hitPosition=cm.position+cm.direction*cb,hitObject=bS,gameObject=bS.gameObject})end;return cb,ct,cu,cv end;Ray.oIntersectsTextRenderer=Ray.IntersectsTextRenderer;function Ray.IntersectsTextRenderer(cm,bX,cs)local cb,ct=Ray.oIntersectsTextRenderer(cm,bX)if cs and cb~=nil then return RaycastHit.New({distance=cb,normal=ct,hitPosition=cm.position+cm.direction*cb,hitObject=bX,gameObject=bX.gameObject})end;return cb,ct end;function Scene.Load(cw)CraftStudio.LoadScene(cw)end;CraftStudio.oLoadScene=CraftStudio.LoadScene;function CraftStudio.LoadScene(cw)local cx=Asset.Get(cw,"Scene",true)Daneel.Event.Fire("OnSceneLoad",cx)Daneel.Event.events={}Scene.current=cx;CraftStudio.oLoadScene(cx)end;function Scene.Append(cw,cy)local cx=Asset.Get(cw,"Scene",true)local bL=nil;if cy~=nil then bL=GameObject.Get(cy,true)end;return CraftStudio.AppendScene(cx,bL)end;CraftStudio.oDestroy=CraftStudio.Destroy;function CraftStudio.Destroy(au)if type(au)=="table"then Daneel.Event.Fire(au,"OnDestroy",au)Daneel.Event.StopListen(au)au.isDestroyed=true end;CraftStudio.oDestroy(au)end;local cz={"ray","Ray"}local cA={"returnRaycastHit",defaultValue=false}table.mergein(Daneel.Debug.functionArgumentsInfo,{["Ray.Cast"]={cz,{"gameObjects",o},{"sortByDistance",defaultValue=false}},["Ray.IntersectsGameObject"]={cz,{"gameObjectNameOrInstance",{n,bu}},cA},["Ray.IntersectsPlane"]={cz,{"plane","Plane"},cA},["Ray.IntersectsModelRenderer"]={cz,{"modelRenderer","ModelRenderer"},cA},["Ray.IntersectsMapRenderer"]={cz,{"mapRenderer","MapRenderer"},cA},["Ray.IntersectsTextRenderer"]={cz,{"textRenderer","TextRenderer"},cA},["Scene.Load"]={{"sceneNameOrAsset",{n,"Scene"}}},["CraftStudio.LoadScene"]={{"sceneNameOrAsset",{n,"Scene"}}},["Scene.Append"]={{"sceneNameOrAsset",{n,"Scene"}},{"parentNameOrInstance",{n,bu},isOptional=true}},["CraftStudio.Destroy"]={{"object"}}})CraftStudio.Input.isMouseLocked=false;CraftStudio.Input.oLockMouse=CraftStudio.Input.LockMouse;function CraftStudio.Input.LockMouse()CraftStudio.Input.isMouseLocked=true;CraftStudio.Input.oLockMouse()end;CraftStudio.Input.oUnlockMouse=CraftStudio.Input.UnlockMouse;function CraftStudio.Input.UnlockMouse()CraftStudio.Input.isMouseLocked=false;CraftStudio.Input.oUnlockMouse()end;function CraftStudio.Input.ToggleMouseLock()if CraftStudio.Input.isMouseLocked then CraftStudio.Input.UnlockMouse()else CraftStudio.Input.LockMouse()end end;setmetatable(GameObject,{__call=function(am,...)return am.New(...)end})function GameObject.__tostring(aW)if rawget(aW,"inner")==nil then return"Destroyed GameObject: "..tostring(aW:GetId())..": '"..tostring(aW._name).."': "..Daneel.Debug.ToRawString(aW)end;return"GameObject: "..aW:GetId()..": '"..aW:GetName().."'"end;function GameObject.__index(aW,D)if GameObject[D]~=nil then return GameObject[D]end;if type(D)=="string"then local ap=string.ucfirst(D)if D~=ap then local ar="Get"..ap;if GameObject[ar]~=nil then return GameObject[ar](aW)end end end;return nil end;function GameObject.__newindex(aW,D,h)local ap=D;if type(D)=="string"then ap=string.ucfirst(D)end;if D~=ap and D~="transform"then local ar="Set"..ap;if GameObject[ar]~=nil then return GameObject[ar](aW,h)end end;rawset(aW,D,h)end;function GameObject.New(aY,bC)local aW=nil;local cx=Asset.Get(aY,"Scene")if cx~=nil then aW=CraftStudio.AppendScene(cx)else aW=CraftStudio.CreateGameObject(aY)end;if bC~=nil and aW~=nil then aW:Set(bC)end;return aW end;function GameObject.Instantiate(cB,cw,bC)local cx=Asset.Get(cw,"Scene",true)local aW=CraftStudio.Instantiate(cB,cx)if bC~=nil then aW:Set(bC)end;return aW end;function GameObject.Set(aW,bC)local aF="GameObject.Set( gameObject[, params] ) :"if bC.parent~=nil then aW:SetParent(bC.parent)bC.parent=nil end;if bC.transform~=nil then aW.transform:Set(bC.transform)bC.transform=nil end;for p,bm in pairs(Daneel.Config.componentTypes)do if bm~="ScriptedBehavior"and bm~="Transform"then local cC=string.lcfirst(bm)local cD=bC[cC]if cD~=nil then bC[cC]=nil;Daneel.Debug.CheckArgType(cD,"params."..cC,"table",aF)local bo=aW[cC]if bo==nil then bo=aW:GetComponent(bm)end;if bo==nil then bo=aW:AddComponent(bm,cD)else bo:Set(cD)end end end end;for D,h in pairs(bC)do if D=="tags"then aW:RemoveTag()aW:AddTag(h)else aW[D]=h end end end;function GameObject.Get(aY,cE)if getmetatable(aY)==GameObject then return aY end;local aF="GameObject.Get( name[, errorIfGameObjectNotFound] ) : "local cF=string.split(aY,".")local aW=CraftStudio.FindGameObject(cF[1])if aW==nil and cE==true then error(aF.."GameObject with name '"..cF[1].."' (from '"..aY.."') was not found.")end;if aW~=nil then local cG=aY;local cH=table.remove(cF,1)for p,aY in ipairs(cF)do aW=aW:GetChild(aY)cH=cH.."."..aY;if aW==nil then if cE==true then error(aF.."GameObject with name '"..cH.."' (from '"..cG.."') was not found.")end;break end end end;return aW end;function GameObject.GetId(aW)return Daneel.Utilities.GetId(aW)end;GameObject.oSetParent=GameObject.SetParent;function GameObject.SetParent(aW,cy,cI)local bL=nil;if cy~=nil then bL=GameObject.Get(cy,true)end;if cI==nil then cI=false end;GameObject.oSetParent(aW,bL,cI)end;function GameObject.GetChild(aW,aY,B)if B==nil then B=false end;local cJ=nil;if aY==nil then local cK=aW:GetChildren()cJ=cK[1]else local cF=string.split(aY,".")for p,aY in ipairs(cF)do aW=aW:FindChild(aY,B)if aW==nil then break end end;cJ=aW end;return cJ end;GameObject.oGetChildren=GameObject.GetChildren;function GameObject.GetChildren(aW,B,cL)local cM=GameObject.oGetChildren(aW)if B then for p,cJ in ipairs(table.copy(cM))do cM=table.merge(cM,cJ:GetChildren(true))end end;if cL then table.insert(cM,1,aW)end;return cM end;function GameObject.GetChildrenByName(aW,B,cL)local cN=aW:GetChildren(B,cL)local cO={}for p=1,#cN do local cJ=cN[p]cO[cJ:GetName()]=cJ end;return cO end;GameObject.oSendMessage=GameObject.SendMessage;function GameObject.GetInAncestors(aW,cP)local bL=aW:GetParent()if bL==nil then return end;if cP(bL)==true then return bL end;return bL:GetInAncestors(cP)end;function GameObject.SendMessage(aW,b4,j)if Daneel.Config.debug.enableDebug then local aX=Daneel.Debug.Try(function()GameObject.oSendMessage(aW,b4,j)end)if not aX then local cQ="No data"local H=0;if j~=nil then H=table.getlength(j)cQ="Data with "..H.." entries"end;print("GameObject.SendMessage( gameObject, functionName[, data] ) : Error sending message with parameters : ",aW,b4,cQ)if H>0 then table.print(j)end end else GameObject.oSendMessage(aW,b4,j)end end;function GameObject.BroadcastMessage(aW,b4,j)local cR=aW:GetChildren(true,true)for p,bu in ipairs(cR)do bu:SendMessage(b4,j)end end;function GameObject.Display(aW,h,cS)local cT=false;if h~=false and h~=0 and h~=Vector3:New(0,0,0)then cT=true end;local cU=type(h)if cU=="boolean"then h=nil end;local cV=aW.textRenderer or aW.modelRenderer or aW.mapRenderer;if cU~="table"and not cS and cV~=nil then if not cT and cV.displayOpacity==nil then cV.displayOpacity=cV:GetOpacity()end;if cT then h=h or cV.displayOpacity or 1 else h=h or 0 end;cV:SetOpacity(h)else if not cT and aW.transform.displayLocalScale==nil then aW.transform.displayLocalScale=aW.transform:GetLocalScale()end;if cT then h=h or aW.transform.displayLocalScale or Vector3:New(1)else h=h or Vector3:New(0,0,0)end;aW.transform:SetLocalScale(h)end;aW.isDisplayed=cT end;function GameObject.AddComponent(aW,bm,bC)local aF="GameObject.AddComponent( gameObject, componentType[, params] ) : "bm=Daneel.Debug.CheckArgValue(bm,"componentType",Daneel.Config.componentTypes,aF,bm)local bo=nil;if Daneel.Config.componentObjects[bm]==nil then local cW=Asset.Get(bm,"Script")if cW==nil then if Daneel.Config.debug.enableDebug then error(aF.."Provided component type '"..tostring(bm).."' in not one of the component types, nor a script asset, path or alias.")end;return end;if bC==nil then bC={}end;bo=aW:CreateScriptedBehavior(cW,bC)bC=nil elseif Daneel.DefaultConfig().componentObjects[bm]~=nil then if bm=="Transform"then if Daneel.Config.debug.enableDebug then print(aF.."Can't add a transform component because gameObjects may only have one transform.")end;return elseif bm=="ScriptedBehavior"then if Daneel.Config.debug.enableDebug then print(aF.."To add a scripted behavior, pass the script asset or path instead of 'ScriptedBehavior' as argument 'componentType'.")end;return end;bo=aW:CreateComponent(bm)local cX=Daneel.Config[string.lcfirst(bm)]if cX~=nil then bC=table.merge(cX,bC)end;if bC~=nil then bo:Set(bC)end else local bn=Daneel.Config.componentObjects[bm]if bn~=nil and type(bn.New)=="function"then bo=bn.New(aW,bC)else if Daneel.Config.debug.enableDebug then error(aF.."Custom component of type '"..bm.."' does not provide a New() function; Can't create the component.")end;return end end;Daneel.Event.Fire(aW,"OnNewComponent",bo)return bo end;GameObject.oGetComponent=GameObject.GetComponent;GameObject.oGetScriptedBehavior=GameObject.GetScriptedBehavior;function GameObject.GetComponent(aW,bm)local aF="GameObject.GetComponent( gameObject, componentType ) : "bm=Daneel.Debug.CheckArgValue(bm,"componentType",Daneel.Config.componentTypes,aF,bm)local cC=bm;if type(bm)=="string"then cC=string.lcfirst(bm)end;local bo=nil;if cC~="scriptedBehavior"then bo=aW[cC]end;if bo==nil then if Daneel.DefaultConfig().componentObjects[bm]~=nil then bo=GameObject.oGetComponent(aW,bm)elseif Daneel.Config.componentObjects[bm]==nil then local cW=Asset.Get(bm,"Script",true)bo=GameObject.oGetScriptedBehavior(aW,cW)end end;return bo end;function GameObject.GetScriptedBehavior(aW,cY)local cW=Asset.Get(cY,"Script",true)return GameObject.oGetScriptedBehavior(aW,cW)end;function GameObject.Destroy(aW)for p,bu in pairs(aW:GetChildren(true,true))do bu:RemoveTag()end;for D,h in pairs(aW)do if D~="inner"and type(h)=="table"then Daneel.Event.Fire(h,"OnDestroy",h)end end;aW._name=aW:GetName()CraftStudio.Destroy(aW)end;GameObject.Tags={}function GameObject.GetWithTag(cZ)local c_=cZ;if type(c_)=="string"then c_={c_}end;local d0={}local d1=false;for p,cZ in pairs(c_)do local cn=GameObject.Tags[cZ]if cn~=nil then for a2,aW in pairs(cn)do if aW.inner~=nil then if aW:HasTag(c_)and not table.containsvalue(d0,aW)then table.insert(d0,aW)end else cn[a2]=nil;d1=true end end;if d1 then GameObject.Tags[cZ]=table.reindex(cn)d1=false end end end;return d0 end;function GameObject.GetTags(aW)local c_={}for cZ,cn in pairs(GameObject.Tags)do if table.containsvalue(cn,aW)then table.insert(c_,cZ)end end;return c_ end;function GameObject.AddTag(aW,cZ)local c_=cZ;if type(c_)=="string"then c_={c_}end;for p,cZ in pairs(c_)do if GameObject.Tags[cZ]==nil then GameObject.Tags[cZ]={aW}elseif not table.containsvalue(GameObject.Tags[cZ],aW)then table.insert(GameObject.Tags[cZ],aW)end end end;function GameObject.RemoveTag(aW,cZ)local c_=cZ;if type(c_)=="string"then c_={c_}end;for cZ,cn in pairs(GameObject.Tags)do if c_==nil or table.containsvalue(c_,cZ)then table.removevalue(GameObject.Tags[cZ],aW)end end end;function GameObject.HasTag(aW,cZ,d2)local c_=cZ;if type(c_)=="string"then c_={c_}end;local d3=false;if d2==true then for p,cZ in pairs(c_)do if GameObject.Tags[cZ]~=nil and table.containsvalue(GameObject.Tags[cZ],aW)then d3=true;break end end else d3=true;for p,cZ in pairs(c_)do if GameObject.Tags[cZ]==nil or not table.containsvalue(GameObject.Tags[cZ],aW)then d3=false;break end end end;return d3 end;local aA={"tag",{"string","table"}}local d4={"gameObject","GameObject"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["GameObject.New"]={{"name",{n,"Scene"}},{"params",o,isOptional=true}},["GameObject.Instantiate"]={{"name",n},{"sceneNameOrAsset",{n,"Scene"}},{"params",o,isOptional=true}},["GameObject.Set"]={d4,bx},["GameObject.Get"]={{"name",{n,"GameObject"}},{"errorIfGameObjectNotFound",defaultValue=false}},["GameObject.Destroy"]={d4},["GameObject.SetParent"]={d4,{"parentNameOrInstance",{n,"GameObject"},isOptional=true},{"keepLocalTransform",defaultValue=false}},["GameObject.GetChild"]={d4,{"name",n,isOptional=true},{"recursive",defaultValue=false}},["GameObject.GetChildren"]={d4,{"recursive",defaultValue=false},{"includeSelf",defaultValue=false}},["GameObject.GetChildrenByName"]={d4,{"recursive",defaultValue=false},{"includeSelf",defaultValue=false}},["GameObject.GetInAncestors"]={d4,{"searchFunction","function"}},["GameObject.SendMessage"]={d4,{"functionName",n},{"data",o,isOptional=true}},["GameObject.BroadcastMessage"]={d4,{"functionName",n},{"data",o,isOptional=true}},["GameObject.AddComponent"]={d4,{"componentType",{n,"Script"}},{"params",o,isOptional=true}},["GameObject.GetComponent"]={d4,{"componentType",{n,"Script"}}},["GameObject.GetScriptedBehavior"]={d4,{"scriptNameOrAsset",{n,"Script"}}},["GameObject.GetWithTag"]={aA},["GameObject.GetTags"]={d4},["GameObject.AddTag"]={d4,aA},["GameObject.RemoveTag"]={d4,{"tag",{"string","table"},isOptional=true}},["GameObject.HasTag"]={d4,aA,{"atLeastOneTag",defaultValue=false}}})Daneel.modules.Tags={Awake=function()GameObject.Tags={}end}GUI={}local n="string"local d="boolean"local aw="number"local o="table"local bu="GameObject"local bv="Vector2"local bw="Vector3"local d4={"gameObject",bu}local d5={"params",o,defaultValue={}}local bx={"params",o}function GUI.ToSceneUnit(h,c3)if type(h)=="string"then h=h:trim()if h:find("px")then if c3~=nil and getmetatable(c3)==GameObject then c3=c3.camera end;if c3==nil then error("GUI.ToSceneUnit(value, camera) : Can't convert the value '"..h.."' from pixels to scene units because no camera component has been passed as argument.")end;h=tonumber(h:sub(0,#h-2))*c3:GetPixelsToUnits()elseif h:find("u")then h=tonumber(h:sub(0,#h-1))else h=tonumber(h)end end;return h end;function GUI.ToPixel(h,d6,c3)if type(h)=="string"then if type(d6)=="table"then c3=d6;d6=nil end;h=h:trim()local c5=CS.Screen.GetSize()if h:find("px")then h=tonumber(h:sub(0,#h-2))elseif h:find("%",1,true)and d6~=nil then h=c5[d6]*tonumber(h:sub(0,#h-1))/100 elseif h:find("s")and d6~=nil then h=h:sub(2)if h==""then h=0 end;h=c5[d6]+tonumber(h)elseif h:find("u")then if c3==nil then error("GUI.ToPixel(value, camera) : Can't convert the value '"..h.."' from pixels to scene units because no camera component has been passed as argument.")end;h=tonumber(h:sub(0,#h-1))/c3:GetPixelsToUnits()else h=tonumber(h)end end;return h end;local function d7(aW,aF)local d8=aW:GetInAncestors(function(bu)if bu.camera~=nil then return true end end)if d8==nil and aF~=nil then error(aF..": The "..tostring(aW).." isn't a child of a game object with a camera component and no camera game object is passed via the 'params' argument.")end;return d8 end;GUI.Hud={}GUI.Hud.__index=GUI.Hud;function GUI.Hud.CreateOriginGO(aW)if aW.camera==nil then error("GUI.Hud.CreateOriginGO(): Provided game object "..tostring(aW).." has no camera component.")end;local c7=aW.camera:GetPixelsToUnits()local c5=CS.Screen.GetSize()local d9=CS.CreateGameObject("Hud Origin for camera "..aW:GetName(),aW)d9.transform:SetLocalPosition(Vector3:New(-c5.x*c7/2,c5.y*c7/2,0))aW.hudOriginGO=d9 end;function GUI.Hud.ToHudPosition()error("GUI.Hud.ToHudPosition() is deprecated since v1.5.0. Use Camera.WorldToScreenPoint() or Camera.Project() instead.")end;function Vector2.ToPixel(cd,c3)return Vector2.New(GUI.ToPixel(cd.x,"x",c3),GUI.ToPixel(cd.y,"y",c3))end;function GUI.Hud.New(aW,bC)local da=setmetatable({},GUI.Hud)da.gameObject=aW;aW.hud=da;da.id=Daneel.Utilities.GetId()bC=bC or{}da.cameraGO=bC.cameraGO or d7(aW,"GUI.Hud.New()")if da.cameraGO.hudOriginGO==nil then GUI.Hud.CreateOriginGO(da.cameraGO)end;da:Set(table.merge(GUI.Config.hud,bC))return da end;function GUI.Hud.SetPosition(da,bM)bM=bM:ToPixel(da.cameraGO.camera)local db=da.cameraGO.hudOriginGO.transform:GetPosition()+Vector3:New(bM.x*da.cameraGO.camera:GetPixelsToUnits(),-bM.y*da.cameraGO.camera:GetPixelsToUnits(),0)db.z=da.gameObject.transform:GetPosition().z;da.gameObject.transform:SetPosition(db)end;function GUI.Hud.GetPosition(da)local bM=da.gameObject.transform:GetPosition()-da.cameraGO.hudOriginGO.transform:GetPosition()bM=bM/da.cameraGO.camera:GetPixelsToUnits()return Vector2.New(math.round(bM.x),math.round(-bM.y))end;function GUI.Hud.SetLocalPosition(da,bM)bM=bM:ToPixel(da.cameraGO.camera)local bL=da.gameObject.parent or da.cameraGO.hudOriginGO;local db=bL.transform:GetPosition()+Vector3:New(bM.x*da.cameraGO.camera:GetPixelsToUnits(),-bM.y*da.cameraGO.camera:GetPixelsToUnits(),0)db.z=da.gameObject.transform:GetPosition().z;da.gameObject.transform:SetPosition(db)end;function GUI.Hud.GetLocalPosition(da)local bL=da.gameObject.parent or da.cameraGO.hudOriginGO;local bM=da.gameObject.transform:GetPosition()-bL.transform:GetPosition()bM=bM/da.cameraGO.camera:GetPixelsToUnits()return Vector2.New(math.round(bM.x),math.round(-bM.y))end;function GUI.Hud.SetLayer(da,dc)local dd=da.cameraGO.hudOriginGO.transform:GetPosition().z;local de=da.gameObject.transform:GetPosition()da.gameObject.transform:SetPosition(Vector3:New(de.x,de.y,dd-dc))end;function GUI.Hud.GetLayer(da)local dd=da.cameraGO.hudOriginGO.transform:GetPosition().z;return math.round(dd-da.gameObject.transform:GetPosition().z,1)end;function GUI.Hud.SetLocalLayer(da,dc)local bL=da.gameObject.parent or da.cameraGO.hudOriginGO;local dd=bL.transform:GetPosition().z;local de=da.gameObject.transform:GetPosition()da.gameObject.transform:SetPosition(Vector3:New(de.x,de.y,dd-dc))end;function GUI.Hud.GetLocalLayer(da)local bL=da.gameObject.parent or da.cameraGO.hudOriginGO;local dd=bL.transform:GetPosition().z;return math.round(dd-da.gameObject.transform:GetPosition().z,1)end;local df={"hud","Hud"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["GUI.Hud.CreateOriginGO"]={d4},["GUI.Hud.New"]={d4,d5},["GUI.Hud.SetPosition"]={df,{"position",bv}},["GUI.Hud.GetPosition"]={df},["GUI.Hud.SetLocalPosition"]={df,{"position",bv}},["GUI.Hud.GetLocalPosition"]={df},["GUI.Hud.SetLayer"]={df,{"layer",aw}},["GUI.Hud.GetLayer"]={df},["GUI.Hud.SetLocalLayer"]={df,{"layer",aw}},["GUI.Hud.GetLocalLayer"]={df}})GUI.Toggle={}GUI.Toggle.__index=GUI.Toggle;function GUI.Toggle.New(aW,bC)if Daneel.modules.MouseInput==nil then error("GUI.Toggle.New(): The 'Mouse Input' module is missing from your project. It is required for the player to interact with the GUI.Toggle, GUI.Input and GUI.Slider components.")end;local dg=table.copy(GUI.Config.toggle)dg.defaultText=dg.text;dg.text=nil;dg.gameObject=aW;dg.id=Daneel.Utilities.GetId()setmetatable(dg,GUI.Toggle)if bC~=nil then dg:Set(bC)end;aW.toggle=dg;aW:AddTag("guiComponent")aW.OnNewComponent=function(bo)if bo==nil then return end;local aK=getmetatable(bo)if aK==TextRenderer then local aO=bo:GetText()if aO==nil then aO=dg.defaultText end;dg:SetText(aO)elseif aK==ModelRenderer and dg.checkedModel~=nil then if dg.isChecked and dg.checkedModel~=nil then bo:SetModel(dg.checkedModel)elseif not dg.isChecked and dg.uncheckedModel~=nil then bo:SetModel(dg.uncheckedModel)end end end;aW.OnClick=function()if not(dg.group~=nil and dg.isChecked)then dg:Check(not dg.isChecked)end end;if aW.textRenderer~=nil and aW.textRenderer:GetText()~=nil then dg:SetText(aW.textRenderer:GetText())end;if aW.modelRenderer~=nil then if dg.isChecked and dg.checkedModel~=nil then dg.gameObject.modelRenderer:SetModel(dg.checkedModel)elseif not dg.isChecked and dg.uncheckedModel~=nil then dg.gameObject.modelRenderer:SetModel(dg.uncheckedModel)end end;dg:Check(dg.isChecked,true)return dg end;function GUI.Toggle.SetText(dg,aO)if dg.gameObject.textRenderer~=nil then if dg.isChecked==true then aO=Daneel.Utilities.ReplaceInString(dg.checkedMark,{text=aO})else aO=Daneel.Utilities.ReplaceInString(dg.uncheckedMark,{text=aO})end;dg.gameObject.textRenderer:SetText(aO)else if Daneel.Config.debug.enableDebug then print("WARNING: GUI.Toggle.SetText(toggle, text): Can't set the toggle's text because no TextRenderer component has been found on the gameObject '"..tostring(dg.gameObject).."'. Waiting for a TextRenderer to be added.")end;dg.defaultText=aO end end;function GUI.Toggle.GetText(dg)local aO=nil;if dg.gameObject.textRenderer~=nil then aO=dg.gameObject.textRenderer:GetText()if aO==nil then aO=dg.defaultText end;local dh=dg.checkedMark;if not dg.isChecked then dh=dg.uncheckedMark end;local di,dj=dh:find(":text")if di~=nil and dj~=nil then local dk=dh:sub(1,di-1)local dl=dh:sub(dj+1)aO=aO:gsub(dk,""):gsub(dl,"")end elseif Daneel.Config.debug.enableDebug then print("WARNING: GUI.Toggle.GetText(toggle): Can't get the toggle's text because no TextRenderer component has been found on the gameObject '"..tostring(dg.gameObject).."'. Returning nil.")end;return aO end;function GUI.Toggle.Check(dg,dm,dn)if dm==nil then dm=true end;if dn==true or dg.isChecked~=dm then local aO=nil;if dg.gameObject.textRenderer~=nil then aO=dg:GetText()end;dg.isChecked=dm;if dg.gameObject.textRenderer~=nil then dg:SetText(aO)end;if dg.gameObject.modelRenderer~=nil then if dm==true and dg.checkedModel~=nil then dg.gameObject.modelRenderer:SetModel(dg.checkedModel)elseif dm==false and dg.uncheckedModel~=nil then dg.gameObject.modelRenderer:SetModel(dg.uncheckedModel)end end;Daneel.Event.Fire(dg,"OnUpdate",dg)if dg.Group~=nil and dm==true then local cn=GameObject.GetWithTag(dg.Group)for p,aW in ipairs(cn)do if aW~=dg.gameObject then aW.toggle:Check(false,true)end end end end end;function GUI.Toggle.SetGroup(dg,dp)if dp==nil and dg.Group~=nil then dg.gameObject:RemoveTag(dg.Group)else if dg.Group~=nil then dg.gameObject:RemoveTag(dg.Group)end;dg:Check(false)dg.Group=dp;dg.gameObject:AddTag(dg.Group)end end;function GUI.Toggle.GetGroup(dg)return dg.Group end;function GUI.Toggle.Set(dg,bC)local dp=bC.group;bC.group=nil;local dq=bC.isChecked;bC.isChecked=nil;for D,h in pairs(bC)do dg[D]=h end;if dp~=nil then dg:SetGroup(dp)end;if dq~=nil then dg:Check(dq)end end;local dr={"toggle","Toggle"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["GUI.Toggle.New"]={d4,d5},["GUI.Toggle.Set"]={dr,bx},["GUI.Toggle.SetText"]={dr,{"text",n}},["GUI.Toggle.GetText"]={dr},["GUI.Toggle.Check"]={dr,{"state",defaultValue=true},{"forceUpdate",defaultValue=false}},["GUI.Toggle.SetGroup"]={dr,{"group",n,isOptional=true}},["GUI.Toggle.GetGroup"]={dr}})GUI.ProgressBar={}GUI.ProgressBar.__index=GUI.ProgressBar;function GUI.ProgressBar.New(aW,bC)local ds=table.copy(GUI.Config.progressBar)ds.gameObject=aW;ds.id=Daneel.Utilities.GetId()ds.value=nil;setmetatable(ds,GUI.ProgressBar)bC=bC or{}if bC.value==nil then bC.value=GUI.Config.progressBar.value end;ds.cameraGO=bC.cameraGO or d7(aW)ds:Set(bC)aW.progressBar=ds;return ds end;function GUI.ProgressBar.SetValue(ds,h)local aF="GUI.ProgressBar.SetValue(progressBar, value) : "local dt=ds.minValue;local du=ds.maxValue;local dv=nil;if type(h)=="string"then if h:endswith("%")then dv=tonumber(h:sub(1,#h-1))/100;local dw=dv;dv=math.clamp(dv,0.0,1.0)if dv~=dw and Daneel.Config.debug.enableDebug then print(aF.."WARNING : value in percentage with value '"..h.."' is below 0% or above 100%.")end;h=(du-dt)*dv+dt else h=tonumber(h)end end;local dx=h;h=math.clamp(h,dt,du)ds.minLength=GUI.ToSceneUnit(ds.minLength,ds.cameraGO)ds.maxLength=GUI.ToSceneUnit(ds.maxLength,ds.cameraGO)local dy=ds:GetValue()if h~=dy then if h~=dx and Daneel.Config.debug.enableDebug then print(aF.." WARNING : value with value '"..dx.."' is out of its boundaries : min='"..dt.."', max='"..du.."'")end;local dz=du-dt;dv=(h-dt)/dz;ds.height=GUI.ToSceneUnit(ds.height,ds.cameraGO)local dA=(ds.maxLength-ds.minLength)*dv+ds.minLength;local dB=ds.gameObject.transform:GetLocalScale()ds.gameObject.transform:SetLocalScale(Vector3:New(dA,ds.height,dB.z))Daneel.Event.Fire(ds,"OnUpdate",ds)end end;GUI.ProgressBar.SetProgress=GUI.ProgressBar.SetValue;function GUI.ProgressBar.UpdateValue(ds,h,dC)if h==ds._value then return end;ds._value=h;local dt=ds.minValue;local du=ds.maxValue;local dD=ds.minLength;local dv=nil;if type(h)=="string"then local F=h;h=tonumber(h)if h==nil then dv=tonumber(F:sub(1,#F-1))/100 end end;if dv==nil then local dz=du-dt;dv=(h-dt)/dz end;dv=math.clamp(dv,0.0,1.0)local dA=(ds.maxLength-dD)*dv+dD;local dB=ds.gameObject.transform:GetLocalScale()ds.gameObject.transform:SetLocalScale(Vector3:New(dA,ds.height,dB.z))if dC==true then Daneel.Event.Fire(ds,"OnUpdate",ds)end end;GUI.ProgressBar.UpdateProgress=GUI.ProgressBar.UpdateValue;function GUI.ProgressBar.GetValue(ds,dE)local bK=math.round(ds.gameObject.transform:GetLocalScale().x,2)local dz=ds.maxLength-ds.minLength;local h=(bK-ds.minLength)/dz;if dE==true then h=h*100 else h=(ds.maxValue-ds.minValue)*h+ds.minValue end;return h end;GUI.ProgressBar.GetProgress=GUI.ProgressBar.GetValue;function GUI.ProgressBar.SetHeight(ds,dF)local dB=ds.gameObject.transform:GetLocalScale()local dF=GUI.ToSceneUnit(dF,ds.cameraGO)ds.gameObject.transform:SetLocalScale(Vector3:New(dB.x,dF,dB.z))end;function GUI.ProgressBar.GetHeight(ds)return ds.gameObject.transform:GetLocalScale().y end;function GUI.ProgressBar.Set(ds,bC)local h=bC.value;bC.value=nil;if h==nil then h=ds:GetValue()end;for D,h in pairs(bC)do ds[D]=h end;ds:SetValue(h)end;local dG={"progressBar","ProgressBar"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["GUI.ProgressBar.New"]={d4,d5},["GUI.ProgressBar.Set"]={dG,bx},["GUI.ProgressBar.SetValue"]={dG,{"value",{n,aw}}},["GUI.ProgressBar.GetValue"]={dG,{"getAsPercentage",defaultValue=false}},["GUI.ProgressBar.SetHeight"]={dG,{"height",{n,aw}}},["GUI.ProgressBar.GetHeight"]={dG}})GUI.Slider={}GUI.Slider.__index=GUI.Slider;function GUI.Slider.New(aW,bC)if Daneel.modules.MouseInput==nil then error("GUI.Slider.New(): The 'Mouse Input' module is missing from your project. It is required for the player to interact with the GUI.Toggle, GUI.Input and GUI.Slider components.")end;local dH=table.copy(GUI.Config.slider)dH.gameObject=aW;dH.id=Daneel.Utilities.GetId()dH.value=nil;dH.parent=dH.gameObject:GetParent()if dH.parent==nil then local bu=CS.CreateGameObject("SliderParent")bu.transform:SetPosition(dH.gameObject.transform:GetPosition())dH.gameObject:SetParent(bu)end;setmetatable(dH,GUI.Slider)aW.slider=dH;aW:AddTag("guiComponent")aW.OnDrag=function()local dI=CraftStudio.Input.GetMouseDelta()local dJ=Vector3:New(dI.x,0,0)if dH.axis=="y"then dJ=Vector3:New(0,-dI.y,0,0)end;aW.transform:Move(dJ*dH.cameraGO.camera:GetPixelsToUnits())local dK=aW.transform:GetPosition()local dL=dH.parent.transform:GetPosition()if dH.axis=="x"and dK.x<dL.x then dH:SetValue(dH.minValue)elseif dH.axis=="y"and dK.y<dL.y then dH:SetValue(dH.minValue)elseif dH:GetValue()>dH.maxValue then dH:SetValue(dH.maxValue)else Daneel.Event.Fire(dH,"OnUpdate",dH)end end;bC=bC or{}dH.cameraGO=bC.cameraGO or d7(aW,"GUI.Slider.New()")if bC.value==nil then bC.value=GUI.Config.slider.value end;dH:Set(bC)return dH end;function GUI.Slider.SetValue(dH,h)local aF="GUI.Slider.SetValue( slider, value ) : "local du=dH.maxValue;local dt=dH.minValue;local dM=nil;if type(h)=="string"then if h:endswith("%")then dM=tonumber(h:sub(1,#h-1))/100;h=(du-dt)*dM+dt else h=tonumber(h)end end;local dx=h;h=math.clamp(h,dt,du)if h~=dx and Daneel.Config.debug.enableDebug then print(aF.."WARNING : Argument 'value' with value '"..dx.."' is out of its boundaries : min='"..dt.."', max='"..du.."'")end;local dz=du-dt;dM=(h-dt)/dz;dH.length=GUI.ToSceneUnit(dH.length,dH.cameraGO)local dN=-Vector3:Left()if dH.axis=="y"then dN=Vector3:Up()end;local bI=Vector3.Rotate(dN,dH.gameObject.transform:GetOrientation())local db=dH.parent.transform:GetPosition()+bI*dH.length*dM;dH.gameObject.transform:SetPosition(db)Daneel.Event.Fire(dH,"OnUpdate",dH)end;function GUI.Slider.GetValue(dH,dE)local dM=Vector3.Distance(dH.parent.transform:GetPosition(),dH.gameObject.transform:GetPosition())/dH.length;local h=dM*100;if dE~=true then h=(dH.maxValue-dH.minValue)*dM+dH.minValue end;return h end;function GUI.Slider.Set(dH,bC)local h=bC.value;bC.value=nil;if h==nil then h=dH:GetValue()end;for D,h in pairs(bC)do dH[D]=h end;dH:SetValue(h)end;GUI.Input={}GUI.Input.__index=GUI.Input;function GUI.Input.New(aW,bC)if Daneel.modules.MouseInput==nil then error("GUI.Input.New(): The 'Mouse Input' module is missing from your project. It is required for the player to interact with the GUI.Toggle, GUI.Input and GUI.Slider components.")end;bC=bC or{}local dO=table.merge(GUI.Config.input,bC)dO.gameObject=aW;dO.id=Daneel.Utilities.GetId()setmetatable(dO,GUI.Input)if dO.OnTextEntered==nil then dO.OnTextEntered=function(z)if dO.isFocused then local dP=string.byte(z)if dP==8 then local aO=aW.textRenderer:GetText()dO:Update(aO:sub(1,#aO-1),true)elseif dP>=32 and dP<=127 then if dO.characterRange~=nil and dO.characterRange:find(z,1,true)==nil then return end;dO:Update(z)end end end end;local dQ=aW:GetChild("Cursor")if dQ~=nil then dO.cursorGO=dQ;dQ.tweener=Tween.Timer(dO.cursorBlinkInterval,function(dR)if dR.gameObject==nil or dR.gameObject.inner==nil then dR:Destroy()return end;local dS=1;if dR.gameObject.modelRenderer:GetOpacity()==1 then dS=0 end;dR.gameObject.modelRenderer:SetOpacity(dS)end,true)dQ.tweener.isPaused=true;dQ.tweener.gameObject=dQ end;local dT=dO.isFocused;dO.isFocused=nil;dO:Focus(dT)aW.input=dO;aW:AddTag("guiComponent")aW:AddTag("gui_input")local dU=aW:GetChild("Background")if dU~=nil then dO.backgroundGO=dU;if dO.focusOnBackgroundClick then dU:AddTag("guiComponent")end end;return dO end;GUI.Input.Module={}Daneel.modules.GUIInput=GUI.Input.Module;function GUI.Input.Module.Update()if CS.Input.WasButtonJustReleased("LeftMouse")then local dV=GameObject.GetWithTag("gui_input")local dW=nil;for p,dX in pairs(dV)do local dO=dX.input;local dY=dX.isMouseOver;if dY~=true and dO.focusOnBackgroundClick and dO.backgroundGO~=nil then dY=dO.backgroundGO.isMouseOver end;if dY==true then dW=dO else dO:Focus(false)end end;if dW~=nil then dW:Focus(true)end end;if CS.Input.WasButtonJustReleased("ValidateInput")then local dV=GameObject.GetWithTag("gui_input")for p,dX in pairs(dV)do local dO=dX.input;if dO.isFocused then Daneel.Event.Fire(dO,"OnValidate",dO)break end end end end;function GUI.Input.Focus(dO,dZ)if dZ==nil then dZ=true end;if dO.isFocused~=dZ then dO.isFocused=dZ;local aO=string.trim(dO.gameObject.textRenderer:GetText())if dZ==true then CS.Input.OnTextEntered(dO.OnTextEntered)if aO==dO.defaultValue then dO.gameObject.textRenderer:SetText("")end else CS.Input.OnTextEntered(nil)if dO.defaultValue~=nil and dO.defaultValue~=""and aO==""then dO.gameObject.textRenderer:SetText(dO.defaultValue)end end;Daneel.Event.Fire(dO,"OnFocus",dO)dO:UpdateCursor()end end;function GUI.Input.UpdateCursor(dO)if dO.cursorGO~=nil then local b_=dO.gameObject.textRenderer:GetAlignment()if b_~=TextRenderer.Alignment.Right then local H=dO.gameObject.textRenderer:GetTextWidth()if b_==TextRenderer.Alignment.Center then H=H/2 end;dO.cursorGO.transform:SetLocalPosition(Vector3:New(H,0,0))end;local dS=0;if dO.isFocused then dS=1 end;dO.cursorGO.modelRenderer:SetOpacity(dS)dO.cursorGO.tweener.isPaused=not dO.isFocused;Daneel.Event.Fire(dO.cursorGO,"OnUpdate",dO)end end;function GUI.Input.Update(dO,aO,d_)local e0=dO.gameObject.textRenderer:GetText()if not d_ then aO=e0 ..aO end;if#aO>dO.maxLength then aO=aO:sub(1,dO.maxLength)end;if e0~=aO then dO.gameObject.textRenderer:SetText(aO)Daneel.Event.Fire(dO,"OnUpdate",dO)dO:UpdateCursor()end end;local e1={"slider","Slider"}local e2={"input","Input"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["GUI.Slider.New"]={d4,d5},["GUI.Slider.Set"]={e1,bx},["GUI.Slider.SetValue"]={e1,{"value",{n,aw}}},["GUI.Slider.GetValue"]={e1,{"getAsPercentage",defaultValue=false}},["GUI.Input.New"]={d4,d5},["GUI.Input.Focus"]={e2,{"focus",defaultValue=true}},["GUI.Input.UpdateCursor"]={e2},["GUI.Input.Update"]={e2,{"text",n},{"replaceText",defaultValue=false}}})GUI.TextArea={}GUI.TextArea.__index=GUI.TextArea;function GUI.TextArea.New(aW,bC)local e3={}e3.gameObject=aW;aW.textArea=e3;e3.id=Daneel.Utilities.GetId()e3.lineGOs={}setmetatable(e3,GUI.TextArea)e3.textRuler=aW.textRenderer;if e3.textRuler==nil then e3.textRuler=aW:CreateComponent("TextRenderer")end;e3.textRuler:SetText("")bC=bC or{}e3.cameraGO=bC.cameraGO or d7(aW)e3:Set(table.merge(GUI.Config.textArea,bC))return e3 end;function GUI.TextArea.Set(e3,bC)local e4=e3.lineGOs;e3.lineGOs={}local aO=bC.text;bC.text=nil;for D,h in pairs(bC)do e3[D]=h end;e3.lineGOs=e4;if aO==nil then aO=e3.Text end;e3:SetText(aO)end;function GUI.TextArea.SetText(e3,aO)e3.Text=aO;local e5={aO}if e3.newLine~=""then e5=string.split(aO,e3.NewLine)end;local e6=e3.gameObject.transform:GetLocalScale()local e7=e3.AreaWidth;if e7~=nil and e7>0 then local e8=table.copy(e5)e5={}for p=1,#e8 do local e9=e8[p]if e3.textRuler:GetTextWidth(e9)*e6.x>e7 then local ea=""for a2=1,#e9 do local z=e9:sub(a2,a2)ea=ea..z;if e3.textRuler:GetTextWidth(ea)*e6.x>e7 then if z==" "then table.insert(e5,ea:sub(1,#ea-1))ea=z else local eb=""for W=#ea,1,-1 do local ec=ea:sub(W,W)if ec==" "then break else eb=ec..eb end end;table.insert(e5,ea:sub(1,#ea-#eb))ea=eb end;if not e3.WordWrap then ea=nil;break end end end;if ea~=nil then table.insert(e5,ea)end else table.insert(e5,e9)end end end;if type(e3.linesFilter)=="function"then e5=e3.linesFilter(e3,e5)or e5 end;local ed=#e5;local e4=e3.lineGOs;local ee=#e4;local ef=e3.LineHeight/e6.y;local aW=e3.gameObject;local eg={font=e3.Font,alignment=e3.Alignment,opacity=e3.Opacity}local eh=-ef/2;if e3.VerticalAlignment=="middle"then eh=ef*ed/2-ef/2 elseif e3.VerticalAlignment=="bottom"then eh=ef*ed-ef/2 end;for p=1,ed do local e9=e5[p]eg.text=e9;if e4[p]~=nil then e4[p].transform:SetLocalPosition(Vector3:New(0,eh,0))e4[p].textRenderer:Set(eg)else local ei=CS.CreateGameObject("TextArea"..e3.id.."-Line"..p,aW)ei.transform:SetLocalPosition(Vector3:New(0,eh,0))ei.transform:SetLocalScale(Vector3:New(1))ei:CreateComponent("TextRenderer")ei.textRenderer:Set(eg)table.insert(e4,ei)end;eh=eh-ef end;if ed<ee then for p=ed+1,ee do e4[p].textRenderer:SetText("")end end;Daneel.Event.Fire(e3,"OnUpdate",e3)end;function GUI.TextArea.GetText(e3)return e3.Text end;function GUI.TextArea.AddLine(e3,e9,ej)local aO=e3.Text;if ej==true then aO=e9 ..e3.NewLine..aO else if aO~=""and not string.endswith(aO,e3.NewLine)then e9=e3.NewLine..e9 end;aO=aO..e9 end;e3:SetText(aO)end;function GUI.TextArea.SetAreaWidth(e3,e7)e7=math.clamp(GUI.ToSceneUnit(e7,e3.cameraGO),0,999)if e3.AreaWidth~=e7 then e3.AreaWidth=e7;if#e3.lineGOs>0 then e3:SetText(e3.Text)end end end;function GUI.TextArea.GetAreaWidth(e3)return e3.AreaWidth end;function GUI.TextArea.SetWordWrap(e3,ek)if e3.WordWrap~=ek then e3.WordWrap=ek;if#e3.lineGOs>0 then e3:SetText(e3.Text)end end end;function GUI.TextArea.GetWordWrap(e3)return e3.WordWrap end;function GUI.TextArea.SetNewLine(e3,ea)if e3.NewLine~=ea then e3.NewLine=ea;if#e3.lineGOs>0 then e3:SetText(e3.Text)end end end;function GUI.TextArea.GetNewLine(e3)return e3.NewLine end;function GUI.TextArea.SetLineHeight(e3,ef)local ef=GUI.ToSceneUnit(ef,e3.cameraGO)if e3.LineHeight~=ef then e3.LineHeight=ef;if#e3.lineGOs>0 then e3:SetText(e3.Text)end end end;function GUI.TextArea.GetLineHeight(e3)return e3.LineHeight end;function GUI.TextArea.SetVerticalAlignment(e3,el)local aF="GUI.TextArea.SetVerticalAlignment( textArea, verticalAlignment ) : "el=Daneel.Debug.CheckArgValue(el,"verticalAlignment",{"top","middle","bottom"},aF,GUI.Config.textArea.verticalAlignment)el=string.trim(el:lower())if e3.VerticalAlignment~=el then e3.VerticalAlignment=el;if#e3.lineGOs>0 then e3:SetText(e3.Text)end end end;function GUI.TextArea.GetVerticalAlignment(e3)return e3.VerticalAlignment end;function GUI.TextArea.SetFont(e3,bZ)e3.textRuler:SetFont(bZ)bZ=e3.textRuler:GetFont()if e3.Font~=bZ then e3.Font=bZ;if#e3.lineGOs>0 then for p=1,#e3.lineGOs do e3.lineGOs[p].textRenderer:SetFont(e3.Font)end;e3:SetText(e3.Text)end end end;function GUI.TextArea.GetFont(e3)return e3.Font end;function GUI.TextArea.SetAlignment(e3,b_)e3.textRuler:SetAlignment(b_)b_=e3.textRuler:GetAlignment()if e3.Alignment~=b_ then e3.Alignment=b_;for p=1,#e3.lineGOs do e3.lineGOs[p].textRenderer:SetAlignment(e3.Alignment)end end end;function GUI.TextArea.GetAlignment(e3)return e3.Alignment end;function GUI.TextArea.SetOpacity(e3,dS)if e3.Opacity~=dS then e3.Opacity=dS;for p=1,#e3.lineGOs do e3.lineGOs[p].textRenderer:SetOpacity(dS)end end end;function GUI.TextArea.GetOpacity(e3)return e3.Opacity end;local em={"textArea","TextArea"}table.mergein(Daneel.Debug.functionArgumentsInfo,{["GUI.TextArea.New"]={{"gameObject",bu},{"params",o,isOptional=true}},["GUI.TextArea.Set"]={em,bx},["GUI.TextArea.SetText"]={em,{"text",n}},["GUI.TextArea.GetText"]={em},["GUI.TextArea.AddLine"]={em,{"line",n},{"prepend",defaultValue=false}},["GUI.TextArea.SetAreaWidth"]={em,{"areaWidth",{n,aw},defaultValue=0}},["GUI.TextArea.GetAreaWidth"]={em},["GUI.TextArea.SetWordWrap"]={em,{"wordWrap",defaultValue=false}},["GUI.TextArea.GetWordWrap"]={em},["GUI.TextArea.SetNewLine"]={em,{"newLine",n}},["GUI.TextArea.GetNewLine"]={em},["GUI.TextArea.SetLineHeight"]={em,{"lineHeight",{n,aw}}},["GUI.TextArea.GetLineHeight"]={em},["GUI.TextArea.SetVerticalAlignment"]={em,{"verticalAlignment",n}},["GUI.TextArea.GetVerticalAlignment"]={em},["GUI.TextArea.SetFont"]={em,{"font",{n,"Font"}}},["GUI.TextArea.GetFont"]={em},["GUI.TextArea.SetAlignment"]={em,{"alignment",{n,"userdata",aw}}},["GUI.TextArea.GetAlignment"]={em},["GUI.TextArea.SetOpacity"]={em,{"opacity",aw}},["GUI.TextArea.GetOpacity"]={em}})Daneel.modules.GUI=GUI;function GUI.DefaultConfig()local bj={cameraName="HUD Camera",cameraGO=nil,originGO=nil,hud={},toggle={isChecked=false,text="Toggle",checkedMark=":text",uncheckedMark=":text",checkedModel=nil,uncheckedModel=nil},progressBar={height=1,minValue=0,maxValue=100,minLength=0,maxLength=5,value="100%"},slider={minValue=0,maxValue=100,length=5,axis="x",value="0%",OnTextEntered=nil},input={isFocused=false,maxLength=9999,defaultValue=nil,characterRange=nil,focusOnBackgroundClick=true,cursorBlinkInterval=0.5},textArea={areaWidth=0,wordWrap=false,newLine="<br>",lineHeight=1,verticalAlignment="top",font=nil,text="",alignment=nil,opacity=nil},componentObjects={Hud=GUI.Hud,Toggle=GUI.Toggle,ProgressBar=GUI.ProgressBar,Slider=GUI.Slider,Input=GUI.Input,TextArea=GUI.TextArea},componentTypes={},propertiesByComponentName={hud={"position","localPosition","layer","localLayer"},progressBar={"value","height"},slider={"value"},textArea={"areaWidth","lineHeight","opacity"}}}return bj end;GUI.Config=GUI.DefaultConfig()function GUI.Load()if Daneel.modules.Tween then table.mergein(Tween.Config.propertiesByComponentName,GUI.Config.propertiesByComponentName)end end;Draw={}Daneel.modules.Draw=Draw;local en={}local n="string"local d="boolean"local aw="number"local o="table"local X="Vector3"local d4={"gameObject","GameObject"}local bx={"params",o,defaultValue={}}local eo={"line","LineRenderer"}local ep={"circle","CircleRenderer"}local eq={"draw",d,defaultValue=true}Draw.LineRenderer={}en["Draw.LineRenderer.New"]={d4,bx}function Draw.LineRenderer.New(aW,bC)local e9={origin=aW.transform:GetPosition(),_direction=Vector3:Left(),_length=1,_width=1,gameObject=aW}e9._endPosition=e9.origin;aW.lineRenderer=e9;setmetatable(e9,Draw.LineRenderer)bC=table.merge(Draw.Config.lineRenderer,bC)if bC.endPosition~=nil then bC.length=nil;bC.direction=nil end;e9:Set(bC)return e9 end;en["Draw.LineRenderer.Set"]={eo,bx}function Draw.LineRenderer.Set(e9,bC)if bC.endPosition then if bC.length or bC.direction then if Daneel.Config.debug.enableDebug then local aO="Draw.LineRenderer.Set( line, params ) : The 'endPosition' property is set with value "..tostring(bC.endPosition)if bC.length then aO=aO.." The 'length' property with value '"..tostring(bC.length).."' has been ignored."end;if bC.direction then aO=aO.." The 'direction' property with value '"..tostring(bC.direction).."' has been ignored."end;print(aO)end;bC.length=nil;bC.direction=nil end end;local draw=false;for D,h in pairs(bC)do local ar="Set"..string.ucfirst(D)if Draw.LineRenderer[ar]~=nil then draw=true;if ar=="SetDirection"then Draw.LineRenderer[ar](e9,h,nil,false)else Draw.LineRenderer[ar](e9,h,false)end else e9[D]=h end end;if draw then e9:Draw()end end;en["Draw.LineRenderer.Draw"]={eo}function Draw.LineRenderer.Draw(e9)e9.gameObject.transform:LookAt(e9._endPosition)e9.gameObject.transform:SetLocalScale(Vector3:New(e9._width,e9._width,e9._length))Daneel.Event.Fire(e9,"OnDraw",e9)end;en["Draw.LineRenderer.SetEndPosition"]={eo,{"endPosition",X},eq}function Draw.LineRenderer.SetEndPosition(e9,er,draw)e9._endPosition=er;e9._direction=e9._endPosition-e9.origin;e9._length=e9._direction:Length()if draw==nil or draw then e9:Draw()end end;en["Draw.LineRenderer.GetEndPosition"]={eo}function Draw.LineRenderer.GetEndPosition(e9)return e9._endPosition end;en["Draw.LineRenderer.SetLength"]={eo,{"length",aw},eq}function Draw.LineRenderer.SetLength(e9,H,draw)e9._length=H;e9._endPosition=e9.origin+e9._direction*H;if draw==nil or draw then e9:Draw()end end;en["Draw.LineRenderer.GetLength"]={eo}function Draw.LineRenderer.GetLength(e9)return e9._length end;en["Draw.LineRenderer.SetWidth"]={eo,{"direction",X},{"useDirectionAsLength",d,defaultValue=false},eq}function Draw.LineRenderer.SetDirection(e9,dN,es,draw)e9._direction=dN:Normalized()if es then e9._length=dN:Length()end;e9._endPosition=e9.origin+e9._direction*e9._length;if draw==nil or draw then e9:Draw()end end;en["Draw.LineRenderer.GetDirection"]={eo}function Draw.LineRenderer.GetDirection(e9)return e9._direction end;en["Draw.LineRenderer.SetWidth"]={eo,{"width",aw},eq}function Draw.LineRenderer.SetWidth(e9,c1,draw)e9._width=c1;if draw==nil or draw then e9:Draw()end end;en["Draw.LineRenderer.GetWidth"]={eo}function Draw.LineRenderer.GetWidth(e9)return e9._width end;Draw.CircleRenderer={}en["Draw.CircleRenderer.New"]={d4,bx}function Draw.CircleRenderer.New(aW,bC)local et={gameObject=aW,origin=aW.transform:GetPosition(),segments={},_segmentCount=6,_radius=1,_width=1,_model=nil}et._endPosition=et.origin;aW.circleRenderer=et;if bC.model==nil and aW.modelRenderer~=nil then bC.model=aW.modelRenderer:GetModel()aW.modelRenderer:SetModel(nil)end;setmetatable(et,Draw.CircleRenderer)et:Set(table.merge(Draw.Config.circleRenderer,bC))return et end;en["Draw.CircleRenderer.Set"]={ep,bx}function Draw.CircleRenderer.Set(et,bC)local draw=false;for D,h in pairs(bC)do local ar="Set"..string.ucfirst(D)if Draw.CircleRenderer[ar]~=nil then draw=true;Draw.CircleRenderer[ar](et,h,false)else et[D]=h end end;if draw then et:Draw()end end;en["Draw.CircleRenderer.Draw"]={ep}function Draw.CircleRenderer.Draw(et)local eh=2*math.pi/et._segmentCount;local g=-eh;local eu=et:GetId()for p=1,et._segmentCount do g=g+eh;local ev=Vector3:New(et._radius*math.cos(g),et._radius*math.sin(g),0)if et.segments[p]==nil then local ew=CS.CreateGameObject("Circle "..eu.." Segment "..p,et.gameObject)ew:CreateComponent("ModelRenderer")if et._model~=nil then ew.modelRenderer:SetModel(et._model)end;table.insert(et.segments,p,ew)end;et.segments[p].transform:SetLocalPosition(ev)end;while#et.segments>et._segmentCount do table.remove(et.segments):Destroy()end;local ex=et.segments[1].transform:GetPosition()local ey=Vector3.Distance(ex,et.segments[2].transform:GetPosition())for p,ez in ipairs(et.segments)do if et.segments[p+1]~=nil then ez.transform:LookAt(et.segments[p+1].transform:GetPosition())else ez.transform:LookAt(ex)end;ez.transform:SetLocalScale(Vector3:New(et._width,et._width,ey))end;Daneel.Event.Fire(et,"OnDraw",et)end;en["Draw.CircleRenderer.SetRadius"]={ep,{"radius",aw},eq}function Draw.CircleRenderer.SetRadius(et,eA,draw)et._radius=eA;if draw==nil or draw then et:Draw()end end;en["Draw.CircleRenderer.GetRadius"]={ep}function Draw.CircleRenderer.GetRadius(et)return et._radius end;en["Draw.CircleRenderer.SetSegmentCount"]={ep,{"count",aw},eq}function Draw.CircleRenderer.SetSegmentCount(et,eB,draw)if eB<3 then eB=3 end;if et._segmentCount~=eB then et._segmentCount=eB;if draw==nil or draw then et:Draw()end end end;en["Draw.CircleRenderer.GetSegmentCount"]={ep}function Draw.CircleRenderer.GetSegmentCount(et)return et._segmentCount end;en["Draw.CircleRenderer.SetWidth"]={ep,{"width",aw}}function Draw.CircleRenderer.SetWidth(et,c1)if et._width~=c1 then et._width=c1;if#et.segments>0 and draw then local eC=Vector3:New(et._width,et._width,et.segments[1].transform:GetLocalScale().z)for p,e9 in pairs(et.segments)do e9.transform:SetLocalScale(eC)end end end end;en["Draw.CircleRenderer.GetWidth"]={ep}function Draw.CircleRenderer.GetWidth(et)return et._width end;en["Draw.CircleRenderer.SetModel"]={ep,{"model",{"string","Model"},isOptional=true}}function Draw.CircleRenderer.SetModel(et,bP)if et._model~=bP then if type(bP)=="sting"and et._model~=nil and et._model:GetPath()==bP then return end;if bP~=nil then et._model=Asset.Get(bP,"Model",true)else et._model=nil end;for p,e9 in pairs(et.segments)do e9.modelRenderer:SetModel(et._model)end end end;en["Draw.CircleRenderer.GetModel"]={ep}function Draw.CircleRenderer.GetModel(et)return et._model end;en["Draw.CircleRenderer.SetOpacity"]={ep,{"opacity","number"}}function Draw.CircleRenderer.SetOpacity(et,dS)for p=1,#cicle.segments do et.segments[p].modelRenderer:SetOpacity(dS)end end;en["Draw.CircleRenderer.GetOpacity"]={ep}function Draw.CircleRenderer.GetOpacity(et)if et.segments[1]~=nil then return et.segments[1].modelRenderer:GetOpacity()end;return nil end;table.mergein(Daneel.Debug.functionArgumentsInfo,en)function Draw.DefaultConfig()local bj={lineRenderer={direction=Vector3:Left(),length=2,width=0.1},circleRenderer={segmentCount=6,radius=1,width=1,model=nil},componentObjects={LineRenderer=Draw.LineRenderer,CircleRenderer=Draw.CircleRenderer},propertiesByComponentName={lineRenderer={"length","endPosition","direction","width"},circleRenderer={"radius","segmentCount","direction","width","opacity"}}}return bj end;Draw.Config=Draw.DefaultConfig()function Draw.Load()if Daneel.modules.Tween then table.mergein(Tween.Config.propertiesByComponentName,Draw.Config.propertiesByComponentName)end end;Color={}ColorMT={__call=function(am,...)return am.New(...)end,__index=function(au,D)for aY,eD in pairs(Color.colorsByName)do if D==aY then return Color.New(eD)end end end}setmetatable(Color,ColorMT)function Color.__index(eE,D)if Color[D]~=nil then return Color[D]end;if D==1 or D==2 or D==3 then local eF={"r","g","b"}D=eF[D]end;if D=="r"or D=="g"or D=="b"then return eE["_"..D]end;return rawget(eE,D)end;function Color.__newindex(eE,D,h)if D==1 or D==2 or D==3 then local eF={"r","g","b"}D=eF[D]end;if D=="r"or D=="g"or D=="b"then eE["_"..D]=math.round(math.clamp(tonumber(h),0,255))else rawset(eE,D,h)end end;function Color.__tostring(eE)local n="Color: { r="..eE._r..", g="..eE._g..", b="..eE._b..", hex="..eE:GetHex()local aY=eE:GetName()if aY~=nil then n=n..", name='"..aY.."'"end;return n.." }"end;function Color.New(q,eG,d)local eE=setmetatable({},Color)if type(q)=="string"and eG==nil then local eH=Color[q]if eH~=nil then return eH else eE:SetHex(q)end else if type(q)=="table"then if q.r~=nil then eG=q.g;d=q.b;q=q.r elseif q.x~=nil then eG=q.y;d=q.z;q=q.x elseif#q==3 then eG=q[2]d=q[3]q=q[1]end end;eE.r=q or 0;eE.g=eG or eE._r;eE.b=d or eE._g end;return eE end;Color.colorsByName={red={255,0,0},green={0,255,0},blue={0,0,255},yellow={255,255,0},cyan={0,255,255},magenta={255,0,255},white={255,255,255},black={0,0,0},gray={50,50,50},grey={50,50,50}}function Color.GetName(eE)for aY,eD in pairs(Color.colorsByName)do if type(eD)=="string"then eD={Color.HexToRGB(eD)}end;if eE._r==eD[1]and eE._g==eD[2]and eE._b==eD[3]then return aY end end end;function Color.ToArray(eE)return{eE._r,eE._g,eE._b}end;function Color.ToRGB(eE)return{r=eE._r,g=eE._g,b=eE._b}end;function Color.ToVector3(eE)return Vector3:New(eE._r,eE._g,eE._b)end;function Color.ToString(eE)return eE._r.." "..eE._g.." "..eE._b end;function string.tocolor(eI)local eE=Color.New(0)local eF={"b","g","r"}for w in string.gmatch(eI,"[0-9]+")do eE[table.remove(eF)]=tonumber(w)end;return eE end;function Color.RGBToHex(q,eG,d)local eD=Color.New(q,eG,d):ToArray()local eJ=""for D,h in ipairs(eD)do local eK=''while h>0 do local aa=math.fmod(h,16)+1;h=math.floor(h/16)eK=string.sub('0123456789ABCDEF',aa,aa)..eK end;if string.len(eK)==0 then eK='00'elseif string.len(eK)==1 then eK='0'..eK end;eJ=eJ..eK end;return eJ end;function Color.GetHex(eE)return Color.RGBToHex(eE)end;function Color.HexToRGB(eK)eK=eK:gsub("#",""):gsub("0x",""):gsub("0X","")return tonumber("0x"..eK:sub(1,2)),tonumber("0x"..eK:sub(3,4)),tonumber("0x"..eK:sub(5,6))end;function Color.SetHex(eE,eK)local eL={Color.HexToRGB(eK)}local eF={"r","g","b"}for p=1,3 do eE[eF[p]]=eL[p]end end;function Color.GetHSV(eE)local q,eG,d=eE._r/255,eE._g/255,eE._b/255;local m,l=math.max(q,eG,d),math.min(q,eG,d)local eM,n,X;X=m;local eN=m-l;if m==0 then n=0 else n=eN/m end;if m==l then eM=0 else if m==q then eM=(eG-d)/eN;if eG<d then eM=eM+6 end elseif m==eG then eM=(d-q)/eN+2 elseif m==d then eM=(q-eG)/eN+4 end;eM=eM/6 end;return eM,n,X end;function Color.__eq(c,d)return c._r==d._r and c._g==d._g and c._b==d._b end;function Color.__add(c,d)return Color.New(c._r+d._r,c._g+d._g,c._b+d._b)end;function Color.__sub(c,d)return Color.New(c._r-d._r,c._g-d._g,c._b-d._b)end;function Color.__mul(c,d)local eE=Color.New(0)if type(c)=="table"and type(d)=="number"then eE.r=c._r*d;eE.g=c._g*d;eE.b=c._b*d elseif type(c)=="number"and type(d)=="table"then eE.r=c*d._r;eE.g=c*d._g;eE.b=c*d._b elseif type(c)=="table"and type(d)=="table"then eE.r=c._r*d._r;eE.g=c._g*d._g;eE.b=c._b*d._b end;return eE end;function Color.__div(c,d)local eE=Color.New(0)if type(c)=="table"and type(d)=="number"then eE.r=c._r/d;eE.g=c._g/d;eE.b=c._b/d elseif type(c)=="number"and type(d)=="table"then eE.r=c/d._r;eE.g=c/d._g;eE.b=c/d._b elseif type(c)=="table"and type(d)=="table"then eE.r=c._r/d._r;eE.g=c._g/d._g;eE.b=c._b/d._b end;return eE end;local function eO(eP,eQ,eR)local eS=0;local ci=nil;local eF={"r","g","b"}for p,eT in ipairs(eF)do if eQ[eT]~=eP[eT]then ci=eT;break end end;if ci~=nil then eS=math.round((eR[ci]-eP[ci])/eQ[ci]-eP[ci],3)else print("getFrontOpacity(): can't calculate opacity because no suitable component was found",eP,eQ,eR)end;return eS end;function Color.Resolve(eR)local eP=Color.New(0)local eQ=Color.New(0)local eS=0;for ci,h in pairs(eR:ToRGB())do if h~=255 and h>=127.5 then eP[ci]=255;eQ[ci]=0 elseif h~=0 and h<127.5 then eP[ci]=0;eQ[ci]=255 else eP[ci]=h;eQ[ci]=h end end;if eQ==eP then eQ=nil end;if eQ~=nil then eS=eO(eP,eQ,eR)local eU=Color.New((eQ:ToVector3()-eP:ToVector3())*eS+eP:ToVector3())if eU~=eR then print("Color.Resolve(): Sorry, can't resolve ",eR)print("Color.Resolve(): Getting instead ",eU)end end;return eP,eQ,eS end;local function eV(cV,q,eG,d)local eW,bp,eX,eY;local aK=getmetatable(cV)if aK==ModelRenderer then eW="ModelRenderer"bp="Model"eX=ModelRenderer.SetModel;eY=ModelRenderer.GetModel elseif aK==TextRenderer then eW="TextRenderer"bp="Font"eX=TextRenderer.SetFont;eY=TextRenderer.GetFont end;local eE=Color.New(q,eG,d)local eP,eQ,eS=eE:Resolve()local eZ=eP:GetAsset(bp)local e_=eY(cV)if e_~=eZ then eX(cV,eZ)end;local aW=cV.gameObject;local f0=aW["front"..eW]if f0==nil and eQ~=nil then f0=aW:CreateComponent(eW)aW[string.lcfirst(eW)]=cV;aW["front"..eW]=f0;if eW=="TextRenderer"then f0:SetAlignment(cV:GetAlignment())end end;if f0~=nil then if eQ~=nil then local eZ=eQ:GetAsset(bp)local e_=eY(f0)if e_~=eZ then eX(f0,eZ)end end;if eS~=f0:GetOpacity()then f0:SetOpacity(eS)end end end;function ModelRenderer.SetColor(bN,q,eG,d)eV(bN,q,eG,d)end;function TextRenderer.SetColor(bX,q,eG,d)eV(bX,q,eG,d)end;local f1=TextRenderer.SetText;function TextRenderer.SetText(bX,aO)f1(bX,aO)local f0=bX.gameObject.frontTextRenderer;if f0~=nil then f1(f0,aO)end end;local f2=TextRenderer.SetAlignment;function TextRenderer.SetAlignment(bX,b_)f2(bX,b_)local f0=bX.gameObject.frontTextRenderer;if f0~=nil then f2(f0,b_)end end;local function f3(cV)local eW,eY;local aK=getmetatable(cV)if aK==ModelRenderer then eW="ModelRenderer"eY=ModelRenderer.GetModel elseif aK==TextRenderer then eW="TextRenderer"eY=TextRenderer.GetFont end;local eP,eQ,f4;local eS=0;local br=eY(cV)if br~=nil then eP=Color[br:GetName()]end;local aW=cV.gameObject;local f0=aW["front"..eW]if f0~=nil then local br=eY(f0)if br~=nil then eQ=Color[br:GetName()]end;eS=f0:GetOpacity()end;if eP~=nil and eQ~=nil then f4=Color.New((eQ:ToVector3()-eP:ToVector3())*eS+eP:ToVector3())end;return f4,eP,eQ,eS end;function ModelRenderer.GetColor(bN)return f3(bN)end;function TextRenderer.GetColor(bX)return f3(bX)end;Color.colorAssetsFolder="Colors/"Color.modelsByColorName={}Color.fontsByColorName={}function Color.GetAsset(eE,bp)local aY=eE:GetName()local f5=string.lower(bp)local f6=Color[f5 .."sByColorName"]local br=f6[aY]if br==nil then if not string.endswith(Color.colorAssetsFolder,"/")then Color.colorAssetsFolder=Color.colorAssetsFolder.."/"end;local bD=Color.colorAssetsFolder..aY;br=CS.FindAsset(bD,bp)if br==nil then bD=Color.colorAssetsFolder..string.ucfirst(aY)br=CS.FindAsset(bD,bp)end;if br==nil then print("Color.GetAsset(): Could not find asset of type '"..bp.."' at path '"..bD.."' for ",eE)return end;f6[aY]=br end;return br end;Tween={}local function f7(dR)if dR.target~=nil then Daneel.Debug.StackTrace.BeginFunction("GetTweenerProperty",dR)local h=nil;h=dR.target[dR.property]if h==nil then local b4="Get"..string.ucfirst(dR.property)if dR.target[b4]~=nil then h=dR.target[b4](dR.target)end end;Daneel.Debug.StackTrace.EndFunction()return h end end;local function f8(dR,h)if dR.target~=nil then Daneel.Debug.StackTrace.BeginFunction("SetTweenerProperty",dR,h)if dR.valueType=="string"then if type(h)=="number"and h>=#dR.stringValue+1 then local f9=dR.startStringValue..dR.endStringValue:sub(1,h)if f9~=dR.stringValue then dR.stringValue=f9;h=f9 else return end else return end end;if dR.target[dR.property]==nil then local b4="Set"..string.ucfirst(dR.property)if dR.target[b4]~=nil then dR.target[b4](dR.target,dR.property)end else dR.target[dR.property]=h end;Daneel.Debug.StackTrace.EndFunction()end end;Tween.Tweener={tweeners={}}Tween.Tweener.__index=Tween.Tweener;setmetatable(Tween.Tweener,{__call=function(am,...)return am.New(...)end})function Tween.Tweener.__tostring(dR)return"Tweener: "..dR.id end;function Tween.Tweener.New(fa,Y,fb,fc,fd,bC)Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.New",fa,Y,fb,fc,bC)local aF="Tween.Tweener.New(target, property, endValue, duration[, params]) : "local dR=table.copy(Tween.Config.tweener)setmetatable(dR,Tween.Tweener)dR.id=Daneel.Utilities.GetId()local fe=type(fa)local aK=nil;if fe=="table"then aK=getmetatable(fa)end;if fe=="number"or fe=="string"or aK==Vector2 or aK==Vector3 then bC=fd;fd=fc;fc=fb;fb=Y;local ff=fa;aF="Tween.Tweener.New(startValue, endValue, duration[, onCompleteCallback, params]) : "Daneel.Debug.CheckArgType(fc,"duration","number",aF)if type(fd)=="table"then bC=fd;fd=nil end;Daneel.Debug.CheckOptionalArgType(fd,"onCompleteCallback","function",aF)Daneel.Debug.CheckOptionalArgType(bC,"params","table",aF)dR.startValue=ff;dR.endValue=fb;dR.duration=fc;if fd~=nil then dR.OnComplete=fd end;if bC~=nil then dR:Set(bC)end elseif Y==nil then Daneel.Debug.CheckArgType(fa,"params","table",aF)aF="Tween.Tweener.New(params) : "dR:Set(fa)else Daneel.Debug.CheckArgType(fa,"target","table",aF)Daneel.Debug.CheckArgType(Y,"property","string",aF)Daneel.Debug.CheckArgType(fc,"duration","number",aF)if type(fd)=="table"then bC=fd;fd=nil end;Daneel.Debug.CheckOptionalArgType(fd,"onCompleteCallback","function",aF)Daneel.Debug.CheckOptionalArgType(bC,"params","table",aF)dR.target=fa;dR.property=Y;dR.endValue=fb;dR.duration=fc;if fd~=nil then dR.OnComplete=fd end;if bC~=nil then dR:Set(bC)end end;if dR.endValue==nil then error("Tween.Tweener.New(): 'endValue' property is nil for tweener: "..tostring(dR))end;if dR.startValue==nil then dR.startValue=f7(dR)end;if dR.target~=nil then dR.gameObject=dR.target.gameObject end;dR.valueType=Daneel.Debug.GetType(dR.startValue)if dR.valueType=="string"then dR.startStringValue=dR.startValue;dR.stringValue=dR.startStringValue;dR.endStringValue=dR.endValue;dR.startValue=1;dR.endValue=#dR.endStringValue end;Tween.Tweener.tweeners[dR.id]=dR;Daneel.Debug.StackTrace.EndFunction()return dR end;function Tween.Tweener.Set(dR,bC)Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.Set",dR,bC)local aF="Tween.Tweener.Set(tweener, params) : "Daneel.Debug.CheckArgType(dR,"tweener","Tween.Tweener",aF)for D,h in pairs(bC)do dR[D]=h end;Daneel.Debug.StackTrace.EndFunction()return dR end;function Tween.Tweener.Play(dR)if dR.isEnabled==false then return end;Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.Play",dR)local aF="Tween.Tweener.Play(tweener) : "Daneel.Debug.CheckArgType(dR,"tweener","Tween.Tweener",aF)dR.isPaused=false;Daneel.Event.Fire(dR,"OnPlay",dR)Daneel.Debug.StackTrace.EndFunction()end;function Tween.Tweener.Pause(dR)if dR.isEnabled==false then return end;Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.Pause",dR)local aF="Tween.Tweener.Pause(tweener) : "Daneel.Debug.CheckArgType(dR,"tweener","Tween.Tweener",aF)dR.isPaused=true;Daneel.Event.Fire(dR,"OnPause",dR)Daneel.Debug.StackTrace.EndFunction()end;function Tween.Tweener.Restart(dR)if dR.isEnabled==false then return end;Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.Restart",dR)local aF="Tween.Tweener.Restart(tweener) : "Daneel.Debug.CheckArgType(dR,"tweener","Tween.Tweener",aF)dR.elapsed=0;dR.fullElapsed=0;dR.elapsedDelay=0;dR.completedLoops=0;dR.isCompleted=false;dR.hasStarted=false;local ff=dR.startValue;if dR.loopType=="yoyo"and dR.completedLoops%2~=0 then ff=dR.endValue end;if dR.target~=nil then f8(dR,ff)end;dR.value=ff;Daneel.Debug.StackTrace.EndFunction()end;function Tween.Tweener.Complete(dR)if dR.isEnabled==false or dR.loops==-1 then return end;Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.Complete",dR)local aF="Tween.Tweener.Complete( tweener ) : "Daneel.Debug.CheckArgType(dR,"tweener","Tween.Tweener",aF)dR.isCompleted=true;local fb=dR.endValue;if dR.loopType=="yoyo"then if dR.loops%2==0 and dR.completedLoops%2==0 then fb=dR.startValue elseif dR.loops%2~=0 and dR.completedLoops%2~=0 then fb=dR.startValue end end;if dR.target~=nil then f8(dR,fb)end;dR.value=fb;Daneel.Event.Fire(dR,"OnComplete",dR)if dR.destroyOnComplete then dR:Destroy()end;Daneel.Debug.StackTrace.EndFunction()end;local function fg(aW)return aW.isDestroyed==true or aW.inner==nil end;function Tween.Tweener.IsTargetDestroyed(dR)if dR.target~=nil then if dR.target.isDestroyed then return true end;if dR.target.gameObject~=nil and fg(dR.target.gameObject)then return true end end;if dR.gameObject~=nil and fg(dR.gameObject)then return true end;return false end;function Tween.Tweener.Destroy(dR)Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.Destroy",dR)local aF="Tween.Tweener.Destroy( tweener ) : "Daneel.Debug.CheckArgType(dR,"tweener","Tween.Tweener",aF)dR.isEnabled=false;dR.isPaused=true;dR.target=nil;dR.duration=0;Tween.Tweener.tweeners[dR.id]=nil;CraftStudio.Destroy(dR)Daneel.Debug.StackTrace.EndFunction()end;function Tween.Tweener.Update(dR,fh)if dR.isEnabled==false then return end;Daneel.Debug.StackTrace.BeginFunction("Tween.Tweener.Update",dR,fh)local aF="Tween.Tweener.Update(tweener[, deltaDuration]) : "Daneel.Debug.CheckArgType(dR,"tweener","Tween.Tweener",aF)Daneel.Debug.CheckArgType(fh,"deltaDuration","number",aF)if Tween.Ease[dR.easeType]==nil then if Daneel.Config.debug.enableDebug then print("Tween.Tweener.Update() : Easing '"..tostring(dR.easeType).."' for tweener ID '"..tween.id.."' does not exists. Setting it back for the default easing '"..Tween.Config.tweener.easeType.."'.")end;dR.easeType=Tween.Config.tweener.easeType end;if fh~=nil then dR.elapsed=dR.elapsed+fh;dR.fullElapsed=dR.fullElapsed+fh end;local h=nil;if dR.elapsed>dR.duration then dR.isCompleted=true;dR.elapsed=dR.duration;if dR.isRelative==true then h=dR.startValue+dR.endValue else h=dR.endValue end else if dR.valueType=="Vector3"then h=Vector3:New(Tween.Ease[dR.easeType](dR.elapsed,dR.startValue.x,dR.diffValue.x,dR.duration),Tween.Ease[dR.easeType](dR.elapsed,dR.startValue.y,dR.diffValue.y,dR.duration),Tween.Ease[dR.easeType](dR.elapsed,dR.startValue.z,dR.diffValue.z,dR.duration))elseif dR.valueType=="Vector2"then h=Vector2.New(Tween.Ease[dR.easeType](dR.elapsed,dR.startValue.x,dR.diffValue.x,dR.duration),Tween.Ease[dR.easeType](dR.elapsed,dR.startValue.y,dR.diffValue.y,dR.duration))else h=Tween.Ease[dR.easeType](dR.elapsed,dR.startValue,dR.diffValue,dR.duration)end end;if dR.target~=nil then f8(dR,h)end;dR.value=h;Daneel.Event.Fire(dR,"OnUpdate",dR)Daneel.Debug.StackTrace.EndFunction()end;Tween.Timer={}Tween.Timer.__index=Tween.Tweener;setmetatable(Tween.Timer,{__call=function(am,...)return am.New(...)end})function Tween.Timer.New(fc,bi,fi,bC)Daneel.Debug.StackTrace.BeginFunction("Tween.Timer.New",fc,bi,fi,bC)local aF="Tween.Timer.New( duration, callback[, isInfiniteLoop, params] ) : "if type(fi)=="table"then bC=fi;aF="Tween.Timer.New( duration, callback[, params] ) : "end;Daneel.Debug.CheckArgType(fc,"duration","number",aF)Daneel.Debug.CheckArgType(bi,"callback",{"function","userdata"},aF)Daneel.Debug.CheckOptionalArgType(bC,"params","table",aF)local dR=table.copy(Tween.Config.tweener)setmetatable(dR,Tween.Tweener)dR.id=Daneel.Utilities.GetId()dR.startValue=fc;dR.endValue=0;dR.duration=fc;if fi==true then dR.loops=-1;dR.OnLoopComplete=bi else dR.OnComplete=bi end;if bC~=nil then dR:Set(bC)end;Tween.Tweener.tweeners[dR.id]=dR;Daneel.Debug.StackTrace.EndFunction()return dR end;Daneel.modules.Tween=Tween;function Tween.DefaultConfig()local bj={tweener={isEnabled=true,isPaused=false,delay=0.0,duration=0.0,durationType="time",startValue=nil,endValue=0.0,loops=0,loopType="simple",easeType="linear",isRelative=false,destroyOnComplete=true,destroyOnSceneLoad=true,updateInterval=1,Id=-1,hasStarted=false,isCompleted=false,elapsed=0,fullElapsed=0,elapsedDelay=0,completedLoops=0,diffValue=0.0,value=0.0,frameCount=0},objects={["Tween.Tweener"]=Tween.Tweener},propertiesByComponentName={transform={"scale","localScale","position","localPosition","eulerAngles","localEulerAngles"},modelRenderer={"opacity"},mapRenderer={"opacity"},textRenderer={"text","opacity"},camera={"fov"}}}return bj end;Tween.Config=Tween.DefaultConfig()function Tween.Awake()if Tween.Config.componentNamesByProperty==nil then local o={}for fj,fk in pairs(Tween.Config.propertiesByComponentName)do for p=1,#fk do local Y=fk[p]o[Y]=o[Y]or{}table.insert(o[Y],fj)end end;Tween.Config.componentNamesByProperty=o end;for av,dR in pairs(Tween.Tweener.tweeners)do if dR.destroyOnSceneLoad then dR:Destroy()end end end;function Tween.Update()for av,dR in pairs(Tween.Tweener.tweeners)do if dR:IsTargetDestroyed()then dR:Destroy()end;if dR.isEnabled==true and dR.isPaused==false and dR.isCompleted==false and dR.duration>0 then dR.frameCount=dR.frameCount+1;if dR.frameCount%dR.updateInterval==0 then local fh=Daneel.Time.deltaTime*dR.updateInterval;if dR.durationType=="realTime"then fh=Daneel.Time.realDeltaTime*dR.updateInterval elseif dR.durationType=="frame"then fh=dR.updateInterval end;if fh>0 then if dR.elapsedDelay>=dR.delay then if dR.hasStarted==false then dR.hasStarted=true;if dR.startValue==nil then if dR.target~=nil then dR.startValue=f7(dR)else error("Tween.Update() : startValue is nil but no target is set for tweener: "..tostring(dR))end elseif dR.target~=nil then f8(dR,dR.startValue)end;dR.value=dR.startValue;if dR.isRelative==true then dR.diffValue=dR.endValue else dR.diffValue=dR.endValue-dR.startValue end;Daneel.Event.Fire(dR,"OnStart",dR)end;dR:Update(fh)else dR.elapsedDelay=dR.elapsedDelay+fh end;if dR.isCompleted==true then dR.completedLoops=dR.completedLoops+1;if dR.loops==-1 or dR.completedLoops<dR.loops then dR.isCompleted=false;dR.elapsed=0;if dR.loopType:lower()=="yoyo"then local ff=dR.startValue;if dR.isRelative then dR.startValue=dR.value;dR.endValue=-dR.endValue;dR.diffValue=dR.endValue else dR.startValue=dR.endValue;dR.endValue=ff;dR.diffValue=-dR.diffValue end elseif dR.target~=nil then f8(dR,dR.startValue)end;dR.value=dR.startValue;Daneel.Event.Fire(dR,"OnLoopComplete",dR)else Daneel.Event.Fire(dR,"OnComplete",dR)if dR.destroyOnComplete and dR.Destroy~=nil then dR:Destroy()end end end end end end end end;local function fl(aW,Y)local bo=nil;if Daneel.modules.GUI~=nil and aW.hud~=nil and Y=="position"or Y=="localPosition"then bo=aW.hud else local fm=Tween.Config.componentNamesByProperty[Y]if fm~=nil then for p=1,#fm do bo=aW[fm[p]]if bo~=nil then break end end end end;if bo==nil then error("Tween: resolveTarget(): Couldn't resolve the target for property '"..Y.."' and gameObject: "..tostring(aW))end;return bo end;function GameObject.Animate(aW,Y,fb,fc,fd,bC)local bo=nil;if type(fd)=="table"and bC==nil then bC=fd;fd=nil end;if bC~=nil and bC.target~=nil then bo=bC.target else bo=fl(aW,Y)end;return Tween.Tweener.New(bo,Y,fb,fc,fd,bC)end;function GameObject.AnimateAndDestroy(aW,Y,fb,fc,bC)local bo=nil;if bC~=nil and bC.target~=nil then bo=bC.target else bo=fl(aW,Y)end;return Tween.Tweener.New(bo,Y,fb,fc,function()aW:Destroy()end,bC)end
-- Easing equations
-- From Emmanuel Oga's easing equations : https://github.com/EmmanuelOga/easing

--
-- Adapted from
-- Tweener's easing functions (Penner's Easing Equations)
-- and http://code.google.com/p/tweener/ (jstweener javascript version)
--

--[[
Disclaimer for Robert Penner's Easing Equations license:

TERMS OF USE - EASING EQUATIONS

Open source under the BSD License.

Copyright © 2001 Robert Penner
All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
* Neither the name of the author nor the names of contributors may be used to endorse or promote products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
]]

-- For all easing functions:
-- t = elapsed time
-- b = begin
-- c = change == ending - beginning
-- d = duration (total time)

local pow = math.pow
local sin = math.sin
local cos = math.cos
local pi = math.pi
local sqrt = math.sqrt
local abs = math.abs
local asin = math.asin

local function linear(t, b, c, d)
  return c * t / d + b
end

local function inQuad(t, b, c, d)
  t = t / d
  return c * pow(t, 2) + b
end

local function outQuad(t, b, c, d)
  t = t / d
  return -c * t * (t - 2) + b
end

local function inOutQuad(t, b, c, d)
  t = t / d * 2
  if t < 1 then
    return c / 2 * pow(t, 2) + b
  else
    return -c / 2 * ((t - 1) * (t - 3) - 1) + b
  end
end

local function outInQuad(t, b, c, d)
  if t < d / 2 then
    return outQuad (t * 2, b, c / 2, d)
  else
    return inQuad((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inCubic (t, b, c, d)
  t = t / d
  return c * pow(t, 3) + b
end

local function outCubic(t, b, c, d)
  t = t / d - 1
  return c * (pow(t, 3) + 1) + b
end

local function inOutCubic(t, b, c, d)
  t = t / d * 2
  if t < 1 then
    return c / 2 * t * t * t + b
  else
    t = t - 2
    return c / 2 * (t * t * t + 2) + b
  end
end

local function outInCubic(t, b, c, d)
  if t < d / 2 then
    return outCubic(t * 2, b, c / 2, d)
  else
    return inCubic((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inQuart(t, b, c, d)
  t = t / d
  return c * pow(t, 4) + b
end

local function outQuart(t, b, c, d)
  t = t / d - 1
  return -c * (pow(t, 4) - 1) + b
end

local function inOutQuart(t, b, c, d)
  t = t / d * 2
  if t < 1 then
    return c / 2 * pow(t, 4) + b
  else
    t = t - 2
    return -c / 2 * (pow(t, 4) - 2) + b
  end
end

local function outInQuart(t, b, c, d)
  if t < d / 2 then
    return outQuart(t * 2, b, c / 2, d)
  else
    return inQuart((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inQuint(t, b, c, d)
  t = t / d
  return c * pow(t, 5) + b
end

local function outQuint(t, b, c, d)
  t = t / d - 1
  return c * (pow(t, 5) + 1) + b
end

local function inOutQuint(t, b, c, d)
  t = t / d * 2
  if t < 1 then
    return c / 2 * pow(t, 5) + b
  else
    t = t - 2
    return c / 2 * (pow(t, 5) + 2) + b
  end
end

local function outInQuint(t, b, c, d)
  if t < d / 2 then
    return outQuint(t * 2, b, c / 2, d)
  else
    return inQuint((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inSine(t, b, c, d)
  return -c * cos(t / d * (pi / 2)) + c + b
end

local function outSine(t, b, c, d)
  return c * sin(t / d * (pi / 2)) + b
end

local function inOutSine(t, b, c, d)
  return -c / 2 * (cos(pi * t / d) - 1) + b
end

local function outInSine(t, b, c, d)
  if t < d / 2 then
    return outSine(t * 2, b, c / 2, d)
  else
    return inSine((t * 2) -d, b + c / 2, c / 2, d)
  end
end

local function inExpo(t, b, c, d)
  if t == 0 then
    return b
  else
    return c * pow(2, 10 * (t / d - 1)) + b - c * 0.001
  end
end

local function outExpo(t, b, c, d)
  if t == d then
    return b + c
  else
    return c * 1.001 * (-pow(2, -10 * t / d) + 1) + b
  end
end

local function inOutExpo(t, b, c, d)
  if t == 0 then return b end
  if t == d then return b + c end
  t = t / d * 2
  if t < 1 then
    return c / 2 * pow(2, 10 * (t - 1)) + b - c * 0.0005
  else
    t = t - 1
    return c / 2 * 1.0005 * (-pow(2, -10 * t) + 2) + b
  end
end

local function outInExpo(t, b, c, d)
  if t < d / 2 then
    return outExpo(t * 2, b, c / 2, d)
  else
    return inExpo((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inCirc(t, b, c, d)
  t = t / d
  return(-c * (sqrt(1 - pow(t, 2)) - 1) + b)
end

local function outCirc(t, b, c, d)
  t = t / d - 1
  return(c * sqrt(1 - pow(t, 2)) + b)
end

local function inOutCirc(t, b, c, d)
  t = t / d * 2
  if t < 1 then
    return -c / 2 * (sqrt(1 - t * t) - 1) + b
  else
    t = t - 2
    return c / 2 * (sqrt(1 - t * t) + 1) + b
  end
end

local function outInCirc(t, b, c, d)
  if t < d / 2 then
    return outCirc(t * 2, b, c / 2, d)
  else
    return inCirc((t * 2) - d, b + c / 2, c / 2, d)
  end
end

local function inElastic(t, b, c, d, a, p)
  if t == 0 then return b end

  t = t / d

  if t == 1 then return b + c end

  if not p then p = d * 0.3 end

  local s

  if not a or a < abs(c) then
    a = c
    s = p / 4
  else
    s = p / (2 * pi) * asin(c/a)
  end

  t = t - 1

  return -(a * pow(2, 10 * t) * sin((t * d - s) * (2 * pi) / p)) + b
end

-- a: amplitud
-- p: period
local function outElastic(t, b, c, d, a, p)
  if t == 0 then return b end

  t = t / d

  if t == 1 then return b + c end

  if not p then p = d * 0.3 end

  local s

  if not a or a < abs(c) then
    a = c
    s = p / 4
  else
    s = p / (2 * pi) * asin(c/a)
  end

  return a * pow(2, -10 * t) * sin((t * d - s) * (2 * pi) / p) + c + b
end

-- p = period
-- a = amplitud
local function inOutElastic(t, b, c, d, a, p)
  if t == 0 then return b end

  t = t / d * 2

  if t == 2 then return b + c end

  if not p then p = d * (0.3 * 1.5) end
  if not a then a = 0 end

  if not a or a < abs(c) then
    a = c
    s = p / 4
  else
    s = p / (2 * pi) * asin(c / a)
  end

  if t < 1 then
    t = t - 1
    return -0.5 * (a * pow(2, 10 * t) * sin((t * d - s) * (2 * pi) / p)) + b
  else
    t = t - 1
    return a * pow(2, -10 * t) * sin((t * d - s) * (2 * pi) / p ) * 0.5 + c + b
  end
end

-- a: amplitud
-- p: period
local function outInElastic(t, b, c, d, a, p)
  if t < d / 2 then
    return outElastic(t * 2, b, c / 2, d, a, p)
  else
    return inElastic((t * 2) - d, b + c / 2, c / 2, d, a, p)
  end
end

local function inBack(t, b, c, d, s)
  if not s then s = 1.70158 end
  t = t / d
  return c * t * t * ((s + 1) * t - s) + b
end

local function outBack(t, b, c, d, s)
  if not s then s = 1.70158 end
  t = t / d - 1
  return c * (t * t * ((s + 1) * t + s) + 1) + b
end

local function inOutBack(t, b, c, d, s)
  if not s then s = 1.70158 end
  s = s * 1.525
  t = t / d * 2
  if t < 1 then
    return c / 2 * (t * t * ((s + 1) * t - s)) + b
  else
    t = t - 2
    return c / 2 * (t * t * ((s + 1) * t + s) + 2) + b
  end
end

local function outInBack(t, b, c, d, s)
  if t < d / 2 then
    return outBack(t * 2, b, c / 2, d, s)
  else
    return inBack((t * 2) - d, b + c / 2, c / 2, d, s)
  end
end

local function outBounce(t, b, c, d)
  t = t / d
  if t < 1 / 2.75 then
    return c * (7.5625 * t * t) + b
  elseif t < 2 / 2.75 then
    t = t - (1.5 / 2.75)
    return c * (7.5625 * t * t + 0.75) + b
  elseif t < 2.5 / 2.75 then
    t = t - (2.25 / 2.75)
    return c * (7.5625 * t * t + 0.9375) + b
  else
    t = t - (2.625 / 2.75)
    return c * (7.5625 * t * t + 0.984375) + b
  end
end

local function inBounce(t, b, c, d)
  return c - outBounce(d - t, 0, c, d) + b
end

local function inOutBounce(t, b, c, d)
  if t < d / 2 then
    return inBounce(t * 2, 0, c, d) * 0.5 + b
  else
    return outBounce(t * 2 - d, 0, c, d) * 0.5 + c * .5 + b
  end
end

local function outInBounce(t, b, c, d)
  if t < d / 2 then
    return outBounce(t * 2, b, c / 2, d)
  else
    return inBounce((t * 2) - d, b + c / 2, c / 2, d)
  end
end

-- Modifications for Daneel : replaced 'return {' by 'Tween.Ease = {'
Tween.Ease = {
  linear = linear,
  inQuad = inQuad,
  outQuad = outQuad,
  inOutQuad = inOutQuad,
  outInQuad = outInQuad,
  inCubic = inCubic ,
  outCubic = outCubic,
  inOutCubic = inOutCubic,
  outInCubic = outInCubic,
  inQuart = inQuart,
  outQuart = outQuart,
  inOutQuart = inOutQuart,
  outInQuart = outInQuart,
  inQuint = inQuint,
  outQuint = outQuint,
  inOutQuint = inOutQuint,
  outInQuint = outInQuint,
  inSine = inSine,
  outSine = outSine,
  inOutSine = inOutSine,
  outInSine = outInSine,
  inExpo = inExpo,
  outExpo = outExpo,
  inOutExpo = inOutExpo,
  outInExpo = outInExpo,
  inCirc = inCirc,
  outCirc = outCirc,
  inOutCirc = inOutCirc,
  outInCirc = outInCirc,
  inElastic = inElastic,
  outElastic = outElastic,
  inOutElastic = inOutElastic,
  outInElastic = outInElastic,
  inBack = inBack,
  outBack = outBack,
  inOutBack = inOutBack,
  outInBack = outInBack,
  inBounce = inBounce,
  outBounce = outBounce,
  inOutBounce = inOutBounce,
  outInBounce = outInBounce,
}

