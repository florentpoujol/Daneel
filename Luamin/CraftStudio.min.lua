local a="string"local b="boolean"local c="number"local d="table"local e="GameObject"local f="Vector2"local g="Vector3"local h={"params",d}setmetatable(Vector3,{__call=function(i,...)return i:New(...)end})setmetatable(Quaternion,{__call=function(i,...)return i:New(...)end})setmetatable(Plane,{__call=function(i,...)return i:New(...)end})Plane.__tostring=function(j)return"Plane: { normal="..tostring(j.normal)..", distance="..tostring(j.distance).." }"end;Asset={}Asset.__index=Asset;setmetatable(Asset,{__call=function(i,...)return i.Get(...)end})local k={"string"}function Asset.Get(l,m,n)local o="Asset.Get( assetPath[, assetType, errorIfAssetNotFound] ) : "if l==nil then if Daneel.Config.debug.enableDebug then error(o.."Argument 'assetPath' is nil.")end;return nil end;if#k==1 then k=table.merge(k,Daneel.Config.assetTypes)end;local p=Daneel.Debug.CheckArgType(l,"assetPath",k,o)if m~=nil then Daneel.Debug.CheckArgType(m,"assetType","string",o)m=Daneel.Debug.CheckArgValue(m,"assetType",Daneel.Config.assetTypes,o)end;if table.containsvalue(Daneel.Config.assetTypes,p)then if m~=nil and p~=m then error(o.."Provided asset '"..l.."' has a different type '"..p.."' than the provided 'assetType' argument '"..m.."'.")end;return l end;Daneel.Debug.CheckOptionalArgType(n,"errorIfAssetNotFound","boolean",o)local q=l;if Daneel.Config.scriptPaths[q]~=nil then l=Daneel.Config.scriptPaths[q]m="Script"end;local r=nil;if m==nil then r=CraftStudio.FindAsset(l)else r=CraftStudio.FindAsset(l,m)end;if r==nil and n then if m==nil then m="asset"end;error(o.."Argument 'assetPath' : "..m.." with name '"..l.."' was not found.")end;return r end;function Asset.GetPath(r)return Map.GetPathInPackage(r)end;function Asset.GetName(r)local s=rawget(r,"name")if s==nil then s=Asset.GetPath(r):gsub("^(.*/)","")rawset(r,"name",s)end;return s end;function Asset.GetId(r)return Daneel.Utilities.GetId(r)end;Component={}Component.__index=Component;function Component.Set(t,u)for v,w in pairs(u)do t[v]=w end end;function Component.Destroy(t)table.removevalue(t.gameObject,t)CraftStudio.Destroy(t)end;function Component.GetId(t)return Daneel.Utilities.GetId(t)end;table.mergein(Daneel.functionsDebugInfo,{["Asset.Get"]={{"assetPath"},{"assetType",isOptional=true},{"errorIfAssetNotFound",defaultValue=false}},["Asset.GetPath"]={{"asset",Daneel.Config.assetTypes}},["Asset.GetName"]={{"asset",Daneel.Config.assetTypes}},["Component.Set"]={{"component",Daneel.Config.componentTypes},{"params",defaultValue={}}},["Component.Destroy"]={{"component",Daneel.Config.componentTypes}}})Map.oGetPathInPackage=Map.GetPathInPackage;function Map.GetPathInPackage(r)local x=rawget(r,"path")if x==nil then x=Map.oGetPathInPackage(r)end;return x end;Map.oLoadFromPackage=Map.LoadFromPackage;function Map.LoadFromPackage(x,y)Map.oLoadFromPackage(x,function(z)if z~=nil then rawset(z,"path",x)z.isDynamicallyLoaded=true end;y(z)end)end;Transform.oSetLocalScale=Transform.SetLocalScale;function Transform.SetLocalScale(A,B)if type(B)=="number"then B=Vector3:New(B)end;Transform.oSetLocalScale(A,B)end;function Transform.SetScale(A,B)if type(B)=="number"then B=Vector3:New(B)end;local C=A.gameObject:GetParent()if C~=nil then B=B/C.transform:GetScale()end;A:SetLocalScale(B)end;function Transform.GetScale(A)local B=A:GetLocalScale()local C=A.gameObject:GetParent()if C~=nil then B=B*C.transform:GetScale()end;return B end;function Transform.WorldToLocal(A,D)local e=A.worldToLocalGO;if e==nil then e=CS.CreateGameObject("WorldToLocal",A.gameObject)A.worldToLocalGO=e end;e.transform:SetPosition(D)return e.transform:GetLocalPosition()end;function Transform.LocalToWorld(A,D)local e=A.worldToLocalGO;if e==nil then e=CS.CreateGameObject("WorldToLocal",A.gameObject)A.worldToLocalGO=e end;e.transform:SetLocalPosition(D)return e.transform:GetPosition()end;ModelRenderer.oSetModel=ModelRenderer.SetModel;function ModelRenderer.SetModel(E,F)local G=nil;if F~=nil then G=Asset.Get(F,"Model",true)end;ModelRenderer.oSetModel(E,G)end;ModelRenderer.oSetAnimation=ModelRenderer.SetAnimation;function ModelRenderer.SetAnimation(E,H)local I=nil;if H~=nil then I=Asset.Get(H,"ModelAnimation",true)end;ModelRenderer.oSetAnimation(E,I)end;function ModelRenderer.Set(E,u)if u.model~=nil then E:SetModel(u.model)u.model=nil end;if u.animationTime~=nil and u.animation~=nil then E:SetAnimation(u.animation)u.animation=nil end;Component.Set(E,u)end;MapRenderer.oSetMap=MapRenderer.SetMap;function MapRenderer.SetMap(J,K,L)local z=nil;if K~=nil then z=Asset.Get(K,"Map",true)end;if L~=nil then MapRenderer.oSetMap(J,z,L)else MapRenderer.oSetMap(J,z)end end;MapRenderer.oSetTileSet=MapRenderer.SetTileSet;function MapRenderer.SetTileSet(J,M)local N=nil;if M~=nil then N=Asset.Get(M,"TileSet",true)end;MapRenderer.oSetTileSet(J,N)end;function MapRenderer.Set(J,u)if u.map~=nil then J:SetMap(u.map)u.map=nil end;Component.Set(J,u)end;TextRenderer.oSetFont=TextRenderer.SetFont;function TextRenderer.SetFont(O,P)local Q=nil;if P~=nil then Q=Asset.Get(P,"Font",true)end;TextRenderer.oSetFont(O,Q)end;TextRenderer.oSetAlignment=TextRenderer.SetAlignment;function TextRenderer.SetAlignment(O,R)if type(R)=="string"then local S="Center"if Daneel.Config.textRenderer~=nil and Daneel.Config.textRenderer.alignment~=nil then S=Daneel.Config.textRenderer.alignment end;local o="TextRenderer.SetAlignment( textRenderer, alignment ) : "R=Daneel.Debug.CheckArgValue(R,"alignment",{"Left","Center","Right"},o,S)R=TextRenderer.Alignment[R]end;TextRenderer.oSetAlignment(O,R)end;function TextRenderer.SetTextWidth(O,T)local U=O:GetTextWidth()/O.gameObject.transform:GetScale()O.gameObject.transform:SetScale(T/U)end;Camera.oSetProjectionMode=Camera.SetProjectionMode;function Camera.SetProjectionMode(V,W)if type(W)=="string"then local S="Perspective"if Daneel.Config.camera~=nil and Daneel.Config.camera.projectionMode~=nil then S=Daneel.Config.camera.projectionMode end;W=Daneel.Debug.CheckArgValue(W,"projectionMode",{"Perspective","Orthographic"},"Camera.SetProjectionMode( camera[, projectionMode] ) : ",S)W=Camera.ProjectionMode[W]end;Camera.oSetProjectionMode(V,W)end;function Camera.Set(V,u)if u.projectionMode~=nil then V:SetProjectionMode(u.projectionMode)u.projectionMode=nil end;Component.Set(V,u)end;function Camera.GetPixelsToUnits(V)local X=CS.Screen.GetSize()local Y=X.y;if X.x<X.y then Y=X.x end;if V:GetProjectionMode()==Camera.ProjectionMode.Orthographic then return V:GetOrthographicScale()/Y else return math.tan(math.rad(V:GetFOV()/2))/Y*2 end end;function Camera.GetUnitsToPixels(V)local Z=V:GetPixelsToUnits()if Z~=nil and Z~=0 then return 1/Z end end;function Camera.GetBaseDistance(V)if V:GetProjectionMode()==Camera.ProjectionMode.Perspective then return 0.5/math.tan(math.rad(V:GetFOV()/2))end end;function Camera.IsPositionInFrustum(V,D)local _=V.gameObject.transform:WorldToLocal(D)if _.z<0 then local X=CS.Screen.GetSize()local a0=Vector2.New(0)if V:GetProjectionMode()==Camera.ProjectionMode.Orthographic then a0=X*V:GetPixelsToUnits()/2 else local Y=X.y;if X.x<X.y then Y=X.x end;a0=-_.z/V:GetBaseDistance()*X/Y;a0=a0/2 end;if _.x>=-a0.x and _.x<=a0.x and _.y>=-a0.y and _.y<=a0.y then return true end end;return false end;function Camera.WorldToScreenPoint(V,D)local _=V.gameObject.transform:WorldToLocal(D)local a1=V:GetUnitsToPixels()local X=CS.Screen.GetSize()if V:GetProjectionMode()==Camera.ProjectionMode.Orthographic then _.x=_.x*a1+X.x/2;_.y=-_.y*a1+X.y/2 else local a2=math.abs(_.z)_.x=_.x/a2*a1+X.x/2;_.y=-_.y/a2*a1+X.y/2 end;return _ end;Camera.oGetFOV=Camera.GetFOV;function Camera.GetFOV(V)return math.round(Camera.oGetFOV(V),2)end;Camera.GetFov=Camera.GetFOV;Camera.SetFov=Camera.SetFOV;Camera.oProject=Camera.Project;function Camera.Project(V,D)return setmetatable(Camera.oProject(V,D),Vector2)end;table.mergein(Daneel.functionsDebugInfo,{["Transform.SetLocalScale"]={{"transform","Transform"},{"number",{c,g}}},["Transform.SetScale"]={{"transform","Transform"},{"number",{c,g}}},["Transform.GetScale"]={{"transform","Transform"}},["Transform.WorldToLocal"]={{"transform","Transform"},{"position",g}},["Transform.LocalToWorld"]={{"transform","Transform"},{"position",g}},["ModelRenderer.SetModel"]={{"modelRenderer","ModelRenderer"},{"modelNameOrAsset",{a,"Model"},isOptional=true}},["ModelRenderer.SetAnimation"]={{"modelRenderer","ModelRenderer"},{"animationNameOrAsset",{a,"ModelAnimation"},isOptional=true}},["ModelRenderer.Set"]={{"modelRenderer","ModelRenderer"},h},["MapRenderer.SetMap"]={{"mapRenderer","MapRenderer"},{"mapNameOrAsset",{a,"Map"},isOptional=true},{"replaceTileSet",defaultValue=true}},["MapRenderer.SetTileSet"]={{"mapRenderer","MapRenderer"},{"tileSetNameOrAsset",{a,"TileSet"}}},["MapRenderer.Set"]={{"mapRenderer","MapRenderer"},h},["TextRenderer.SetFont"]={{"textRenderer","TextRenderer"},{"fontNameOrAsset",{a,"Font"}}},["TextRenderer.SetAlignment"]={{"textRenderer","TextRenderer"},{"alignment",{a,"userdata",c}}},["TextRenderer.SetTextWidth"]={{"textRenderer","TextRenderer"},{"width",c}},["Camera.SetProjectionMode"]={{"camera","Camera"},{"projectionMode",{a,"userdata",c}}},["Camera.Set"]={{"camera","Camera"},h},["Camera.GetPixelsToUnits"]={{"camera","Camera"}},["Camera.GetUnitsToPixels"]={{"camera","Camera"}},["Camera.GetBaseDistance"]={{"camera","Camera"}},["Camera.IsPositionInFrustum"]={{"camera","Camera"},{"position",g}},["Camera.WorldToScreenPoint"]={{"camera","Camera"},{"position",g}},["Camera.GetFOV"]={{"camera","Camera"}}})Vector2={}Vector2.__index=Vector2;setmetatable(Vector2,{__call=function(i,...)return i.New(...)end})Daneel.modules.Vector2={DefaultConfig={objects={Vector2=Vector2}}}function Vector2.__tostring(a3)return"Vector2: { x="..a3.x..", y="..a3.y.." }"end;function Vector2.New(a4,a5)local a6=setmetatable({x=a4,y=a5},Vector2)if type(a4)=="table"then a6.x=a4.x;a6.y=a4.y elseif a5==nil then a6.y=a4 end;return a6 end;function Vector2.GetLength(a6)return math.sqrt(a6.x^2+a6.y^2)end;function Vector2.GetSqrLength(a6)return a6.x^2+a6.y^2 end;function Vector2.Normalized(a6)return Vector2.New(a6.x,a6.y):Normalize()end;function Vector2.Normalize(a6)local a7=a6:GetLength()if a7~=0 then a6=a6/a7 end end;function Vector2.__add(a8,b)return Vector2.New(a8.x+b.x,a8.y+b.y)end;function Vector2.__sub(a8,b)return Vector2.New(a8.x-b.x,a8.y-b.y)end;function Vector2.__mul(a8,b)local a9=nil;if type(a8)=="number"then a9=Vector2.New(a8*b.x,a8*b.y)elseif type(b)=="number"then a9=Vector2.New(a8.x*b,a8.y*b)else a9=Vector2.New(a8.x*b.x,a8.y*b.y)end;return a9 end;function Vector2.__div(a8,b)local o="Vector2.__div(a, b) : "local a9=nil;if type(a8)=="number"then if b.x==0 or b.y==0 then error(o.."One of the components of the denominator is equal to 0. Can't divide by 0 !",a8,b)end;a9=Vector2.New(a8/b.x,a8/b.y)elseif type(b)=="number"then if b==0 then error(o.."The denominator is equal to 0 ! Can't divide by 0 !",a8,b)end;a9=Vector2.New(a8.x/b,a8.y/b)else if b.x==0 or b.y==0 then error(o.."One of the components of the denominator is equal to 0. Can't divide by 0 !",a8,b)end;a9=Vector2.New(a8.x/b.x,a8.y/b.y)end;return a9 end;function Vector2.__unm(a6)return Vector2.New(-a6.x,-a6.y)end;function Vector2.__pow(a6,aa)return Vector2.New(a6.x^aa,a6.y^aa)end;function Vector2.__eq(a8,b)return a8.x==b.x and a8.y==b.y end;Vector3.tostringRoundValue=3;Vector3.__tostring=function(a6)local ab=Vector3.tostringRoundValue;if ab~=nil and ab>=0 then return"Vector3: { x="..math.round(a6.x,ab)..", y="..math.round(a6.y,ab)..", z="..math.round(a6.z,ab).." }"else return"Vector3: { x="..a6.x..", y="..a6.y..", z="..a6.z.." }"end end;function Vector3.New(a4,a5,ac,ad)if a4==Vector3 then a4=a5;a5=ac;ac=ad end;if type(a4)=="table"then if a4.z==nil then a5=a4.y;a4=a4.x else a5=a4.y;ac=a4.z;a4=a4.x end elseif type(a5)=="table"then ac=a5.y;a5=a5.x end;a4=a4 or 0;a5=a5 or a4;ac=ac or a5;return setmetatable({x=a4,y=a5,z=ac},Vector3)end;function Vector3.GetLength(a6)return math.sqrt(a6.x^2+a6.y^2+a6.z^2)end;function Vector3.GetSqrLength(a6)return a6.x^2+a6.y^2+a6.z^2 end;table.mergein(Daneel.functionsDebugInfo,{["Vector2.New"]={{"x",{a,c,d,f}},{"y",{a,c},isOptional=true}},["Vector2.GetLength"]={{"vector",f}},["Vector2.GetSqrLength"]={{"vector",f}},["Vector2.Normalized"]={{"vector",f}},["Vector2.Normalize"]={{"vector",f}},["Vector2.__add"]={{"a",f},{"b",f}},["Vector2.__sub"]={{"a",f},{"b",f}},["Vector2.__mul"]={{"a",{c,f}},{"b",{c,f}}},["Vector2.__div"]={{"a",{c,f}},{"b",{c,f}}},["Vector2.__unm"]={{"vector",f}},["Vector2.__pow"]={{"vector",f},{"exp","number"}},["Vector2.__add"]={{"a",f},{"b",f}},["Vector3.GetLength"]={{"vector",g}},["Vector3.GetSqrLength"]={{"vector",g}}})CraftStudio.Input.oGetMousePosition=CraftStudio.Input.GetMousePosition;function CraftStudio.Input.GetMousePosition()return setmetatable(CraftStudio.Input.oGetMousePosition(),Vector2)end;CraftStudio.Input.oGetMouseDelta=CraftStudio.Input.GetMouseDelta;function CraftStudio.Input.GetMouseDelta()return setmetatable(CraftStudio.Input.oGetMouseDelta(),Vector2)end;CraftStudio.Screen.oGetSize=CraftStudio.Screen.GetSize;function CraftStudio.Screen.GetSize()return setmetatable(CraftStudio.Screen.oGetSize(),Vector2)end;RaycastHit={}RaycastHit.__index=RaycastHit;setmetatable(RaycastHit,{__call=function(i,...)return i.New(...)end})Daneel.Config.objects.RaycastHit=RaycastHit;function RaycastHit.__tostring(ae)local af="RaycastHit: { "local ag=true;for v,w in pairs(ae)do if ag then af=af..v.."="..tostring(w)ag=false else af=af..", "..v.."="..tostring(w)end end;return af.." }"end;Daneel.functionsDebugInfo["RaycastHit.New"]={{"params",defaultValue={}}}function RaycastHit.New(u)if u==nil then u={}end;return setmetatable(u,RaycastHit)end;setmetatable(Ray,{__call=function(i,...)return i:New(...)end})function Ray.Cast(ah,ai,aj)local ak={}for al,am in pairs(ai)do if am.inner~=nil then local an=ah:IntersectsGameObject(am)if an~=nil then table.insert(ak,an)end end end;if aj==true then ak=table.sortby(ak,"distance")end;return ak end;function Ray.IntersectsGameObject(ah,ao)local am=GameObject.Get(ao,true)local an=nil;if am.inner==nil then return nil end;local t=am.modelRenderer;if t~=nil then an=ah:IntersectsModelRenderer(t,true)end;if an==nil then t=am.mapRenderer;if t~=nil then an=ah:IntersectsMapRenderer(t,true)end end;if an==nil then t=am.textRenderer;if t~=nil then an=ah:IntersectsTextRenderer(t,true)end end;if an~=nil then an.gameObject=am end;return an end;Ray.oIntersectsPlane=Ray.IntersectsPlane;function Ray.IntersectsPlane(ah,ap,aq)local a2=Ray.oIntersectsPlane(ah,ap)if aq and a2~=nil then return RaycastHit.New({distance=a2,hitLocation=ah.position+ah.direction*a2,hitObject=ap})end;return a2 end;Ray.oIntersectsModelRenderer=Ray.IntersectsModelRenderer;function Ray.IntersectsModelRenderer(ah,E,aq)local a2,ar=Ray.oIntersectsModelRenderer(ah,E)if aq and a2~=nil then return RaycastHit.New({distance=a2,normal=ar,hitLocation=ah.position+ah.direction*a2,hitObject=E,gameObject=E.gameObject})end;return a2,ar end;Ray.oIntersectsMapRenderer=Ray.IntersectsMapRenderer;function Ray.IntersectsMapRenderer(ah,J,aq)local a2,ar,as,at=Ray.oIntersectsMapRenderer(ah,J)if as~=nil then setmetatable(as,Vector3)end;if at~=nil then setmetatable(at,Vector3)end;if aq and a2~=nil then return RaycastHit.New({distance=a2,normal=ar,hitBlockLocation=as,adjacentBlockLocation=at,hitLocation=ah.position+ah.direction*a2,hitObject=J,gameObject=J.gameObject})end;return a2,ar,as,at end;Ray.oIntersectsTextRenderer=Ray.IntersectsTextRenderer;function Ray.IntersectsTextRenderer(ah,O,aq)local a2,ar=Ray.oIntersectsTextRenderer(ah,O)if aq and a2~=nil then return RaycastHit.New({distance=a2,normal=ar,hitLocation=ah.position+ah.direction*a2,hitObject=O,gameObject=O.gameObject})end;return a2,ar end;function Scene.Load(au)CraftStudio.LoadScene(au)end;CraftStudio.oLoadScene=CraftStudio.LoadScene;function CraftStudio.LoadScene(au)local av=Asset.Get(au,"Scene",true)Daneel.Event.Fire("OnSceneLoad",av)Daneel.Event.events={}Scene.current=av;CraftStudio.oLoadScene(av)end;function Scene.Append(au,aw)local av=Asset.Get(au,"Scene",true)local C=nil;if aw~=nil then C=GameObject.Get(aw,true)end;return CraftStudio.AppendScene(av,C)end;CraftStudio.oDestroy=CraftStudio.Destroy;function CraftStudio.Destroy(ax)if type(ax)=="table"then Daneel.Event.Fire(ax,"OnDestroy",ax)Daneel.Event.StopListen(ax)ax.isDestroyed=true end;CraftStudio.oDestroy(ax)end;local ay={"ray","Ray"}local az={"returnRaycastHit",defaultValue=false}table.mergein(Daneel.functionsDebugInfo,{["Ray.Cast"]={ay,{"gameObjects",d},{"sortByDistance",defaultValue=false}},["Ray.IntersectsGameObject"]={ay,{"gameObjectNameOrInstance",{a,e}},az},["Ray.IntersectsPlane"]={ay,{"plane","Plane"},az},["Ray.IntersectsModelRenderer"]={ay,{"modelRenderer","ModelRenderer"},az},["Ray.IntersectsMapRenderer"]={ay,{"mapRenderer","MapRenderer"},az},["Ray.IntersectsTextRenderer"]={ay,{"textRenderer","TextRenderer"},az},["Scene.Load"]={{"sceneNameOrAsset",{a,"Scene"}}},["CraftStudio.LoadScene"]={{"sceneNameOrAsset",{a,"Scene"}}},["Scene.Append"]={{"sceneNameOrAsset",{a,"Scene"}},{"parentNameOrInstance",{a,e},isOptional=true}},["CraftStudio.Destroy"]={{"object"}}})CraftStudio.Input.isMouseLocked=false;CraftStudio.Input.oLockMouse=CraftStudio.Input.LockMouse;function CraftStudio.Input.LockMouse()CraftStudio.Input.isMouseLocked=true;CraftStudio.Input.oLockMouse()end;CraftStudio.Input.oUnlockMouse=CraftStudio.Input.UnlockMouse;function CraftStudio.Input.UnlockMouse()CraftStudio.Input.isMouseLocked=false;CraftStudio.Input.oUnlockMouse()end;function CraftStudio.Input.ToggleMouseLock()if CraftStudio.Input.isMouseLocked then CraftStudio.Input.UnlockMouse()else CraftStudio.Input.LockMouse()end end;setmetatable(GameObject,{__call=function(i,...)return i.New(...)end})function GameObject.__tostring(am)if rawget(am,"inner")==nil then return"Destroyed GameObject: "..tostring(am:GetId())..": '"..tostring(am._name).."': "..Daneel.Debug.ToRawString(am)end;return"GameObject: "..am:GetId()..": '"..am:GetName().."'"end;function GameObject.__index(am,v)if GameObject[v]~=nil then return GameObject[v]end;local x=Daneel.Config.scriptPaths[v]if x~=nil then local aA=am:GetScriptedBehavior(x)if aA~=nil then rawset(am,v,aA)return aA end end;if type(v)=="string"then local aB=string.ucfirst(v)if v~=aB then local aC="Get"..aB;if GameObject[aC]~=nil then return GameObject[aC](am)end end end;return nil end;function GameObject.__newindex(am,v,w)local aB=v;if type(v)=="string"then aB=string.ucfirst(v)end;if v~=aB and v~="transform"then local aC="Set"..aB;if GameObject[aC]~=nil then return GameObject[aC](am,w)end end;rawset(am,v,w)end;function GameObject.New(s,u)local am=nil;local av=Asset.Get(s,"Scene")if av~=nil then am=CraftStudio.AppendScene(av)else am=CraftStudio.CreateGameObject(s)end;if u~=nil and am~=nil then am:Set(u)end;return am end;function GameObject.Instantiate(aD,au,u)local av=Asset.Get(au,"Scene",true)local am=CraftStudio.Instantiate(aD,av)if u~=nil then am:Set(u)end;return am end;function GameObject.Set(am,u)local o="GameObject.Set( gameObject[, params] ) :"if u.parent~=nil then am:SetParent(u.parent)u.parent=nil end;if u.transform~=nil then am.transform:Set(u.transform)u.transform=nil end;for al,aE in pairs(Daneel.Config.componentTypes)do local t=nil;if aE~="ScriptedBehavior"then aE=aE:lower()local aF=nil;for v,w in pairs(u)do if v:lower()==aE then aF=w;Daneel.Debug.CheckArgType(aF,"params."..v,"table",o)break end end;if aF~=nil then for v,w in pairs(am)do if v:lower()==aE then t=w;break end end;if t==nil then t=am:GetComponent(aE)end;if t==nil then t=am:AddComponent(aE,aF)else t:Set(aF)end;table.removevalue(u,aF)end end end;for v,w in pairs(u)do if Daneel.Config.scriptPaths[v]~=nil or table.containsvalue(Daneel.Config.scriptPaths,v)then local aG=v;if Daneel.Config.scriptPaths[v]~=nil then aG=Daneel.Config.scriptPaths[v]end;local t=am:GetScriptedBehavior(aG)if t==nil then t=am:AddComponent(aG)end;t:Set(w)elseif v=="tags"then am:RemoveTag()am:AddTag(w)else am[v]=w end end end;function GameObject.Get(s,aH)if getmetatable(s)==GameObject then return s end;local o="GameObject.Get( name[, errorIfGameObjectNotFound] ) : "local am=nil;local aI=string.split(s,".")am=CraftStudio.FindGameObject(aI[1])if am==nil and aH==true then error(o.."GameObject with name '"..aI[1].."' (from '"..s.."') was not found.")end;if am~=nil then local aJ=s;local aK=table.remove(aI,1)for al,s in ipairs(aI)do am=am:GetChild(s)aK=aK.."."..s;if am==nil then if aH==true then error(o.."GameObject with name '"..aK.."' (from '"..aJ.."') was not found.")end;break end end end;return am end;function GameObject.GetId(am)return Daneel.Utilities.GetId(am)end;GameObject.oSetParent=GameObject.SetParent;function GameObject.SetParent(am,aw,aL)local C=nil;if aw~=nil then C=GameObject.Get(aw,true)end;if aL==nil then aL=false end;GameObject.oSetParent(am,C,aL)end;function GameObject.GetChild(am,s,aM)if aM==nil then aM=false end;local aN=nil;if s==nil then local aO=am:GetChildren()aN=aO[1]else local aI=string.split(s,".")for al,s in ipairs(aI)do am=am:FindChild(s,aM)if am==nil then break end end;aN=am end;return aN end;GameObject.oGetChildren=GameObject.GetChildren;function GameObject.GetChildren(am,aM,aP)local aQ=GameObject.oGetChildren(am)if aM then for al,aN in ipairs(table.copy(aQ))do aQ=table.merge(aQ,aN:GetChildren(true))end end;if aP then table.insert(aQ,1,am)end;return aQ end;function GameObject.GetChildrenByName(am,aM,aP)local aR=am:GetChildren(aM,aP)local aS={}for al=1,#aR do local aN=aR[al]aS[aN:GetName()]=aN end;return aS end;GameObject.oSendMessage=GameObject.SendMessage;function GameObject.GetInAncestors(am,aT)local C=am:GetParent()if C==nil then return end;if aT(C)==true then return C end;return C:GetInAncestors(aT)end;function GameObject.SendMessage(am,aU,aV)if Daneel.Config.debug.enableDebug then local aW=Daneel.Debug.Try(function()GameObject.oSendMessage(am,aU,aV)end)if not aW then local aX="No data"local a7=0;if aV~=nil then a7=table.getlength(aV)aX="Data with "..a7 .." entries"end;print("GameObject.SendMessage( gameObject, functionName[, data] ) : Error sending message with parameters : ",am,aU,aX)if a7>0 then table.print(aV)end end else GameObject.oSendMessage(am,aU,aV)end end;function GameObject.BroadcastMessage(am,aU,aV)local aY=am:GetChildren(true,true)for al,e in ipairs(aY)do e:SendMessage(aU,aV)end end;function GameObject.AddComponent(am,aE,u)local o="GameObject.AddComponent( gameObject, componentType[, params] ) : "aE=Daneel.Debug.CheckArgValue(aE,"componentType",Daneel.Config.componentTypes,o,aE)local t=nil;if Daneel.Config.componentObjects[aE]==nil then local aZ=Asset.Get(aE,"Script")if aZ==nil then if Daneel.Config.debug.enableDebug then error(o.."Provided component type '"..tostring(aE).."' in not one of the component types, nor a script asset, path or alias.")end;return end;if u==nil then u={}end;t=am:CreateScriptedBehavior(aZ,u)u=nil elseif Daneel.DefaultConfig().componentObjects[aE]~=nil then if aE=="Transform"then if Daneel.Config.debug.enableDebug then print(o.."Can't add a transform component because gameObjects may only have one transform.")end;return elseif aE=="ScriptedBehavior"then if Daneel.Config.debug.enableDebug then print(o.."To add a scripted behavior, pass the script asset, path or alias instead of 'ScriptedBehavior' as argument 'componentType'.")end;return end;t=am:CreateComponent(aE)local a_=Daneel.Config[string.lcfirst(aE)]if a_~=nil then u=table.merge(a_,u)end;if u~=nil then t:Set(u)end else local b0=Daneel.Config.componentObjects[aE]if b0~=nil and type(b0.New)=="function"then t=b0.New(am,u)else if Daneel.Config.debug.enableDebug then error(o.."Custom component of type '"..aE.."' does not provide a New() function; Can't create the component.")end;return end end;Daneel.Event.Fire(am,"OnNewComponent",t)return t end;GameObject.oGetComponent=GameObject.GetComponent;GameObject.oGetScriptedBehavior=GameObject.GetScriptedBehavior;function GameObject.GetComponent(am,aE)local o="GameObject.GetComponent( gameObject, componentType ) : "aE=Daneel.Debug.CheckArgValue(aE,"componentType",Daneel.Config.componentTypes,o,aE)local b1=aE;if type(aE)=="string"then b1=string.lcfirst(aE)end;local t=nil;if b1~="scriptedBehavior"then t=am[b1]end;if t==nil then if Daneel.DefaultConfig().componentObjects[aE]~=nil then t=GameObject.oGetComponent(am,aE)elseif Daneel.Config.componentObjects[aE]==nil then local aZ=Asset.Get(aE,"Script",true)t=GameObject.oGetScriptedBehavior(am,aZ)end end;return t end;function GameObject.GetScriptedBehavior(am,b2)local aZ=Asset.Get(b2,"Script",true)return GameObject.oGetScriptedBehavior(am,aZ)end;function GameObject.Destroy(am)for al,e in pairs(am:GetChildren(true,true))do e:RemoveTag()end;for v,w in pairs(am)do if v~="inner"and type(w)=="table"then Daneel.Event.Fire(w,"OnDestroy",w)end end;am._name=am:GetName()CraftStudio.Destroy(am)end;GameObject.Tags={}function GameObject.GetWithTag(b3)local b4=b3;if type(b4)=="string"then b4={b4}end;local b5={}local b6=false;for al,b3 in pairs(b4)do local ai=GameObject.Tags[b3]if ai~=nil then for b7,am in pairs(ai)do if am.inner~=nil then if am:HasTag(b4)and not table.containsvalue(b5,am)then table.insert(b5,am)end else ai[b7]=nil;b6=true end end;if b6 then GameObject.Tags[b3]=table.reindex(ai)b6=false end end end;return b5 end;function GameObject.GetTags(am)local b4={}for b3,ai in pairs(GameObject.Tags)do if table.containsvalue(ai,am)then table.insert(b4,b3)end end;return b4 end;function GameObject.AddTag(am,b3)local b4=b3;if type(b4)=="string"then b4={b4}end;for al,b3 in pairs(b4)do if GameObject.Tags[b3]==nil then GameObject.Tags[b3]={am}elseif not table.containsvalue(GameObject.Tags[b3],am)then table.insert(GameObject.Tags[b3],am)end end end;function GameObject.RemoveTag(am,b3)local b4=b3;if type(b4)=="string"then b4={b4}end;for b3,ai in pairs(GameObject.Tags)do if b4==nil or table.containsvalue(b4,b3)then table.removevalue(GameObject.Tags[b3],am)end end end;function GameObject.HasTag(am,b3,b8)local b4=b3;if type(b4)=="string"then b4={b4}end;local b9=false;if b8==true then for al,b3 in pairs(b4)do if GameObject.Tags[b3]~=nil and table.containsvalue(GameObject.Tags[b3],am)then b9=true;break end end else b9=true;for al,b3 in pairs(b4)do if GameObject.Tags[b3]==nil or not table.containsvalue(GameObject.Tags[b3],am)then b9=false;break end end end;return b9 end;local ba={"tag",{"string","table"}}local bb={"gameObject","GameObject"}table.mergein(Daneel.functionsDebugInfo,{["GameObject.New"]={{"name",{a,"Scene"}},{"params",d,isOptional=true}},["GameObject.Instantiate"]={{"name",a},{"sceneNameOrAsset",{a,"Scene"}},{"params",d,isOptional=true}},["GameObject.Set"]={bb,h},["GameObject.Get"]={{"name",{a,"GameObject"}},{"errorIfGameObjectNotFound",defaultValue=false}},["GameObject.Destroy"]={bb},["GameObject.SetParent"]={bb,{"parentNameOrInstance",{a,"GameObject"},isOptional=true},{"keepLocalTransform",defaultValue=false}},["GameObject.GetChild"]={bb,{"name",a,isOptional=true},{"recursive",defaultValue=false}},["GameObject.GetChildren"]={bb,{"recursive",defaultValue=false},{"includeSelf",defaultValue=false}},["GameObject.GetChildrenByName"]={bb,{"recursive",defaultValue=false},{"includeSelf",defaultValue=false}},["GameObject.GetInAncestors"]={bb,{"searchFunction","function"}},["GameObject.SendMessage"]={bb,{"functionName",a},{"data",d,isOptional=true}},["GameObject.BroadcastMessage"]={bb,{"functionName",a},{"data",d,isOptional=true}},["GameObject.AddComponent"]={bb,{"componentType",{a,"Script"}},{"params",d,isOptional=true}},["GameObject.GetComponent"]={bb,{"componentType",{a,"Script"}}},["GameObject.GetScriptedBehavior"]={bb,{"scriptNameOrAsset",{a,"Script"}}},["GameObject.GetWithTag"]={ba},["GameObject.GetTags"]={bb},["GameObject.AddTag"]={bb,ba},["GameObject.RemoveTag"]={bb,{"tag",{"string","table"},isOptional=true}},["GameObject.HasTag"]={bb,ba,{"atLeastOneTag",defaultValue=false}}})Daneel.modules.Tags={Awake=function()GameObject.Tags={}end}